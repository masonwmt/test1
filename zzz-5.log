Attaching to InferencingEngine, EncryptionLibrary, SceneraLibrary, SceneraBridge
[33mInferencingEngine    |[0m [setupvars.sh] 64 bitness for Python 3.7 is required
[33mInferencingEngine    |[0m [setupvars.sh] OpenVINO environment initialized
[33mInferencingEngine    |[0m  * Serving Flask app 'app.py' (lazy loading)
[33mInferencingEngine    |[0m  * Environment: production
[33mInferencingEngine    |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[33mInferencingEngine    |[0m    Use a production WSGI server instead.
[33mInferencingEngine    |[0m  * Debug mode: off
[33mInferencingEngine    |[0m  * Running on all addresses.
[33mInferencingEngine    |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[33mInferencingEngine    |[0m  * Running on http://172.18.0.2:5002/ (Press CTRL+C to quit)
[35mSceneraLibrary       |[0m  * Serving Flask app 'MainFlask.py' (lazy loading)
[35mSceneraLibrary       |[0m  * Environment: development
[35mSceneraLibrary       |[0m  * Debug mode: on
[35mSceneraLibrary       |[0m  * Running on all addresses.
[35mSceneraLibrary       |[0m    WARNING: This is a development server. Do not use it in a production deployment.
[35mSceneraLibrary       |[0m  * Running on http://172.18.0.4:5001/ (Press CTRL+C to quit)
[35mSceneraLibrary       |[0m  * Restarting with stat
[32mSceneraBridge        |[0m 01:56:02 : cv2 Version = 3.2.0
[35mSceneraLibrary       |[0m  * Debugger is active!
[35mSceneraLibrary       |[0m  * Debugger PIN: 454-519-519
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] Scanning for projects...
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] 
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] Some problems were encountered while building the effective model for com.scenera:crypto:war:0.0.1-SNAPSHOT
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: org.bitbucket.b_c:jose4j:jar -> duplicate declaration of version 0.7.1 @ line 94, column 14
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] 'dependencies.dependency.(groupId:artifactId:type:classifier)' must be unique: com.google.code.gson:gson:jar -> version 2.8.6 vs 2.8.5 @ line 106, column 14
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] 
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] It is highly recommended to fix these problems because they threaten the stability of your build.
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] 
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] For this reason, future Maven versions might no longer support building such malformed projects.
[36mEncryptionLibrary    |[0m [[1;33mWARNING[m] 
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:05] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:56:05 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 0
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:05] "GET /StopSceneraProcesses HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:05] "POST /SetDeviceSecurityObject HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:05] "POST /SetDevicePrivateKey HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:05] "GET /StartSceneraProcesses/1/60 HTTP/1.1" 200 -
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m-------------------------< [0;36mcom.scenera:crypto[0;1m >-------------------------[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1mBuilding crypto 0.0.1-SNAPSHOT[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m--------------------------------[ war ]---------------------------------[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m>>> [0;32mtomcat-maven-plugin:1.1:run[m [1m(default-cli)[0;1m > [0;1mcompile[m @ [36mcrypto[0;1m >>>[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mcrypto[0;1m ---[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] skip non existing resourceDirectory /app/src/main/resources
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:2.5.1:compile[m [1m(default-compile)[m @ [36mcrypto[0;1m ---[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] Compiling 1 source file to /app/target/classes
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m<<< [0;32mtomcat-maven-plugin:1.1:run[m [1m(default-cli)[0;1m < [0;1mcompile[m @ [36mcrypto[0;1m <<<[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] 
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] [1m--- [0;32mtomcat-maven-plugin:1.1:run[m [1m(default-cli)[m @ [36mcrypto[0;1m ---[m
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] Running war on http://localhost:5003/crypto
[36mEncryptionLibrary    |[0m [[1;34mINFO[m] Using existing Tomcat server configuration at /app/target/tomcat
[36mEncryptionLibrary    |[0m Mar 16, 2022 1:56:13 AM org.apache.catalina.startup.Embedded start
[36mEncryptionLibrary    |[0m INFO: Starting tomcat server
[36mEncryptionLibrary    |[0m Mar 16, 2022 1:56:13 AM org.apache.catalina.core.StandardEngine start
[36mEncryptionLibrary    |[0m INFO: Starting Servlet Engine: Apache Tomcat/6.0.29
[32mSceneraBridge        |[0m 01:56:15 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:15] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:56:15 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 10
[36mEncryptionLibrary    |[0m Mar 16, 2022 1:56:15 AM org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder bindToBinder
[36mEncryptionLibrary    |[0m WARNING: A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
[36mEncryptionLibrary    |[0m Mar 16, 2022 1:56:15 AM org.glassfish.jersey.server.wadl.WadlFeature configure
[36mEncryptionLibrary    |[0m WARNING: JAX-B API not found . WADL feature is disabled.
[36mEncryptionLibrary    |[0m Mar 16, 2022 1:56:17 AM org.apache.coyote.http11.Http11Protocol init
[36mEncryptionLibrary    |[0m INFO: Initializing Coyote HTTP/1.1 on http-5003
[36mEncryptionLibrary    |[0m Mar 16, 2022 1:56:17 AM org.apache.coyote.http11.Http11Protocol start
[36mEncryptionLibrary    |[0m INFO: Starting Coyote HTTP/1.1 on http-5003
[32mSceneraBridge        |[0m 01:56:25 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:25] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:56:25 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 20
[32mSceneraBridge        |[0m 01:56:35 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:35] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:56:35 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 30
[32mSceneraBridge        |[0m 01:56:45 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:45] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:56:45 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 40
[32mSceneraBridge        |[0m 01:56:55 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:56:55] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:56:55 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 50
[32mSceneraBridge        |[0m 01:57:05 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:57:05] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:57:05 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 60
[36mEncryptionLibrary    |[0m ================
[36mEncryptionLibrary    |[0m {"PrivateKey": "{\"crv\": \"P-256\", \"d\": \"wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY\", \"kty\": \"EC\", \"x\": \"tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM\", \"y\": \"-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60\"}", "DeviceCertificate": "MIICmDCCAQCgAwIBAgIGAXrrg7qgMA0GCSqGSIb3DQEBDQUAMBUxEzARBgNVBAMMCktleVNlcnZpY2UwIBcNMjEwNzI4MDUwODM2WhgPMjEyMTA3MDQwNTA4MzZaMC8xLTArBgNVBAMMJDAwMDAwMDE0LTYwZjYtODBhNy04MDAyLTAwMDAwMDAwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLSHIOXNx2I6SiM4PDFvHMfo+BzXREevONRfOauwOOXT+RP+slNoPURPyGY6u8KkG5xjBXP5q56Tm+x3NFu3i62jHTAbMA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBDQUAA4IBgQApNGEw61+I5rgmlab0XO1Eq6agiJjpK3Oiob7jqWevrIrob5RdsRJAr6hr/0Kv8NlgL6vBwpgNpskDq0xc4Jk/9yRxYU5btkDCG9SpXcPUHlXui/dAoYG6C7qyCy7xYXF42LraInOlDHnwrYVcamXVh0lYucqD7MWCMex4kFd7Gl0KwsaZBhfCDvyyKsKkyzvIvG9khDEiRESM0vqStRRI0ffqF5M1xXKSO6KJU2nhO3Vq0Ltaj6Y8i9J5JoyP1NxAJyZPbUbdDhfJmlStUgwi8C8YdAo9hjK41S9vkxV10mfBYlyT4MBX6tPleOe9I6qkFvtpm1xyfmeyKuIucRx2uQYOzsCu2/ov9UfgiAx3rPyovvpELSfHcLSfQ84lx3UrfMgkMh7NTwCbTcfh3hBuuORfY/9fgRpNbeZb5WCcQofrgmfG2vaeEubahe92p1xYZlXN3Tfcy03VLPozo0BQc+ltpJoAB4uc5NdCzhOtdbft7C/ZtwiLpmiOjT8LNTQ="}
[36mEncryptionLibrary    |[0m SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
[36mEncryptionLibrary    |[0m SLF4J: Defaulting to no-operation (NOP) logger implementation
[36mEncryptionLibrary    |[0m SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIn0.BsYyM6GQmUbCmfQWfOUGU9SQkMYNCQRbXJueTH1bulSF9mNfqwwz55LywdYWYG0X71hwaaFYDMOQqf9bpMygSkmGFW7umtHOY2uATcYebanA9cza5Pz8IEvUAB7lGc6G5UtAh2wqRjBQRwtB5HRbg5xY6KwUMc_U5vXTzT1mRQmFeqqgh5_0euuhxE5g7EaGjIO9Vv4ZGLgwpz5htX7rrG-2S_LONQIqbJxV21OF193eHnxlr66Mt7brkIfEtCxpXKJT5hRApuwZdeDDLi3BmhcGMZh7skValoYZX43b0ROtXT2O483SDzDoN5MT_kGuJPPfyMrrwyVIMPcNAajqndZ6aCChzVo9NxSbA8b-7eeJgqKBEmpdXfaUfIN6Ln32eKHDInFHKRr2Ce-0EPn-qzn63hMU5gq2uLsqE-WdPrJRNcxedRK6y-lLXC8KgBz02huQ1nk7R8nBXZEC4g6zqacp5xbMTpVZ2PrSMf-MznZ685vNxR3kys5tH1N4fg8h.zambztzxh8guELMr..uHZKZ7ze7j90zczGX1kFCg
[32mSceneraBridge        |[0m 01:57:15 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m /usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host 'nicela-prod.scenera.live'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
[35mSceneraLibrary       |[0m   InsecureRequestWarning,
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:57:15] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:57:15 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 70
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : {"alg":"RS512","kid":"00000002-5cdd-280b-8002-000000000000","x5c":["MIIDvDCCAiSgAwIBAgIGAXKCg+HeMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI2MjBaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRTEFSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCuOSjirBX+pKkdiCHO2zsdTHOW4nTewQdgYfG+npRJ2/79ooiS8PkXFEY98eCUD9YyQuhxKIbGBbD2+YZGPv1TCdShRu0J+LuwVq3e/0r64c67HdUt7LMSjtSCVPF82RW083C8rUDXSBWondXiAHYjriOsl12X5FOK17aYNlvHh9Hzx6XCT5lUNpEu+fcAH9G1+j1XI/gLcsGML3iJ2N0wsPR1ryaSVM5JvsXE57aa77Qk6uN7P3RbJmg0hevZp9sboLkJgBim8CEvJsqkE1hhuDbNaAzGa49tmAoFo2j7JysRbJtC5XhEmBE13yl6zcXynpV569W+13VVMKmxS/1EsdrwSIAZN9AwMRvSqXPCn1ZPD3XPrbhvBk62nxMkIfe0bh5G/S4uQUejqqCoFTpcXSVIlxubEmO3Ph0ocpp172Ky7kI3Y93v/XjrcdLRQYQ3tXA1O/+x9F6GAj4cgN4BrljrIazRWScd6beFv412Gu3CsKVFClmy90ARiCyj3TUCAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAdoJAyuaLb+wOIhP/FQjuEPkPi9qYvLC0d0LBYTT9gPRpKIYONP6iGNvrYYzrZCjNWEztLmnbkDykK9HZsoUt3OZu3P+0k5wUK0IMXK6WGPmYKkEmOXDAGvW6T4wOxjLEWybZS+0CcEm3WDPX3al3+r3qV1FkYczD6s8PItLcIkl7PKzGMd+GUt3nbGSQoGnCanC+otKbR1dM/LtcGr9+pIxH9aIxScLIdKQrk3LvmHiKpAHlw1uaGQjWzQE2qtwZfRIOx6nAkTUC7Jw8RDFjSiQBfyZDH4YvF0VJxHBXvDoxXZIUz1eKZfaNzGsnAd7J2BcnrzgDnNgvxyGjf4VlYxGpzE+ycvRJcg5lNkjpxflbeIoTOa+WcwYLsh2BZLLTVw7HB3wHAaIu60JMSSXr2pp9PaK/Qw8T+tEnBatxl2u37V4gWUHfgtG38Ee5Dzo/cs9fdIDyzXbrzRGPHmwLaOYztYUKQ0+0+PWAGFE4P6XqezWWP95sigB17+LAEk8w","MIIESDCCArCgAwIBAgIQemQMCFVHS7SIPlkn+4fGYTANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDExVNYXN0ZXJLZXkuc2NlbmVyYS5jb20wIBcNMjAwNTE5MDQwOTQ2WhgPMjEyMDA1MTkwNDE5NDZaMCAxHjAcBgNVBAMTFU1hc3RlcktleS5zY2VuZXJhLmNvbTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAJ/WAejhOYRJk6qsJjsz11bZLKOf/Cf9ZiKXUhLWMs3xwTRVPe0qmH140WxRRe81K2spFEAdhLbKSQJgGmD6jW+3+BQ/BdEno5+SnRbd4/TsMTikJqKco1t6Ci73DU0pAXoHxK5cRrTzBzSukeqck9XMrQ00ErWns6XZAtlP3Z3diLjXw+MCitSKjMznJ+9A1DvyiJiEhRcASaNwz+/Z7eQ3BE++hs6jIuAdtZsJvHMtLbi4/k2ynf3xuxXpFbm1dMG/3Bggu9o+/+JEPPYesyQ+RomAOR+Vtxhbu8FpjuONgMWybHM//bWDiEe8aBmmoxr7ziZWzQ3VAutHIp8i+BAMRwjMWSBrWo6dahbRjcEUJKgxxGz3+L3Yy8oZrt1yonO/9UER0az1cwvWgna52JVLDTZxOqfZX3yEdVcu6ljKnNfUQC7+2r+/pGcKvXyElNt4zntldhD1/Eq+Q/2/Csdg/c3ZPz0rOzWAb0ExXRz9Xpq4gCEJE77jnm10UbpXBwIDAQABo3wwejAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUugh/56zRvA7/SMKk5KJYGYwIPkAwHQYDVR0OBBYEFLoIf+es0bwO/0jCpOSiWBmMCD5AMA0GCSqGSIb3DQEBCwUAA4IBgQAPmabu5G7ET+RHHvlqNZkdExPL4tlmEBuzcB5uNUA585DSSIYVskiL2uWIRtVTkcMQab5UqCBlBoLajcVtfInGKGGxlHq3q/B7at2D2YYrgPGldX994EBNlGZeBne8KdM9nRYDy1znJj2c8TQDZo4gvJ6nOzdv4VjTvcLQIDAHr0tLnm93AhVxeCg+MQO8+zLHjNSeza4JI8JoolN3BIhYuy4N3R1HrnPzz5xeKmj2uRzT4t+GlT+eJXL20faXssh4wKaON2DzKZriqZAQFDoovbhYw4Ox/iT1djxJe6kluMGi0gScIvYR1pCJB6urgSH9IDM/LedY8Ox4PlQk5b3T46ZWQrXquAq0ava1xQE+R+x6nK4VKc7FuMFy9BAcAgbfH8DiUVZwy+nvVS4812mcv7ErqhUhiWmk3mpKcNEus1t1/OFY9p51F/Jnz7Mc/Ipkpwx0Pe4XqiiHBP8egz2J4JwKnHlmf92q4QKRgXlu0czRVy4FOENqiGb3jH8ePuU="]}
[36mEncryptionLibrary    |[0m encodedCert: MIIDvDCCAiSgAwIBAgIGAXKCg+HeMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI2MjBaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRTEFSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCuOSjirBX+pKkdiCHO2zsdTHOW4nTewQdgYfG+npRJ2/79ooiS8PkXFEY98eCUD9YyQuhxKIbGBbD2+YZGPv1TCdShRu0J+LuwVq3e/0r64c67HdUt7LMSjtSCVPF82RW083C8rUDXSBWondXiAHYjriOsl12X5FOK17aYNlvHh9Hzx6XCT5lUNpEu+fcAH9G1+j1XI/gLcsGML3iJ2N0wsPR1ryaSVM5JvsXE57aa77Qk6uN7P3RbJmg0hevZp9sboLkJgBim8CEvJsqkE1hhuDbNaAzGa49tmAoFo2j7JysRbJtC5XhEmBE13yl6zcXynpV569W+13VVMKmxS/1EsdrwSIAZN9AwMRvSqXPCn1ZPD3XPrbhvBk62nxMkIfe0bh5G/S4uQUejqqCoFTpcXSVIlxubEmO3Ph0ocpp172Ky7kI3Y93v/XjrcdLRQYQ3tXA1O/+x9F6GAj4cgN4BrljrIazRWScd6beFv412Gu3CsKVFClmy90ARiCyj3TUCAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAdoJAyuaLb+wOIhP/FQjuEPkPi9qYvLC0d0LBYTT9gPRpKIYONP6iGNvrYYzrZCjNWEztLmnbkDykK9HZsoUt3OZu3P+0k5wUK0IMXK6WGPmYKkEmOXDAGvW6T4wOxjLEWybZS+0CcEm3WDPX3al3+r3qV1FkYczD6s8PItLcIkl7PKzGMd+GUt3nbGSQoGnCanC+otKbR1dM/LtcGr9+pIxH9aIxScLIdKQrk3LvmHiKpAHlw1uaGQjWzQE2qtwZfRIOx6nAkTUC7Jw8RDFjSiQBfyZDH4YvF0VJxHBXvDoxXZIUz1eKZfaNzGsnAd7J2BcnrzgDnNgvxyGjf4VlYxGpzE+ycvRJcg5lNkjpxflbeIoTOa+WcwYLsh2BZLLTVw7HB3wHAaIu60JMSSXr2pp9PaK/Qw8T+tEnBatxl2u37V4gWUHfgtG38Ee5Dzo/cs9fdIDyzXbrzRGPHmwLaOYztYUKQ0+0+PWAGFE4P6XqezWWP95sigB17+LAEk8w
[36mEncryptionLibrary    |[0m The payload is RSA: {"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","DateTimeStamp":"2022-03-16T01:57:15.774Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJ3dVFtSlZLcTFNMUtWU1BzS1dZc2J4Rk8zTUFTVm1mTlROS3NyTThFRXZZIiwieSI6Il8xQ0t4QUNMWnFUR2t6dks4QWJ3VmV2QVhWU1BNbU5lTHBySHJWNTJra1kiLCJjcnYiOiJQLTI1NiJ9fQ.nWBsfcR16OrBGVuzK0vEf7izRWvEdPe2DyFOz35aNdewPrl4YXLfig.05JyRjPnun5JXZLT.._pMNr_YRLmOwX4vC71jK7Q","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m IsValid ==> true
[36mEncryptionLibrary    |[0m ===============
[36mEncryptionLibrary    |[0m {"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","DateTimeStamp":"2022-03-16T01:57:15.774Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJ3dVFtSlZLcTFNMUtWU1BzS1dZc2J4Rk8zTUFTVm1mTlROS3NyTThFRXZZIiwieSI6Il8xQ0t4QUNMWnFUR2t6dks4QWJ3VmV2QVhWU1BNbU5lTHBySHJWNTJra1kiLCJjcnYiOiJQLTI1NiJ9fQ.nWBsfcR16OrBGVuzK0vEf7izRWvEdPe2DyFOz35aNdewPrl4YXLfig.05JyRjPnun5JXZLT.._pMNr_YRLmOwX4vC71jK7Q","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m Before ::{"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","DateTimeStamp":"2022-03-16T01:57:15.774Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJ3dVFtSlZLcTFNMUtWU1BzS1dZc2J4Rk8zTUFTVm1mTlROS3NyTThFRXZZIiwieSI6Il8xQ0t4QUNMWnFUR2t6dks4QWJ3VmV2QVhWU1BNbU5lTHBySHJWNTJra1kiLCJjcnYiOiJQLTI1NiJ9fQ.nWBsfcR16OrBGVuzK0vEf7izRWvEdPe2DyFOz35aNdewPrl4YXLfig.05JyRjPnun5JXZLT.._pMNr_YRLmOwX4vC71jK7Q","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m =====PRIVATE_KEY=====
[36mEncryptionLibrary    |[0m {"crv": "P-256", "d": "wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY", "kty": "EC", "x": "tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM", "y": "-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60"}
[36mEncryptionLibrary    |[0m =====appConrolObjectResponse=====
[36mEncryptionLibrary    |[0m {"ReplyID":0,"ReplyStatusCode":200,"ReplyStatusMessage":"OK","Version":"1.0","DateTimeStamp":"2022-03-16T01:57:15.774Z","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJ3dVFtSlZLcTFNMUtWU1BzS1dZc2J4Rk8zTUFTVm1mTlROS3NyTThFRXZZIiwieSI6Il8xQ0t4QUNMWnFUR2t6dks4QWJ3VmV2QVhWU1BNbU5lTHBySHJWNTJra1kiLCJjcnYiOiJQLTI1NiJ9fQ.nWBsfcR16OrBGVuzK0vEf7izRWvEdPe2DyFOz35aNdewPrl4YXLfig.05JyRjPnun5JXZLT.VxHivXgegTuZj0GcneIADmQTpVcq9A_5UhmibdglmCaMCVUgOsww4sYeUfBUWew6GVjsDvvDCQju6Y29s-DbsAB_gZAkqTumuw7w4X-m28m59BOgJf7MtacQsPPB2We10x-W8a7WSaN4cgdgNtJiU7bXmqLXizkwc2Iy5WO9vq4Syrz4QQZI2oNYXBUvrdsoqle6uhLqG9JB5eFQCyXdXIT5BkoY0uJ0UqP43KUwyoajQpRuPdjxh1Z-oatM3BqHdYxM2PP0AyulnlRsrhVNGt_Jqf6ELx8wyK-1Tx4Tvq5E7hlbP_gwAvSZ-3pXhUKTSutikvAs_j6V-7MkFD8c4y1jwGqHO0qVmcKIYcsIkDShHsbpC-zFznOUmgZ55soQZOGcJZiSIfFNxdxKB0P2elNPviQZnR3TArIV2nlQyf2iTRBCF6RSct-Kf6c90FXzWU-cy4GtvytipBgTDL_kmOVFi5hR1fRYaJ447iQ7iKM9c2xKj5Plge4mhoyr1qXZ2mC2F-qKWwwexoF6uIvYzswxUFD1jDHvbtfjQaB9-vnmQ8UABHUmQtHuzd5l_eoIEEemWFI4hLHcf0ozfCWH_cEMK8athMkfkNb7WdQrCSAbljS3dvmXXp1e3VX8M1Z2fasy5rluUZcEqgKgERDkgf2guv54fvtmjgC83QEzpQqI49z2kV_mTE6Gftrmr7TY96SU03dDUMmDPSWcgmipfNnkAp0kVEVh4cfAb-52Lw7hEQwYdZvJZPZR3mPW5xYrSlc0rSOiUYf_WjSyFSqnIpHM19hZxlXV8KGU8U20fNy9Mt13hSWz1_cGEeDz1YvgGuTZ2u_4q0jmA0I711etOaK72VP1qcaa3tC1N9CGKSjIONSGgjRcYpmz1atut0dK5Ol8czDWc4tMzT3Jzi4elQeu6fLUX8AZbBvjYTo4sQqP3uPrf4xdjpW-J42_ScPYq2aCR2Kp0iaAv_MQGhAWAcP_w_LeraiEgmobCkpE6nqwG85pSeRCxJCbTKhoX1ZupwzMopv6XVHrC0CcdaMOO0m6iQixEI4C28wp9eoPsLL1i1-0Swwiaw_GUtWDKPiI33JTPbgv0YIMFKAS9MW7x3-fLzAbsI-4-H3-fcx8zhyDSfivQq-5vg2_bmNrkoKvFqBKmU8b1GXzQuF1yiiLhrDBAe0_ErJ2sI3SD-jfJwS_IlzoT_knNMCXlClFrnB6N95ETcXlEwIW8J9SLqnzWyDoZ6ZopOTMEFQj7P1Nn-eGa6gv4mxJucpXqGrChH-LNRSFIBchLIMupsTIwtGPMqZXrT2v6RSc2oiYkMaipU_t0doJhYMrpBDof-F9uONBWOLaxTjBH2tQ1dKPVDYEuV8CIl1ng761kbcv0UhmvmJmCPXXuMXDVKn9me1Es6x86W6Kvu7k-2jrzjZCdUedUYvYc4v7r1Dc4ToXn3rIxrlpMD9TOn3XLpxXZygvfqXPTlrcccx7yvuIYNlmsM8S3zsNl7eE0yDDF1pyKMwejMIHD9mX_QSeYu49SvDrc34Nu1-_FE5N9T-gqgkesKtqOGDk-kgHdC3KhRg_YI1xO8go1AlSOU-RcgOnER2Ls4hG-dG9RCG94pZjrvgIdOv5cRY52Wa-0a-lBp6MOCGKMxSdn-qEHow-qWpzN3ja-vzxMbl4cC8YhGlx2FafpwclX4jUuGTtwRbqOQAER-NGYRNp3SQbR7sAe3wGiVCqIa4SMIi6AYHJWBBVtI6nqyfZwEFFoUQeW314TNtLjdGFHRDmbrYu3xoPuobIujHZpKoV2-D_KYHzJKYK3z8fryVTDeO9WUWmIPm6XtQXQSAC5LxbnbdhsAPz1mXPcODzPcOEr3OCCUmy2CQEkRlYbtvN98X0GbaXsx9VGLiyYBJyLJwwlFeSrcZuhEsOU1vVjWCcS_UZ-j_Pq1Jy2DI19xFMulGPs6Qo4dUViFRI2rc9Tbl2MEUEmsVXeMRwr5dloJ0QnB7KokEMBB7w-Ldq42qnicAAlYeXVvTfXK_tYfUmyGv67HrbHNECOdqNx-Pv8QTOnLmYYtH601Bsg-qS5FBz3gVif7HhCyArCONZTGRV0XpNbb0WyKlffNMrNqZNtubxPCHHpPKgsAqpT41GWC3fNNpHHf7XsiFI-4I7_WAGTvsOGWVFRwuh3EJUoC3sWpXz-_N5jpmNyxCdtbGezSBezdByjiaH06h1Z8FRNDFUXJNm8Wv5CtQp3lLIkPjuN4aL6h2Ogbs5agIQwb4GA7u7gqVsinoSHI8C45jr1IS6UwSQFKuwfByibaLUp_2-29L9iQ2uvaS6XAVIWCmNqsdogoicoCWyBu42k0wsKKaaCmP9A3Hu-2LTH2u8dGXDedeiDJuFtEqqomUl7rAPlSM8iYW4t0BL6il0BUyw_IHb6IwPuA_j7kQVman3dMKdHS5Qec9OhPMKyz0RTh8FhpKFHZ8NnnN6HEn96Ed7pnV6u4gEfYJkm4W_7rcUFfEkWeOXM4ihMAUg1Z5o8VhezFCzgm_FgGR2kD1gX_QAJwh2qO1JaEhG2RSEVLk_U9YoJvVeESK0z3Gw-9D149MgRxdE7XdcifMwvG2UnFMjjgtMhEHSwRv7X8EA5nmE4XT1XdiWUKVTlbhh37RasjmvBEfChL5mmZ2--KOCZeOm4F6gI6YPcZ6-v3dZiSlXENK175Ot2yUXO90aWjpCIdpll5DIEDPzy6pMGRNFAxYxinCkbvGJJrWVgymJDR-5yCZe6Ic5LpJHdhbK6SFfd0TGRlw5USzxefLhaIG45TrFndkRviVBapAxfx5TVzZFJqqgkZnvWJTS8JepPlF_1JeolR7bpX5LEWhQMp6-mlyLBfAvoJP8sMHNkwXLFVMqVGksWe4quDzdYUb_3StOu4IGtSRzd6NI2eYKO9jCQOcuHhWBBQpLDYKj3PWi94bCX-Dl9zF0KXor5w455NfJSTD1tX6djMzewtVG2fYLOdC4Msxt5FtAiPA26PcjUJraa7CAYt-ovIiDypdsPEYwEu6VZEzkqVELpwf_x-snIQ0G12ytxwlEa4F5O_TMAkVLa_0DeeS-eM6kZh5YVpfom0Pdh8S3OdDFXDJQrSrMjlgDDqCFcgI_sXm8xgUDHMEZ2QsmV-_QWMtW7yUNd6kFAfMWpSsTHFfOyE6nAoKW8K_QeCICU82ocseV2l9jZCggW1kDTlvEOa78eMBJI8fn4K5pF9nY7bbou0VK9_DrhV-srrfeEUps-cyPnNJKqsXmbA-hEdXI0PJtMnm2Zy77ibSlJHa_L_zvDCLW4sASjIeJUsFD7O18o_SUPCQ5_FT5XuenF193AqKe6GRqmX9bjL-aJMNGGHTf-JA7hAjMUGPp7Oje1IZWH5lAbVd84Tg0j2VYWdCinhBqL8sh_peL1k-uEycWhRCuvMBQSg7-z_H3wVcdfKbHU4DCCcV6m2r6LervN67gi53s6R6agez7iQeOw1BLZ_fVoEQnR0bnqPTuyq9tB62iN1YVYQt-HSa-wBmW_Rp2n5HXtY4IzuHd-yBwstJms5BO9-G28NTH6UW0GnZftYuEISrZcQI6aOdUd19RQFUwvwokfF3cexUiY94frCbCehoz1ImSEllFLwLgAAlGjE51LiWh9g4OU_wHOtTkhDrNTtoUvlqMLXjGQ5MTF6GRZ_BZLbm_Bbl6KFPqjQ8OMp8by9wtiQkoNrDe_z-HVRUSw9J186SlIJ9Bact4qBupZ8aoaWNDyfDzGRxPv1EgZhkLX-i08i1YnE6Rcy7Y4WXKw90W6pyTvHJnLebGegv2jm8upEcnkMS-XQrxhwKbB8NohN9kn3ILXuAsgI_BYnBXMXevTgP09QGDfPfT9KYVoUCkE4mCls6ywtfJNsvqBVIDfLYER8S2Bj7LfLpbK_Wpc9TaygCoEVST0l0UWhUxQShAaOiJwxq-uDANu-71mhjEulR3yQrWt_jKH_VJLt0m58FHUearPJDsHy3m0R1tZpB2tKNI9PUWATEALOAagJk8SsISSF-4sTsUSqKDLWRLrxGKHOTh3dq0Yp_rlAMu9AvQwRjUvIZ01-KBlG9Dck08hGOntz0dNjFfv6lcXUnAfjdzVG4SDGfLh1d5V7TC8op0nCLXE_fx-ZE7vPt1EJhBgwPIUaCyl8yrVtmIlRBW5EXjQ6ovUNgVvKPDqva5oZXVS6IzXNE7zDNuCXFQ8sCc02toALu3dNnDAgOzE1l8b_EJoMkRB_ytYl0rUIkER5BpUEXMRHEBehu17pLA7rj-HJ0IRet3xVASjimNlbv3cvIIN58VW3UBVZhmHraA3uWu29AtiHGjS2BlYKXldSWp8aEWW3dCVG9gUH9Z3i8HzzMrkmYauFHn942sIYxi9UnEzJrPdXfUUfMj85YeMZl8-pAu-R-jz9yuV_XW7SnWnE77K_Ke8fiPHzR4_3Yi-q2qOJ7QSqRLBkwR8bURNBHM0Io-XZILdDjlXjxMteahOjo-rothInYSmF8d7Q_fIqamSBxaYVc7Z7BLzUlHmg1mEsL1FDwTvy7oQVdyLWBhjfx5t44WRNk0YXfrfcgfAby3W6mK_qaTTn8_XI7_MnB0KcA7kW_GQimTKX-oVByTVZCli7P0XqF_93k8y1XL4QMAuzbBgJIF5VBw8QODCdTYKp5FLLKcWKnHbxH-dni_cSCzhhB-ATWi4MiJUW78WIh6Z_wR99knJlXQUzMh9OPzr4KvpkudiLmuO87qKzXmIgwdoCSxcFZpe4s9VovyDqJZoUB-eYF8z91Oasx3ci-ox4dH23G4fFkMeVoLTRAUyTfIqcALjNiSsfsFYf4_Q1rAInh1r1JgoUqdGzLnTm4duh9Md1ht6DfHSvT1ViYyTib8GRUSK0mmFKFnzp9u_LKu5uFFTYh_yyQy-ZKFaJz707m2Tsuc4-OS-ss4ZSwMSvoCzgKLZBcon_WM_KwTfSFqMIfbfyc5THtSp24fAmjks95cITVI4wU2fKr9WpojHo19xy6WHL5V2IolMT3VeMjU6mf5-x5IATQw2ZOKKKfvDDbLnjxy1nPGCPYPY6kfHgr5Zbt5YWi-fCN5KdeOu3kHd7wnXV9wA5_ZSLIrIir1eHp6EhpzvP2lAy9HCkJS7FeNaL45iXW0ec9MC5gcLEB4I0JGatIbgi3DW1bxuk4GOKpvgvQg_lo1CavYjyH4abkWTQJNPlzJDcz88u7NLdybz11EeGjU39A_7VZvA-IFNz0alY8yOlCs49GU9WOQAtyRXsxmWFqe3DAEniQHDObasEUJMQiS4NdLq1-xQNUplfz2n537u22OjtnYIkIjaYpvLYTv6ld6Ne33csKqyVooBg6URGCdWMQpWFXlczFg2v5Lq7G_ISc225p1z_9VEF9In0xFJXkuQBV3XdHUok-SxQG3rCau8gM4gFEaSFmk9wRJskVwVtEwXrOJFKJ72OKYmOPr4zDtrgzADitziQbYamOjlqv7zWP7yv8maaDeYXohBscSo-wN6VxiNaTJQPCLKxHBXJELy0aeAV1ouWRCoXR7dnP8iwCBcB7_lvjZ4RXUnw4xybqgNOftavBblbh9XRdXiVg8WZGiAcHvufxhNkbQwjdIDQ1HNknvnZVmtTCmaTn2l2HcTfe_f6H57qhsCEJdKlC7ABZ7xHgNuRU0iXRZTBhKuO5gPDlL0nrH0UqHRLXBM_CDalvcOP2Cg08rUrQxYlV1zm8naVOUc3QiQRQ3D2gyOPkBuLQtsju3xZzaxC0leok8dgmpIx9SJOVbP8AfW7BXEZsFATgBTffKQDaYz_KvmBOiA6WakR-IuYLGfTVziPp7khKsCfp-X98K6jMhYRp2GqbRC8SSFntGUgkMoqMdf2E1RAn7m0pSiTzGAP8CaIPxqtFoUjXedb4Q2hQevE6k10HcH8OMIYF940aYPqVPm8Cs_tkYSXi1nn2qgw777TtORLFunZFc6vqBgx93iNz-p-Z_GyAKdrYGEqcgHYiFfUp7nh_zj6eTP9xVUd-ZUgX-7Co7yvkh6MMUyzZtXxkCKs-RFM_8cTj59CKV6CGXaT6_yqpIUON7MzoG9OLCkX8Im5YuSEthy5guAZLC5ZhTF6CoQ8Pn7OpjS1d8oLnWVXeoaGSa4B-Kj_LoS559uAC0fMPiOleN1UoUix0VKsH5hkvqeP94EtiRqafm2c6fOFkkCvTstwx2S55nAISU51oPYYXBk75WoSaL1XfO18zdNum0uqvgN9SkKYyTeZt46cYG6IbgmnhCOnnS6JA83v1vUaK3uh5eef7m9_RsJrEipOT1ZbOmdn_s8pH2Ox1OM8IbsBTUMsIaoDkJv74rURRqqzdVB41oDeNjAUIHMiOQ08CMOF90VmCh1OcUl2n3j9Pe7E_02dGYl4-vbQ8TLTwxaK_6KpoagotIRG8tPOv10dYSFtTluz3l6-CCq6uhcKPgDKHizhDcawLOI4CwV1zWQJ2lI_OFdJto0YujoZ8jdh1k9eYGJM6Ah3yKJcsvi6fXqkK7VkbpG9OJu-4X4dELLT9bm1WgumS0SSOFDc_XEGJpc2G5cs6BIyhwelS75JJYep6ExenIck3Wb0HgjybQaarl9ITSCEosjGEut2iIkLzn0YN6-MSM5PTTp99VFUd-emLEIwsNgGVQYVDyNs15WZBA1KlepDKsPc8xoDg2VVZ9FHlOZMwsA3DIfV3ahVgDjl1l1sf6JajmOGZwpO2tl3xt6p5e1_DN4_jfMBAVD4ARfAVTYNTmyp3FeSO3CDk8Z5Q3765pkLjhe7zUCZ8kU1gMWHgQKq9OlkDK5H6qmwKnTCdkrQCBJEd55W9EtxfhRHqY7yckJNQFTJXSgji4AgCXqOBRemH1cr-YotfdizMTgF5lCe26qCG1sH-FjpFIS3dlRGT7S6iuGC12UPf4t8HgvRw7NWNSDpn8uiIzsdcTlHO0BN5Hc0rCK-W5GN-Yw7pej6v2GyZfBsye3LVCPdPDU1rlqlMB-DyiMBcM50Ka2hJll0YJ0j808r4EjwNZI4ovgriTxpR76Y2__CIHzUWJTOay2LmkXrh2okxypqDxCXXOhbrh58nyDeJU6FbCQdizV6ZBVNQhSHNJEl_awUGZhQweZ9HlRh7R-qcbWXO-NbhLmZQGI2LIT9rtXBG0-Nkxbu3AdST-L0b3FrxSFweJmkIyK_5t-rwoTzV5BwdCtjkX3LMLzjbWgdourDabF42vUJgjZj92-rkXhpeDlGk5KoCgPqJHIVOYpyh3gsICVU5gf_ykd5WKPrKrJkI7LXVnXx0S-SKd5eFzJhHQrzA3_xETCFbVDaj7o5kUq4kGC8ZjW-VDe1XxFpMpJcjwiyQWSApvlHH7_YkkSoKVpWRpjw0825hr4M82D2G7XEVGy76Vud2KESmEvaCMhpVDafVx6Je1EXqOYq58LZA5hgGhblXsqSKIcZikzp8tSwXHWOo9SrmyCbH9MpQX0TiFWcUdegq-wXFgGJBnImDPYqyYcK82vqhZAIOY3MnOfD67t1gyTaAGtXfsMA450Il4ihSfzhzYM2hNAc8lc8u0N4y7mz93nm_hcqPFxBzqlke70W0F9XOAKE7M8cwX_hBvimqigQR_KPObOlLashbe_hd9A8b4zmDlp5nNnrY3t0WdDnRbKFipQH00GrXETZKHXs-o4Mah0jak-Ay-ylOgPfQ0VVDCSzKRZzHfck3c_rskKP7G9vJbxUHmmYf8aOXcuPW-h8-mclD1q19TJF7xgL-ARTIxHGw1ZCBGtVwEZU3LEIepRrFIutPM2CxlbKvLg7Bn_P0mvsMTOQpGus7NBYXb6qNg7PRQZPi19pr8J7mDJjsm0GReGaUnkrFgTxVd_m3TaNXg3v3M1lAp8HumPnq0nkAXJBmtYIXH397dBkKr7iJpo3e5w9T74ndv4B3GY5oOLSRc_VykvPlltK7I9HBIx3XytpOi11DMmxA7Rox-NCCZQI_sx0Ei71iPaa95pWndmwqndbMU5vkX-To7mqZy7wtGCxbTBINFtypORzr4F8jUYxMsNqaN49kw3pKZdtdTyg7OwMZN27CatizXrU-1pyQXqobVYD3ijO0268lRJMAoXh33tLxLPwtclNVVsNThDH-3BTfuWAIgW8mK4B2ohX1DHV92v2KssrHcdSKtK1DEEzIZe4MglBPzzfR8moJhmMZC4v8d-FO6JLooQj1AxKzLlNREouGjmZ0mRA9cHlIgLYlPcio6WJ9GI5i18FJXg_d6-EyRsQ45G92WaInZ-a1_ndTkzUTHaF9gi1F0TDdZs4XO9Czc6v_o7_jjfUkUSyhhyL-ZwaUYApJy5BePFs6tes5dIbPts21J4GKtAeGeZ_wJ9BZnWELeUZ9pAZDzgYyd496Mhvf-pQEEv4qR1m7fyB9wS9r-mD--iJcMh_KhdOUWkcBa3H6ThsLnawFL2OKrlG9CuWAjZhcsnwib8O3dd7kz4kp8mmKtX4G4BpjhSZIeTZJ-t1B7KmJdKNhRkv35tmMiSvjaCayge4r5UVfBeAQDiDIw3nzjvpgNtEAQNkJS0E_C9EFhbsCrzrEe8_kFHdWYAK32WI9_q7swYGsQt89o6H_M03n-P-ss8I4Qg_0duWABroy7QvcE0wpOS8-Rltggcm9md97-QOhjREB6LoPR-DZGCy1iYOcZSGsJgKI85qf0T4nCyrSJhv9iXcgvsMZWacTtmoN7K64P9yD5ZpK7ZU30pLBnq7FLcwE-va7Tt4-SWId59OeZNeuW1CJ-b2tyGwC2wUSXp3FZVn788d8yswDKyrd8_3OclD4IbnISSnA5CmsFewzEXov5ytCwy3B1p9aoW3X7ZX5hhgeCCzEYAAfk2KVHLYH7c267lHRBcXWnzSooEmlDgprGm558JjHdgapwDzf3Fs5EDzVff3OYw6SbdnpPowrHNrKV7vUwFboOMAhI1dXsoAEspcB-vsYVWOdvZCIryZY_AL9-866r46rxKDl_cKNmU84FXdgButmq6_KjveS5Mql_kPtvc_ltryNKovcYFpCnzeBICGkGM3mCJBfFVvecLwwsHM21fDpMUPgFanOJ5VZ8opjM6k2cEJtMzmBU_RM2-MVvSStPFybHVo6qUL5_blnqF0y5QfnpnGdUcAP08pD9R_SCHmKiO5c5ymP1XDfqQI8Os7AybZjyLDkdefBlJ7kf0oi_j2jg0UBPAYTn-ahC-hW-kst87tdOclOR0FE8NcXEWDNNEaL-HDMnUq4DKnxr60u-HxxY-r71YIk6lCtoU3psy95i46MS7iIAajjS7NCzb9CuFRgg2IgYmvP_rECtafB-cR9RuRK51oArMRZ7QJmb-YXKLwEoWGMpY9-SL6B3DhbSEhptm7w_OYe573_0_HlJu-BeClAw-oB43rk5Rce5maXxBZmtx8y3v5d8-VacTUZrwx8QhhXHVKnFO1GT03xtgzw6iYcI7THdfBOQ6F77Bvx7iGc09LbC_xDt5_x0PalAmf1JTkumRKGZrXbJjs9bL6jTs5E2JEHVr_YPKtJ539GXb31MF-SxaxO-GggAps6jWiXByohmgPg1Z27vOWw-5MtIxFf0IwIwuMqYYaspfUitIzl7uSmMIfjdCLTKzRu05SLslHBG0W5StkpgUZ1KcuJJac2h2VjQMPz9NI5_-sPkrTDmsNNzE1-gK0ANJQPWRHveefFWK5lobXaAPw9Oin7DlD94kshvKiriXrqqyD3IET4IDVzn1CaoqJmNpqBMBxNAPZ-p_yui7EJp46IT2xk3VbdsxyGoDaL3v5c_FD5uU_voPjbAQmH__NyB4A8xs8GqefDqhD48ZXQ7kCOP0NIOLG-FNLo0qiqAAgwpHcR_W3A9PV1Mc-XuT129UaPuWt5ILl3XTwoR6lb14rNvMWjerYd8hPdq85qLyLjYzUcScCEZa_2UD2GYPknHJ3EsIts2kTgUkgKga3VorXvavd6P_T7OsTid3Pv1fFcw72LGIDWQoiNyYPhmlU5UVa4SYwz6sinB9AcfAkIZFQ8AyOJA3-w1fIB2fF9a8MlMds3GWsX4qf41B_fWIPD-nllo00_6qicQ9z5ZZ1kPgEF0w68XohYbWIL5ctKOpWdu4gFWgPkC8z4c7EVW2f-YE55JzxePqT3-Uxo6bvzB003ov4hBW9FHT05zI3cgmlYudtrCf5IXnGX24_GdTpt-vtWXMRpmVDK2fSUGCafTXhyhWgGCP-5IJvZhhG87uid-JqjdpP2PUmkX3HBvUrvTn3HBonRLYO-w8LfXVi2XpYN35pPu3sUebYesgDwjGEDRFVP3ZdupvHfYgJj-7FfExF5NHmkNaAPbwQo6dLKE_GSlhnKiS6Th1oTmlb1lInU8lTC0SrkVX_QYYXpJiRfilLs8SYrSEwZ5kklR4PeUVuOmjQhxw-Es9US9UiDiiIM_rT71STnkGbmZ4AVJohHg5OAy7qJYcXva44a8qiJAdebBI2D9m79qOpYoW7e5fIvNb8CTiuE3eufHIRRY4tmEVwtYnKoijpYLX6LOqv-wESctuhPNO_iioBFh08Q8l-s-ngRJMYeAWkU7lGXQKvNzEPWuTM2ziTokfVmedViZ2OWG7NoEScOM7YHwtP-sVnFHyA9ekebEQbT-pRTIwzMy1wb821nNJTtJWdsDkGNrzFG2335NlJTYI2A60OzgNDuGu0wmC6UdZbrmbc1VGrG_dyDXBRYFKW0QtIti6YO9E9sJOE4W9wCLRGbOImnXM1WM7pLJSN2kBwess6gCs47dYhOZBcic-4f4vs8mFK0ivMiaixYiX4crycI2w1W5Znt2UYjf5YgI4kbb4_xQT1P4TSgqKgMBKXYm43bKWR4QCJfywFqyjLv1pM9pI_yoJjXfs8oganaTr0Uq_LukjNw0-BevEjgR-PqaF6P8HfLX-Yms8u3eyZDFwBjiIHisWuoVvA-gsLYGndbttbFmEPYDlGhJny3R7q8AScqdzSqyLdxQxzY60OCOiHLAVudMjClMZgH9BFbQgbmbtX0A9qeYaw3fyiytX0egkBGU-PCA8xU9YwcweGRn3vAktS6hWXfG4SilHoLvZqaUJ-5fmYtSFuyAoQgsfGkml8RN8s_4kd-8cwCnLOzYLqdEbf_QGiL3e6FQT_jk6XkXEMwmZDhEM5na7xmr2sduYRzqaR45kE_BO_U2xShWwf1E-lHlUs3ZkRrtNqw1dha5xK1YapTnfqynE--CTamFCZy0W1-MyfJ-nKwG9FsYp-HvSH2CE6Srx5nB5XjT8fdiq1I33vLnu0Vg3zK1fHi9p9UDDRD48FfrilGSqrqMqHxag8jK_0dBKen3diC0-dpbtA-Fo5FWwutdWg874bFBkONGEnGUhmsxCJ3w6aeQrydDAb1MZ3Av5koYMyFIAguyHqM-PCgyZWAuLA7zr_9lW0f7u8Q-o5HgoTShreFIN2EG4jO3Z5TDfQ4MhRWjTI5fvqacZi7gDjbjXOD5XaMc_Df6aQacga7XSvN3h6YKgPtjRaQXEd5diftCe4XYbTWtd-nCN_fwe7vR4lUzE9_gcGZpiecVzWIeOCiaM_UakWaXso-KYwNKD_Tu7ajyLpqEntskoYW-wCZbozow3K2nWoOTWanH8k2PxmXaZspm9XVCBj0ZDPS97mBSGV8SaWZSL-rx_LxAKBaF2RhoHOEIPuN6T_OMN4aNl2StdV4ZmgEAl6f4D-E8U87ByvCcYeU7NgUluXq_4nRr_F8Z_ZsAHqwHEa_vxk9sU8PfWtei_YGwwnO8wOGvAfRWxEV415yyUcnqvcuWY8V3nsZHKALR19ruFg7c4YCOBRBb7WOta3Eb7stbCdixwj5sUncerR9UNohCkuZuFRE6wQKsvp9UTQ8dTeT1wNVdzW5EzkoUqU3hVcFouwmYDPiFpfa_Eie_WrHBX2zqIPq-dCCk1tCbkKgUgGwPaIFTttleAE_DwwljteyUG-K8IFn-CzJEy2_pUg6F7b7S9O6ai_QjnZy0A0p_UfW3bF8EtrYRMgI6uZZNR9THhfbArjCBn6CYTHXAKApmhmlD0YTT0-gp422oHAyCtRh2MF0saSBSfj5ERd0Kh12Btr9WqcSIEHUfzEuSrVuFKtO1sQ9wOPeyhEG6b7pKnwFWkxl3G6pAa8LrFyAhAvOIutLg8YGrcs7iQSQYFKQIomkJdrq7xYRJzgQ_AkWe5QGl-fk-KOS8i-lFwgvlInp-Kz4IWEkKvH9Ihi9WiKVyQVjqbEG8eiFMz5se5XYRiDLgECO268W1F-QR1pl1pSU0KiNGeVKbQDfnUwJ6N5fBACXlUKOiLEjSPyp-i8jm8atobLJvk6BaDbPrmDlUQ8bvxuEfeJifz6cvh0Y6zhedk0Y1Ro21OuPLCQxY9mlRTG0y0YAHXA28viDG5NY6UcUtZxldpuPB2zJTI1O3Lr0ELzhkkUFmqRERw8sos4SW0Uz4n8I0mis1KhWAecoCrBUJcrN5mNcXMJT5Hi6AE6ByoCc_hPH5H4aoRpxO2-Sd5GWxYYXwa3L6zdfGyUOjIg_dAIvZC-rPUMSVxTm_4GkB9UcwkRY4iqOk-S1Te9d6a6wtZ4922wcIjsAvFoYp-j9Lcvl29WJctkjCQqP-LTB-as_pd9kR0lP86Thstg3F6zhW3YEFp5BOGS11lSJq4m3TzvUWcnZs2UtkjBFeRFm6KQt1clCpkwTjz364yX6iAoJ-rQ51clJifnEhLlfWKJ261icvI1DhhReLAzTyBNYfu7E2RPapUKDePXNkFdwmi02DR98N4gvWTL24_E0ijwoO_LO3NM7gM5kvY1p52Sf7a0SN4E-1pGdcqCQM9Bl2NGDyXvoJE55fmoIJqODCs57GCfQWhimSWsVDNpwzkoFF390e43RCralqTt9FEA7jkkdtJ-q0SI5aAf9qM9zFFEjHU1AIbSzGiBdV-4CylbFmvMzIxJUiJuLBjJJJXql27XZvCkh3nsBR9HdkbstqOK540H7J33wemUeAOWksUt_rsMi5CAQQtrru0N7LNg8chf_ZUBdOPrYkW7ih3a10SEk0xbw-vX0-mDx8LPrkv4ykC4tHn2eJJpwP6aBDkiJ4aN2XigXIT7eUFJeqpCeY-CdhkAtrSajSkpe2WtBIOjFYKdhCeWcpLxiqNAxn2Ha3dCbbWpVkbelb._pMNr_YRLmOwX4vC71jK7Q","MessageType":"response"}
[36mEncryptionLibrary    |[0m JsonWebEncryption: {"Payload":{"Body":{"Version":"1.0","AppEndPoint":{"NICEIdentifier":"00000001-5cdd-280b-8002-000000000000","AccessToken":"eyJhbGciOiJSUzUxMiIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXX0.eyJWZXJzaW9uIjoiMS4wIiwiRW5mb3JjZUVuY3J5cHRpb24iOnRydWUsImlzcyI6IjAwMDAwMDAxLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsInN1YiI6IjAwMDAwMDE0LTYxMDAtZTY1My04MDAyLTAwMDAwMDAwMTk2MiIsImF1ZCI6IjAwMDAwMDAwLTVjZGQtMjgwYi04MDAzLTAwMDAwMDAwMDAwMCIsImV4cCI6IjIwMzItMDMtMTZUMDE6NTc6MTUuNzgxWiIsIm5iZiI6IjIwMjItMDMtMTZUMDE6NTc6MTUuNzgxWiIsImlhdCI6IjIwMjItMDMtMTZUMDE6NTc6MTUuNzgxWiIsImp0aSI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1MTA0NzEiLCJQZXJtaXNzaW9ucyI6WyJNYW5hZ2VtZW50Il19.ehsQz9K-TDnRftcNkSX13pHrU1yQmugsKr7u56ItiliIBDOFFCihiD0W98sx33UpleafrUpHfm3NP-2DoesZ5moKBm_s2W_ezDJHori3qGDE0df3Hm40YhgjpmwCn0IiL8EUxJ_u4e91EDBU3SOKTBiN6LbFGt3VDaX1s_eSqjVf5Yxnjy5HFieBdjLVt-ICKlKAm_In3Wk7_EeHxBbTCh50G0MmkcUVEquDv3GTXeRoSoi2uo9C4uUXcio8hi35aM7QB8A-NtiwYUJv1VtAg-LTzzBYDgTD6B7mYapw1ahzIHExdDCYOXF6vnDotq0uq6pwS-moqDktWa-ZP1oc1VOUO1pF3-OCqL9CYZt6cbcsxZnwpiRLw2j3Slo88KFOUVsvrPYt24MkZ9DqsYi1W3whlqpMAgIQ_mXZGfohUP--Fxfieu73L0PFoB-y_-ADBEU7aFUqc8pA8a9MqbMqFjLnewq8WDHVAuPXNARWmYrEXrAHh6yE_J9JTc8pmlja","X.509Certificate":"Certificate chain for the NICE LA that is stored in the NICE LA DataBase."},"NetEndPoint":{"APIVersion":"1.0","EndPointID":"00000001-5cdd-280b-8002-000000000000","Scheme":[{"Protocol":"WebAPI","Authority":"nicela-prod.scenera.live:3001","Role":"Client","AccessToken":"eyJhbGciOiJSUzUxMiIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXX0.eyJWZXJzaW9uIjoiMS4wIiwiRW5mb3JjZUVuY3J5cHRpb24iOnRydWUsImlzcyI6IjAwMDAwMDAxLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsInN1YiI6IjAwMDAwMDE0LTYxMDAtZTY1My04MDAyLTAwMDAwMDAwMTk2MiIsImF1ZCI6IjAwMDAwMDAwLTVjZGQtMjgwYi04MDAzLTAwMDAwMDAwMDAwMCIsImV4cCI6IjIwMzItMDMtMTZUMDE6NTc6MTUuNzgxWiIsIm5iZiI6IjIwMjItMDMtMTZUMDE6NTc6MTUuNzgxWiIsImlhdCI6IjIwMjItMDMtMTZUMDE6NTc6MTUuNzgxWiIsImp0aSI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1MTA0NzEiLCJQZXJtaXNzaW9ucyI6WyJNYW5hZ2VtZW50Il19.ehsQz9K-TDnRftcNkSX13pHrU1yQmugsKr7u56ItiliIBDOFFCihiD0W98sx33UpleafrUpHfm3NP-2DoesZ5moKBm_s2W_ezDJHori3qGDE0df3Hm40YhgjpmwCn0IiL8EUxJ_u4e91EDBU3SOKTBiN6LbFGt3VDaX1s_eSqjVf5Yxnjy5HFieBdjLVt-ICKlKAm_In3Wk7_EeHxBbTCh50G0MmkcUVEquDv3GTXeRoSoi2uo9C4uUXcio8hi35aM7QB8A-NtiwYUJv1VtAg-LTzzBYDgTD6B7mYapw1ahzIHExdDCYOXF6vnDotq0uq6pwS-moqDktWa-ZP1oc1VOUO1pF3-OCqL9CYZt6cbcsxZnwpiRLw2j3Slo88KFOUVsvrPYt24MkZ9DqsYi1W3whlqpMAgIQ_mXZGfohUP--Fxfieu73L0PFoB-y_-ADBEU7aFUqc8pA8a9MqbMqFjLnewq8WDHVAuPXNARWmYrEXrAHh6yE_J9JTc8pmlja"}]}}}}
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIn0.FHidfOqCervSbL-4M4YvOHZVqt6mZCQ9g-w9IxxjkgEiWtXpMsoVV03AoCCKRzL-8hkrZ8iW4dK7c_qHrR9R4LAnmzFW6Inds9LyYg3Sg-zo2n8nznlsrk2WBahlhpnppse2wH0Ngns535zoCT-zDqwdsLhGCyzPGWOZzfl0rrxLQT4q_nWz2ZNFUfiWl4KoMBIV_EE7j3D0gYLUyOc7Rrwadnka5TX8HyUPHfV95sOYGOzAVSfZKlPo-hWg3xG9IvX2zUlpp8nINhIxI1z9cIwMvgp2CFr2oUGPPBoRLB5zFsH7OfM2ZTfraGmRJ9S83DrzOtb9uJG8ciRuN4JFUKxK4Un7Q9xXrtMaz_97AQcSaDbunvJQ01x9cRbJ2SZCaXz3sEdpwlMPEQj8EMw4Rh65RK1YpU5-R4qgvpPnF-Q7GuiZBDoBLBTdIzUwoQKI8o7lqRep3Llz6iYIcXQFJRvRXstB_8-jcFMkL4UCS_sPLgbeeDhdzlpkfhMmVEfP.bOfaqWINpojCX5Gs..5NplbGLBLnhSJyz5NapJxw
[32mSceneraBridge        |[0m 01:57:25 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m /usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host 'nicela-prod.scenera.live'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
[35mSceneraLibrary       |[0m   InsecureRequestWarning,
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:57:25] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:57:25 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 80
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : {"alg":"RS512","kid":"00000002-5cdd-280b-8002-000000000000","x5c":["MIIDvDCCAiSgAwIBAgIGAXKCg+HeMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI2MjBaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRTEFSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCuOSjirBX+pKkdiCHO2zsdTHOW4nTewQdgYfG+npRJ2/79ooiS8PkXFEY98eCUD9YyQuhxKIbGBbD2+YZGPv1TCdShRu0J+LuwVq3e/0r64c67HdUt7LMSjtSCVPF82RW083C8rUDXSBWondXiAHYjriOsl12X5FOK17aYNlvHh9Hzx6XCT5lUNpEu+fcAH9G1+j1XI/gLcsGML3iJ2N0wsPR1ryaSVM5JvsXE57aa77Qk6uN7P3RbJmg0hevZp9sboLkJgBim8CEvJsqkE1hhuDbNaAzGa49tmAoFo2j7JysRbJtC5XhEmBE13yl6zcXynpV569W+13VVMKmxS/1EsdrwSIAZN9AwMRvSqXPCn1ZPD3XPrbhvBk62nxMkIfe0bh5G/S4uQUejqqCoFTpcXSVIlxubEmO3Ph0ocpp172Ky7kI3Y93v/XjrcdLRQYQ3tXA1O/+x9F6GAj4cgN4BrljrIazRWScd6beFv412Gu3CsKVFClmy90ARiCyj3TUCAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAdoJAyuaLb+wOIhP/FQjuEPkPi9qYvLC0d0LBYTT9gPRpKIYONP6iGNvrYYzrZCjNWEztLmnbkDykK9HZsoUt3OZu3P+0k5wUK0IMXK6WGPmYKkEmOXDAGvW6T4wOxjLEWybZS+0CcEm3WDPX3al3+r3qV1FkYczD6s8PItLcIkl7PKzGMd+GUt3nbGSQoGnCanC+otKbR1dM/LtcGr9+pIxH9aIxScLIdKQrk3LvmHiKpAHlw1uaGQjWzQE2qtwZfRIOx6nAkTUC7Jw8RDFjSiQBfyZDH4YvF0VJxHBXvDoxXZIUz1eKZfaNzGsnAd7J2BcnrzgDnNgvxyGjf4VlYxGpzE+ycvRJcg5lNkjpxflbeIoTOa+WcwYLsh2BZLLTVw7HB3wHAaIu60JMSSXr2pp9PaK/Qw8T+tEnBatxl2u37V4gWUHfgtG38Ee5Dzo/cs9fdIDyzXbrzRGPHmwLaOYztYUKQ0+0+PWAGFE4P6XqezWWP95sigB17+LAEk8w","MIIESDCCArCgAwIBAgIQemQMCFVHS7SIPlkn+4fGYTANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDExVNYXN0ZXJLZXkuc2NlbmVyYS5jb20wIBcNMjAwNTE5MDQwOTQ2WhgPMjEyMDA1MTkwNDE5NDZaMCAxHjAcBgNVBAMTFU1hc3RlcktleS5zY2VuZXJhLmNvbTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAJ/WAejhOYRJk6qsJjsz11bZLKOf/Cf9ZiKXUhLWMs3xwTRVPe0qmH140WxRRe81K2spFEAdhLbKSQJgGmD6jW+3+BQ/BdEno5+SnRbd4/TsMTikJqKco1t6Ci73DU0pAXoHxK5cRrTzBzSukeqck9XMrQ00ErWns6XZAtlP3Z3diLjXw+MCitSKjMznJ+9A1DvyiJiEhRcASaNwz+/Z7eQ3BE++hs6jIuAdtZsJvHMtLbi4/k2ynf3xuxXpFbm1dMG/3Bggu9o+/+JEPPYesyQ+RomAOR+Vtxhbu8FpjuONgMWybHM//bWDiEe8aBmmoxr7ziZWzQ3VAutHIp8i+BAMRwjMWSBrWo6dahbRjcEUJKgxxGz3+L3Yy8oZrt1yonO/9UER0az1cwvWgna52JVLDTZxOqfZX3yEdVcu6ljKnNfUQC7+2r+/pGcKvXyElNt4zntldhD1/Eq+Q/2/Csdg/c3ZPz0rOzWAb0ExXRz9Xpq4gCEJE77jnm10UbpXBwIDAQABo3wwejAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUugh/56zRvA7/SMKk5KJYGYwIPkAwHQYDVR0OBBYEFLoIf+es0bwO/0jCpOSiWBmMCD5AMA0GCSqGSIb3DQEBCwUAA4IBgQAPmabu5G7ET+RHHvlqNZkdExPL4tlmEBuzcB5uNUA585DSSIYVskiL2uWIRtVTkcMQab5UqCBlBoLajcVtfInGKGGxlHq3q/B7at2D2YYrgPGldX994EBNlGZeBne8KdM9nRYDy1znJj2c8TQDZo4gvJ6nOzdv4VjTvcLQIDAHr0tLnm93AhVxeCg+MQO8+zLHjNSeza4JI8JoolN3BIhYuy4N3R1HrnPzz5xeKmj2uRzT4t+GlT+eJXL20faXssh4wKaON2DzKZriqZAQFDoovbhYw4Ox/iT1djxJe6kluMGi0gScIvYR1pCJB6urgSH9IDM/LedY8Ox4PlQk5b3T46ZWQrXquAq0ava1xQE+R+x6nK4VKc7FuMFy9BAcAgbfH8DiUVZwy+nvVS4812mcv7ErqhUhiWmk3mpKcNEus1t1/OFY9p51F/Jnz7Mc/Ipkpwx0Pe4XqiiHBP8egz2J4JwKnHlmf92q4QKRgXlu0czRVy4FOENqiGb3jH8ePuU="]}
[36mEncryptionLibrary    |[0m encodedCert: MIIDvDCCAiSgAwIBAgIGAXKCg+HeMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI2MjBaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRTEFSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCuOSjirBX+pKkdiCHO2zsdTHOW4nTewQdgYfG+npRJ2/79ooiS8PkXFEY98eCUD9YyQuhxKIbGBbD2+YZGPv1TCdShRu0J+LuwVq3e/0r64c67HdUt7LMSjtSCVPF82RW083C8rUDXSBWondXiAHYjriOsl12X5FOK17aYNlvHh9Hzx6XCT5lUNpEu+fcAH9G1+j1XI/gLcsGML3iJ2N0wsPR1ryaSVM5JvsXE57aa77Qk6uN7P3RbJmg0hevZp9sboLkJgBim8CEvJsqkE1hhuDbNaAzGa49tmAoFo2j7JysRbJtC5XhEmBE13yl6zcXynpV569W+13VVMKmxS/1EsdrwSIAZN9AwMRvSqXPCn1ZPD3XPrbhvBk62nxMkIfe0bh5G/S4uQUejqqCoFTpcXSVIlxubEmO3Ph0ocpp172Ky7kI3Y93v/XjrcdLRQYQ3tXA1O/+x9F6GAj4cgN4BrljrIazRWScd6beFv412Gu3CsKVFClmy90ARiCyj3TUCAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAdoJAyuaLb+wOIhP/FQjuEPkPi9qYvLC0d0LBYTT9gPRpKIYONP6iGNvrYYzrZCjNWEztLmnbkDykK9HZsoUt3OZu3P+0k5wUK0IMXK6WGPmYKkEmOXDAGvW6T4wOxjLEWybZS+0CcEm3WDPX3al3+r3qV1FkYczD6s8PItLcIkl7PKzGMd+GUt3nbGSQoGnCanC+otKbR1dM/LtcGr9+pIxH9aIxScLIdKQrk3LvmHiKpAHlw1uaGQjWzQE2qtwZfRIOx6nAkTUC7Jw8RDFjSiQBfyZDH4YvF0VJxHBXvDoxXZIUz1eKZfaNzGsnAd7J2BcnrzgDnNgvxyGjf4VlYxGpzE+ycvRJcg5lNkjpxflbeIoTOa+WcwYLsh2BZLLTVw7HB3wHAaIu60JMSSXr2pp9PaK/Qw8T+tEnBatxl2u37V4gWUHfgtG38Ee5Dzo/cs9fdIDyzXbrzRGPHmwLaOYztYUKQ0+0+PWAGFE4P6XqezWWP95sigB17+LAEk8w
[36mEncryptionLibrary    |[0m The payload is RSA: {"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","DateTimeStamp":"2022-03-16T01:57:28.221Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiI3OWZLMXBBcFRkQWd6TkRMZkxIZGlxeC1TYlJOSm03RmN2LW96MnNHM3hFIiwieSI6IlhZU2dGU0lSb1FjUFViVWFsdEQwbzNmSkUwYlRENHF5Y3lsZlpJdmhqODQiLCJjcnYiOiJQLTI1NiJ9fQ.HtqvjYQ0tr-ov1z-K-NlgdBqABs9ZWQSHiRmCouv6TLRuEhp3VSgKg.CZEQ3dypa12QPWYO..nxFKGCBaOohrraNAhIFSvQ","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m IsValid ==> true
[36mEncryptionLibrary    |[0m ===============
[36mEncryptionLibrary    |[0m {"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","DateTimeStamp":"2022-03-16T01:57:28.221Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiI3OWZLMXBBcFRkQWd6TkRMZkxIZGlxeC1TYlJOSm03RmN2LW96MnNHM3hFIiwieSI6IlhZU2dGU0lSb1FjUFViVWFsdEQwbzNmSkUwYlRENHF5Y3lsZlpJdmhqODQiLCJjcnYiOiJQLTI1NiJ9fQ.HtqvjYQ0tr-ov1z-K-NlgdBqABs9ZWQSHiRmCouv6TLRuEhp3VSgKg.CZEQ3dypa12QPWYO..nxFKGCBaOohrraNAhIFSvQ","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m Before ::{"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","DateTimeStamp":"2022-03-16T01:57:28.221Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiI3OWZLMXBBcFRkQWd6TkRMZkxIZGlxeC1TYlJOSm03RmN2LW96MnNHM3hFIiwieSI6IlhZU2dGU0lSb1FjUFViVWFsdEQwbzNmSkUwYlRENHF5Y3lsZlpJdmhqODQiLCJjcnYiOiJQLTI1NiJ9fQ.HtqvjYQ0tr-ov1z-K-NlgdBqABs9ZWQSHiRmCouv6TLRuEhp3VSgKg.CZEQ3dypa12QPWYO.h7j3E2nFIc2Hr_ngFdoRfwOgnxF2KVawuHz3zt6PcV4eZSO1fyII4WYsWFFUfILJYQE33A35FrAMvQNP1f-L8laSFEOsps6_PYIAUrL3UJuuLs8wLwwu5bZDHVb3d66VeiDRHfootYIEItMOSBn7ShnabX_tRnyKHdNuXSJkm9jyd8yF7fPrwPqwibUuXdvhaczyo6uzd5tLgHYZWuysmrVmU7PtpMJdDJRtJyZyEt6BjQo1Ei2gW1ULPt4X82U1SEr-PCu4JyaS012QQI5nbWA4HEhA3wcZ8sBppwTQCPQ1GHCk2Rh8bxqPFKarjUr-gA9sCtqKvi8NQIemhAliB1lUjZznJ6TXS-cIcQ7c02gToXCQ13SCcmhIYT5E6f74iAFhAXMBedgjwTfzporsM3sm9wcV0nxSgQCreNu4_mOogEmtGqoeReEBN9gEnfCJQcEygRDdOpBdzuE0ZRZBKNr1HaqUz3vfr6iqkZ6kfhr9t78fNDeB_AsCtbfSfGE6HaVKLdQtiSYDCKqx2h5j9hAgG4nQbQodbRM7Eeo7bfALHZFlbaitE2SAUvLon6655h_yAHFpVb5i9roclaCow2UCTcmsEN0tsDc8-gBA7FvGWw1ae7B_i1Drqqi3XvJHNKb9uhVnI_07HrOeEnHrwiQ6MyeDtqjxIoSSMR1xLL1iK_kY3IwyL8oH-sCzaNQtB_nsRE0crvkb8jKEA5YzHKEiaLJZScQ9FC2pZ27DHXHUsffJRQIgGCVy8LyAI7J8NaQh4809CdbE9HXOeJaJRbbSMzwbTqJJFVMWdVBTZvlRZ4Fn3uid-_DFuZt5gi5nFfGt8SwdIoi86hJE5AZLVWRLCHOl18RZ69jg3Yyy162lOPBAzM7ciL68VnJJurc8D4WEY-cv4MT6Ft6JNbM1pXo5nA1crzE1T8b0iNDFGIWRp9m8C7uX0sD04WyhQFdbxYCCNLHJI3JUuAaBVr1t9y3vWjsNN34vUCz8bHMMKWlATVlPaMH1JCcmQpeU7tHM8s_tl8SlJmgmYh8yBOuchaVczi10Coi9mS4wpuiZEpgCtoNKAD4jQKV9CV7GbUjcB1RELoPH4BEEzE0BY57CHA_A-xpI_6lIj7cYmCIVzvna9D5Ls3_ppXGlieicu-YS-wVIUbPycLl3U434Usqm4usqeXAAj75sGkywAX_5tl84LFh6aYXk72sgzvbmeg_jpQatCySNlXEQqUB1Qo2V0QtVnm1qXskktHqHdck8hx5iTPzrDP0Mn-nDA3kAy15UMel2LYsbkLjx5kwdro84_5zfdIDzACqzmcAoVhGMP0tqkMDpc3HnY2L6ti0K9NOdjkr21T8HiaXlGTq42RAulr1bZkTik33rfCjeoS87d9w5bTyL1y0xs5UWzSDRH81VBwnFSLQrX1ZJd6xcUpopZG5RF5JdLWVV590R0OtgqwGlqvl4refmzR52331k9PE1Hyv4EBDsxYFltz4xsSWVgLHcf09ctm2uuik4Fmmli7sgI_T8AwoLEK2bAV4GVKHhQvfx8eOXVn45iiwqA_SEdTafoAfBK8m9VakCxeTuV9M8quULcI8y2JIRKpI4acC5sbAEiyj2Pi34kU-GObiIdUTdR5_5D4HWI4kO0EhhLy2k4TwMBLvYeNQLqanHphV2gUu-mCid_AkBELzk0nYse-SljU5RnoRWLeFThlTk9uTmLtm_KYX21OGZRVsVGd8z2xOfUpuk61mLRklLKf8OP8Ssc2xsD6By-5E4UgC1ThmPo6HXw7FzFm6JXMRJTEY95xZ7uuwFydMRo5HzxgCdWIGc1WzBvjj-DUX2AKrR8S8M4CceUTLDyJjYaZvHXyMSys1bAPneXs0sbkghWkPOcncLU53g4QFwP8cFRxPsSA1DQhuZ4jn3qdfX6oBW33h_0doSDPhkTpOQLtP0MFO2t_hDrtLaKA9tH8bfSV1RjoEiTXysh9y2UesujQjJLz6mC0Bym8n89FJ3c1qwJWfLGTAGvuugQISPuSMm1yxVeFV4PUMhmLP8a0cWMMKshKMVDhkBsgZBCrI0aGR6_tu3lqCBpL416J27z2I4R9-dW8QnMStC7f_RyecKaSM_VxE6JAy_ZMUlGrmUV3voF2Lb9-2HGkdhT_KKeMToi7_TWicT_eYfELA3aJd_sUaePFU2i4gsPNgf2MTy5kB_2Tuy1jLVUOMHWOmbLVXfB_4MXiQY0j7zNQW2JZ3pahiNzFIGvbtLkGDUMfvm0nUuDIrKnKlrZac1vRprDCbfoqy8OM1Gi47_OKKId9AToRy8tjDIJlupEhmINQyyiz1aM3uGwiHhnyTt5jVbx8eedvDFvqwvtM9RgATDbyMjzzGItkDaGwNDlgf6z9YO7N8l8uL8MfswIXy97luMZMlBdUwHcv9-UnUWskwaTiE0ZUBIOnCd9-3hSMPaghUEl0SnTpw-57lPgLvQDUJN9pEFc6A-OfnxL-vsgytmJZ-b7e71HTknEJhP6-zkKOqLnyqxan9-8Fv6R0jqPokNPxhuGDeqDyskBUY2Ahw4nh6NWEkf8AY-juSU9oWI04I-6QOAm-M9a1vSIdZHDDxns5kTYMRLIq9wXzQV6guMXZp5ljnTEgWXtq30lm_lWUBBgdoO-aUbV7ivDNL7OQxH1VG42u_0DACBPP0p-MnK9z3yWeAY3JaGRwZcWuTq2c_BdPJJZ0v6kvMjPuiWnXpbNpMVWxKuVYVeIbFAgq-6q5tFDsOs0ZUFIdX1mOk41A1lN-Adqo1bAuzVCTXGU6zkQ-I2ID1K0P2D0wvpUb-MQ7QZDE0TP11VaCwJKSarshmeRnmkiskctfMTtyix_KNo7q65YC2W9Gm4MUiBgBrHxgNqqRmUPz7pGLIGlbFTgCT1ntF4KQD87eja-mYtBUzKBi4WYbkgI7sTV6M9_GGXIjAxrwn_V6bMCJsUsS0CRA-bxdl_2Aet-C4U5jzpwjlCOO2CL52CoKyEN_HU0_9pFRJIo6VHc2SW1ACdDhII1SLuUyWBQESSIh61zGfL8Tf0GywbJMCIrTxM9k2fwxM20_bPf8YeLOxLww9mZr2Ocwk8t-oU3w4etHFER0yNda0HV6EDVnpboprxHFG03VwmcfMjF5H9FKj0a4dc5kHSQL7dH5WjBlQRLlt-1Xx7dVVE-uv3jhGM2bD4wnpfC4zmBTgpZvskr3CRzjl1ta7pxh9Whrnnv3eQqsYScN4pSu0nnXfy76kwAAI_5tZd6TM66pjOKl9cuhMYFOtDYju3DNkycUtdqxz2Luh0ph-teqwoPUFfwex0qUwMs4UBRpHOWrV5cAEgjemORSTi7RGSpHW-Gqi_YZJ19QWQfsLvdQh7Em7oktAlo8UImgtHHFB6PH5vrXAB-Hb_Es157N2PwgeCUM4oM4-dHF-OK9g1vZUFvX5gBinmcnwkMBKxacOh-I-eBl6AefqLBZpAMB6K25mcJTOxwVqiGMj1LgI7JhF1dKqp9ekyUzOUxozgZ2kGhYv-FIb4hQLkqm5PltC3bSql7CuzjCXMpxy_1huUA4jZB7bDnL6WBKMURMI660YV0PO6NbMBYNnMBcsWVs6IzLavWJshVgfak64I20-5Id_Jb_SU6MOglqfyPlWtKGav_rUHewX8kr0eLRYkl6-baPwxi6VCrmj8gyakGo3RocgJUk29KunC-ehivLn3g_5JVOiKf9h-tac4r8s2wYuxBPEQKkta3KuJHMrdG4SRSyr2JtzC0vrfZRLASFJeMnObZEX0C_KFy92NkzNEg-vQHecWutzRU73WkdBcOjKQc657KQ_lYm_dBybdjDlK1q_VQZNrYdM02ojG-KvzDcVvddGHq2YEIv4jgFTPNftBc0A8-PziF22RkvB1D0b9qtSqIXuwj9FknChelH3TIOytoqk8RBggkPpo23G4Dy6Qu7XP26uMpM1d7b2Q_tgTzVFtksG7R0s5tUdlAeAkGUcb9VluD5GM1R7ZxLc5d-a_7Thh0KZT2Pbs8jwGtVaMz1bvoMN0YLddtJcdmVn4SngRxPRIt3Tv1P4Q9pnersjl_llBg4DeQwbm1UBoHkuf4Ai3hLxNvUtIlw9S5EUZdtdjNaLkLaTAXTK7Ei1eduC_PIHBgfGylq9vew3vZ1aaQICZbLpILel6mI7TaL3buVa1L3Wi7c4Bod4vbw1ybiVW_GcQ309yJ9b9QaqXY9lZ2kb6ohPOPCC_8Sl_9wKx_f-aVa5vd7mzLUYRN4k-JT0qZod0Ca7U6cIKKaGmSrmdzYVsDRgthrCl2G7anYYjzIiY7KzwJTCjRi0oZWHDwrxnlE_2mrVpzrUBtkD06x9ztAoAAffVsOuhhFbq_dTr_4RMTlcExaTUIWsg6D8lgaA3BinRVO9j5zcK_Hc3uIPD28wDs9HNaXljkRZYAQ0iPD8ljjUx6j-YuP2hNC7yRquQ7BPvaspJDQXo3Z7UQaoFZdUl7fOzpkkVCaOOy0N5BREAIqNDA48MVs_fiYsl7ziWQ3prqAreuz4eIb9VbNVzahBAS-S_Pb38omjj-qHvogeN4fVDQQN_tmh9wvTk4oJtLjzXJOhLzs8DvmskgU1YDKUwh7vCT5Eu-40B7lsDIVMFkibRx5i9iPaPcSAlZ4fk2Qz_T8Ai_dfG4dY-XK1nXnHgERKu_9xmdBWgISNKRz7uOdmTt2LOTAliQiquHhPMOGp1z93tMVQlp0wQ5p5X1uDfyIyeUCSRjj8F_s77mSYOZ9YvfXuLTwurl52DT-X65JNNu-jNCQkcgCyNlHjXGpHIBiy85qdxmEWLT4PHx_i0I0LN5Q1LtVLIRH4PBKWefj07zckmLiZFqnX8EhwLz2IgGzq6JP_D1Yra_Yl6YrSM4ovtMGgqX37XEJStgDY8adXnHJUoUvqb1hfXbW8gVycMSRu8-dr86A9X3RqeRnPjVB49M6AvLI9yNznaUt2sx_T7iMF6WYiLI_u0CnH9v9PSsZQGf4118K0kJvp5sD2QBZDBZbyjsxdssYlnKCqE107wgeay1zbiPJJXSlXx60uXQZPPNHEDyzL39dJ4VUsC9mtdzAqZKQ3CRlN7IFf7EXVbtQz0-qMga6fZdzfKS6wnkFi2NRDhkSY8zkixm_4rcIj-_5k5cwOubDHkICOxpiDbFhox7J7W62Mt-t4-PIlsLxsO0rDptiKTEwVYTBpjvRAC91kQwqFOe7Zsiu407jY_V_ncEfDuQfQqx7e5uxwBRe77Pa9Wbq8Nt5_r8KdMhQKClamX0ytDYk9U5ol6RTKBaIQOe2cpJFWK0O5mReJvKtwcd2RKedgxeq1ce_1g4_lxqM0PbCyM8Sjyo0eTIVtKcjXVLiZTvcK2LBywXoL-Dm9FrMHJZVaBgvis1Z0Xh3AHuMBweTiomJmT-Hhhxq66Xp3WzMbKGGMNSVuWcifTqSPz2ACk1tHzI08tHZ9pTmloYmuTeH-8A4WwaayFZv6PVJQ7_G_4CxBtUD-KgleqXmlHHwHSNQFJMW8M1ooh5hAUDeYl4RHVM6j7XL9QtzOqYYhjedhWB4Cc_4bHf4LnwZ0EJWAXpc5GXOACwkGVDcqyjPoB5U0wO0vTr7apPp1mqbZ_F35YwSfb-4TvhQhsrZd2sjCi4AR9MS29VwC6maue6_Falq8X49d1rP6ZwC37qXyau2NfAw_uVp8g4wY-IRqooCu3zsfIfO4Uc24mbmXWdq2ssWbO9sjhVe3t7WjVbDraOOKZRDi3TVmOwDkA5qBzC0jBID3G5rwdvxS9vDytE7ta8ep03asZw86hLS-MIrtXHhoi6oa5Xn_JYxjLUl9wJIaoIpR9JeEuo8d6lnq20UytqTXDBDNtDlTVjhlM0w-zBR0aoSxg0r5L8tLrb2xAbToRQOo6-qdK0uUQyur-ZuYXmQ29h85bHJbkM5Ov7gv33IvWIh2PLAb2KSYzx5Z9cOMmGFJOsiz3HkPfmw_DuC0mhNbTL7ZXOnjUDGRk6bV485DwMGzMB5TljVG4-Fvuh7FH-YZmBkhHokLeqfwq9nz4zb7uHEEU5FZZMEIXB7K1JI4M7pLh9qE-V2D1JC688NOu0nYUjg7K4MAdMAadV9QMYRzQz15mBOtHG3g4u1NbhTum8FHq7leeA-tW7RSkSEIrRnjtE9CdWRtcKbUBL_Nt9vBZzQDsTj5tTI7RBAY2xz4dOMVSKM9T_a4nTKraQxrurwWaVA3UJYo8Wqlv7I2eUEDQZH9Yqe43MhudYs5uaTfs1YeTtVe8t4DEhCc6_omLqfZ2t02dzplaApl3e3uqlaYjDUMyxLCNmbjRFBbNC9s3gRxd3Y9Qp1_go3W8moLQPBAB7x1ciXtlThiyZWanqGLmUAW0ArErI1WUY9-l0OwDOQ41mS8dzz-jkhA2Aez0fGMa7Tz163-tG82CX9gRf7ktg7MYHkkvAtK6QRZTD957GaUsBIn7hqYpT8sC-Gfv4zWkO7WPBfIzFDufULKKyd9CruqPJyhtPU5n1EGdiRjjj9mTLY26xq7pO9JUPkoyrUWMJP4svVBwI2VPSEdgfIv-juLDYozlEhx3-wRhl2F8me52nQ2Yshh1NIt75v9dNKVHuPzSqyrdokKrF-C6XBBni351Iydus4u7-qHWH_GuQ6ZWuqtYIXvy9WLvPoq72E81oPxucGltg5F87RPHslhyhuGMFqpcihNiQyYulTZ3bZSVQoDIU5pHCF3bEdvQth4PdWhbN6gx22JJC0cUiBeyHLHo5Vvrv057dR5vkRHXa5woYF85-kARfa8pDttegno4o7KFiv5OVXvyUFkh6bOYjCTtDgGLtAp0XrIanFZrVvZBWPC5FCoEkPvYjwK7YGqB9lblCIszP3E5kSQgz8rjp4ye5rsLcXW8TDA-TVc63k0FC5yrHW2XeTMFQFd5ZB1R5XuHathnlWYhL9RZEckKDS69fgrpRM4Q7_MMzFPJ5Xijn8TyPbvjY0yUQY6stf1q3oIWSGr7wbsGnBF4SXDP0QeiRrhPz4IAlv4G4NXV9MbZHSZY6b9dLXPyPKeHYc4iOUT_VJZ0MAI-93KpX0GtHWUJgY4ptJPiFaVLZSQg06SFxtqJPpMwDlp8AbT0PZNjeDsC-T1BO8-rVbD-aRlBkMaYy705txqG-tltsYKMApE4vOhzh6C69_4JUC_eabXBs3KlE6vYeQMoXcLGuou_LsgMtpRfHHOXCpWNzW8uS9IX076F4XZa76HFdP9AX3o5X2flpTx4NJsLvearhMU0cJYeAH8h_4C7HM1OLa2YWxLbN5CKdlJD1m150oTtyQyyj6JRXPKE09tIRQNsjcNbxDCjNG6uz9G3fVBH48fs3dCyYeQP50BJHYZ2zW9U_bqZVaLnvWm_ysTZTjZHQ_t4VaziwatapAQN-RWQDFkp85MSGcxkyReq9AeBEuvIA8B3a2HDIxEK0pO6apJ_4If7TTyKECvmedKE58_LdZ41ySipLBVtEwWGBpA92W8PZSENHyCkjRR-WZuIs6mlBUcbT_v6Gq_bVUZ4QrBSLWFrwweGRBNlayQ3jhd-KTu60-dK2V6yZ6EEMvyBBOXuxRc6hF8cd3_S4L1XAMOa-ys2Bg9zOjH3yWuzlehk5KYXHf1x0lMY4ppIgRjb0ULtK1BX9G4z7gib9za_FGs05Fqt32UOUqeZHhwJ2m6GK65KEGXJ026RXda8-AK1BlkmK4gY8W2HQlP5c6VDtCfBOoPiWKwsEuaKmn1I5lFJ0GvnHmNCYaC8FnGAvmFLY2lVNjA4XSwA7kvejP6zC2WGPrrXJ5PXHRmc57i0AU7n-3RfUcruUhuiHnyW398u5FcNhmqRbrJ-mfw-grNfSnMF724RVuarwDVpIh6aAFhE5N_MSSnmOGKUmpjD9zco0NQ5UCmkkRDZ2wLeyDtwI1LcSgfGTetZQbet9Hr8eG0N2CFBnXE02jSDF-VB9o9SbopLbaYGQsDBKe2T2nXF-ZEzHZLYSVY2857dn2BxCYQlWR3Jn_bBZ9fs_Cofgrt_Jzcbm2imOOiWc_6z5BH7yltB58UFUniQsRrIlypzAS4VNwIUhpnXYuz81yOeXBS6SV0HtPV6wAX68zwU4ts45-xgDyECWbQR-3m3-GiUYDU0oXW5TrKnhoXL_o-AmhOqn7UhbvMGzp4pb8QomfXji7t7_zS-bXrqcyhR5dk4jGQDFk7evQ4tpXWcMyvhYmYFsQbshnpdxqAwpC5TUyWS58Kbw1Q7fZjDhRbNbNVn-Oak_AH9DZ7TcTGvatRrfKHxYKsIvgd_Y6tEyNUghR69GcITOMqJIt13k1Xf0_OwUMXuqtdLSdKX0dVq5QjAmjtO-4_GInlI35FT9xY3WYBccvYcNkHZH_GpAKa5SSQUI5M5SkA2iywcMQJKKIu0Vwe7AlHe4M_HST5OhCnka4k0rpVXFDmP1VauSWKNkNcns7bxpSQVYRxTRa348Xkk0mL-MNeWaoii6tP2XVYeWYXshtv6qvTF2EMCjYGyVM44t60F2JOvGS6ufPNbJDsbQoiiHW58Kgst5LDaBYvOLVVZUNVvoyGYrD9GG_3-2Pm2SjaPfv-7eUYn7UJpjL1AVKwhdO5uBaiWIv50bnn2ntDcozKTEUbfjVYHcbAkQX-swM2tBDWuAjytc7TjhzAokmO-cPsisgWHqHXoFUmFVNtM1uZ7LngjyhPGWGEWVmC9r2r39A0MYP7c7FuEt_fiBDD_v93_gt5YF4rpKhOGCVw6O2x8ee99B-7JKLfNh2F6vLToyBgU9F0Qr_ikzQauyX30c97BT_B4IhZgpL44OHLgsuP8nK6a1bb87KKeR8Air26gEJZvKbWPJrnJvknQMEj0m3WBCz2qcEVzaFZ3ffHxCbGTurO_6UK7pdwr5LREbAuk6FHkcmS2sousrBGHbcjk8S7c4TeclGNlPndPcVZc0dFD4UG4lFt2hJ5Ym2xrFFpln5CUNZj0DZB77bT7fT14MJxsjs-dqLb8EyOz3ADlKOByvvqbMheeXbH6xMIjyN4rIKcaQaMYJat74H5mxzJvUn7Kys-Joqmw0PfQKOUvSdqatYMW2FN4d1VAl3PJ00HTfQBhqsOwGwYa3qZsYPhcANBl1-r2RKAaNIy2MSY9QMuIw_HQ0IhUb6P4G_N-ICahUAd-Og8NUJ7KyFRaVPAyEPwlIfuA23DohjYj5Od_zLFH115t9_Zlmk6AwqWMBnY3-7GFeViaNVGHa8it5hO4x0DgjAGDAeivit-90T0UlI76oGoew11gBY_l1DbnSANvIsELzSXr4wJes846THnrv-NvITzsI67xgBbpYx8zbsR_9kqrO8L4JjK79WC4Qgi7IfesyzY062egPtaDn-Nlvap53bhM_Vk2jRBv7LNtQQhx3GT43YMVl7g-mj8SOtgCScXI8nlLUDGkF69TsNAH26y-jqbTGNQ1J_GHy0E0ac9GEaEtM5q7El73lrr73lt6slmZ9062TpjBSGGywX5cyaTTRJ50pVcg20d9n40wIUPhlH6-LHuIIJiyAsDd-N8SxI96iIEyrZ_QVmVwXgnnR6NHbNoR5YV148ChXyVqBJCuDCej_tUfKQV24jcMFr4VdYVWm5ViZsEOba8P4DYPJ5kpQAk7mbo7VfTUMACUa0_VFTVZtCR5g87_3B03xlrU4-MKeFZbNaADu_pnVO8f-plaTV8rxsDDC0Y-PXh9iYG_ndviDYNCi5ZmUbrQ_kdo8VKTTHJorAceF5GRfX869Gl0pTXAzsUoaAOkQRvzYZ8eH9nsEKIQiOubsMYICjSwasNeV_N4_uQUfPr3IQ8ykYV3-Rj5M5Vn8KKhY-49a9LXbXq6Q114rixtPpUDpLnjdaM2Yq07E6R_xhi6caxzeyU61CgwbDA_Uq1Zl2GdbSNkKwJz66Sg4-BEPSw0J8FYvyXpQ25yLnxB-0pUnB0E03Rkq3-ZKTknFBZUIQTMC0UbgWwDZ0P4x3eF8deifDyekt6TbVgLUKbyyhpxGTSLSa2g5CWDH6-128oCVzPKm_VBqLmN-qxtIvcpxeUQMUMg7UvSQT6dWpkpqvl1Tcoy6A_KrEUgPHhT5vRLVtNkoP_Cn2VjH_qAPJFwEtYaMnjh1INV2IId7q2CODjVBL7ic5TX4jzQ14dS9dLGZ1QCPeOQ-ckeiixkzTVbmxuGwNe-_zKzSpYxol01w-BA16iTn5cOgPHrDpKeDt0gMtv1klWlpo1uCMf9FbCDT4GGTjKs11HcT3fMAiNtwqyOhR26MIrjNRfnLuWX7slXJnpElKUT_sNZFxh8HbTBLLBLtc4RMb7WFrzUWKYqooCtPlPe3DB4Oa2kjdLLDNB1B3ChuKzQZmbg_QezAmrJeKUWKx_0ozbO5QnXs-Y1lSP1aV8GnBFJilVp5QsXeypPGwy3BJUNDnPzkyupZ0Tnaw15r3qUZM3xU9stBGoYVPyPhGUuYYIKJq-2hbBzeXnwE1zKm8o0DdPFEsFzbVkzyJ6rppg-T_v97LpNud3WJFdibSrjMbkR4J3m7n4FtexRkJq3ctsyOanRpdc75mOmgbGD8Tyocs0pBPgAz4LLbd29rhlr3q2jWsLnvqVFT1CZg55fyW8VbR0GKgkG_beQoZR9ZVpWE6Q5qYuI39n2CwKCVAwNaDMLS8lbqRouXYxsuFqSI6zsjNT0fZtLWLgLS4XYGC1siW89rt4r0TnLFVPvaG7n0pMGdFEcsJRBXyWeyRAVqFK3vWJC1876OuvfKaIn7B9_R81gIKGJI09T3pI_tWM25XKw_1hNCg0dOtUlFC6GEubDa9uQlQiaBrckuI6qi6Wk2vsx4vTBR7HXZGnY29cVowT39FTtadCg9O_qdmKF8zXtGCsogxUdjCvDh7Nb_Te6SzusG324bPygBrW6anLV2Z0SiTGEJxX-p5jQ6qehDyShyc99MW06i8TkJEb64yh7uJG7JTe0fSVmmvgdWKcD1zxRyVEUFOALXLVQQM25C0eX-uqrNpG8KeMKyGPnvu-lCaixBP34ZiWeov4N85aYR8qHA01KSwwMM9l5JJ5uHGoKaih-smuNrx4LuWqAECRZmeKp6xUW4ByjR25zo9z7oxZtcFa4pTBA3dVFI7V8dCbjnp1bMRJFqfuejejSPIvjgakNCKEQNmkFkfHU7-Bl5EIUAOxiKQUwxh7TDhWU9r1sGpQeDSvTIxkJbxcf9j6VKFFWj8g7dZsvvJCXvevksC6wVHUN9KMGNCamaYucjIyQXsIB7syn25xryuzh0FA3pI4zJjWW7lQIje5txqFJdgA-7apAakbZI6JeyHmdgI3eP5_fWY0yqJVkcMYvH3UnKaxtNKJUsiIJ60sMLvTprjMOslmY7tjMcJGPlrKEu-ryHKaNb-UHqO19JZ96isA51NHbBSmj7TrGIULVcDObYSaS_kvBNgxZe9UqINxIG728BY7DlO7ThD8L9h3-P0xR1RwKFG647wrGRkfNpUqvE74f-60Ww8J5DSokGBwK1pr8x-vEiV3TYmx31wtHJpCclkGxp-6LcwhMGszajH_LrXQIBC6-idYV7Gz7S2_izVTzEhFoFtqilW0EqBe-_lF2s95R2fks6MX_sxF9530DC2_rKtDxnKofcm0n6_kIso4MqsEmvriNkmsraz5iRcqLeyc4UyQhiecU8VPGKYUMRkQDoTAPplwPrVpI9bQMx6soJywFfDDMHmbroyRrdUWy4qP2uTj_LesXJHpIxmc_JGYXMdB7xRdmA9SRlvGjdOYOOSZJ75iI5I92qphqywlGPgKnGFh20cuUmf-G_TQcv_iTrzhprCHRwQLXSwlWqQ-Ij7syHdnuUMKh-fPmUFPU-tDuvDsi6EH5HDbd9xU9yK_UeF1-FQTDcgFodn6M8uracX48bdGVHZSbUtnqjXpbh8wo7sO6R0-vNcutj0WM6e52Z7CTcllxuf3PIdsC4r8VLZ25ZXVMiRo-zhIZN3K8s9IY4FVgxXPNp4D8zq1Kcc8J2ZFtMf5R-pjQYlkMOGUzmFVSS29nrLZZmZT9nix3yAzJwx-4sIzT5aqMcARQC2yOxasbO7dGvZ0Mvp1QXqr2buHoX60Ga-ExOlCBXvNvITNXxG1b0bOMjIhhyaXPVzP8mMFLcYK-CVDPDoDJsGgCiN1pw4V3QTobksbkoRTCP8boEv36BaKG8KCxiNZLC5sCoc4_TewClDDRd0_sAjI343qQrhrIBbUK9qfnWbTyFUh6nZJaAiTSVBPku4M6mB3PcTtwP9ZBEHfxlDsY8_r0lkfavK6ypQvsfLlsGhxIm4j3SrwIuJ3dFfG-gdu8QPpQBPqTnzwDa0bUSVHHQ9ZWqKiyr92cbHGW2AZwLTwcJ_kUG8HhIU7DrAHVczLvBSk-OApZZ5y3F4sYN3sRDIMjKrT047S9S-g7CJNQbGFiUTlofQ7x1mUeCzLEZrnbH7d0j7sLC797Ss-aBtzNtWOS2snbQLfWHaKZD1qgL5KOBs3SwMVjlQiUYEj_0E68civ2U8GaMmJXJofg7VcjcSoH-FfIyYKHIWjnrTZmU_BM4Jy31hgIfVD1g7jPFzsrjl9qcFgGmEQ9gah1yGE2HKoyXPUb2rR6p47swL7ylr0q1j2p49c8q6mSlwo_qnUHitdaSC-agZWB-xcO2uygEaz3Kzgc17MOMFLBs5rkoJHcDtbsDmHCrkhsxo1Qm-pIZ5rT7ctNcoAGAav3Rg7cq--EyixEQ31fad3UumT_oBeegwj2r8rRSdANHds_NaDJ0bobKnHgt2BtiO_L07ly8yBHamWfBxKVjMsyZF_twPEB24CMi9mF9hoYt1RP8Pn8LCmXS2b25xSCkm_efSfKJa33nwcmE-FsQrOKDpgxoAijcuEDkb6-UipDGpq_4Z26_9lhAwvdHfa_DE_iPG8VLiN2oC6KvEhTRn6O8Tk7GdQTVmWUaoJBS-4dWPqnJNp-gQFAKKGA77_7U0R04V-ATU_QFzlfF6ONKM0jZ_YcwoAf8ykPRo2B3DoEvAM3fNoaNWhIUlyV-ZCLISzGU_vCdaMCa8OrNQ_EbMi79VKvuztHWR91i3ksYWbfqYYghJfYjIavLexStdCTlGPSTNTK0Ta7fj98AkUnhVRk8onkqfBcaLAcW0spgXeKn6JnmR1iKsTMHYZf4ZHRB3SWmqcxmOulfank6n8bDXnHbaQSJgtrf2qiTUC0-bJxz6piM45oAiI4-UOif_KSHm3cXMLna8vqWZdB-FsqA7SEWvMo60x6DOV0kd9GbNo3oVnyAzEWRt7xhMF2PDxl_81Fh17hbn0TX83Ko1wstJuX9sQMtAMHUMdAadJUNN7r04dFd8UPhTSrDnWBWoIA0uzKyLYSigOtZQw4iifYFU0IhVwnpfPJDV7C6KNWn07-zAwyjQPf25MVnRZWK3i81R6atStlDtCfQc1LFehkPChY9jiIPr3miuGWgGmoWi3Bc1z_wa__No4_UY3AjAfh0mQQM_tB8tgdtjV4NJ1LpkI-RPPcPwd4ML68xZK64e_aTHqZjiEA2IYNMj70o-7ovIAmwBLqWBIU3By5ZKDbGmEoonrUwIotbvamn_WgpM50GiQmrpthvNKvjQnplGrx71DDB4xnhmUK8K6sxCkWJBgdwEfQxAAlaUNXXVZsWbYTBPG2u-vKpGQMRfaIv89-2QqHf5KKqqHo2Utd-PSDUXtOYfcCUD3zHi1mnt2wPcEdAPbBHK2JrjI_Q4PH7BmUrrtzl1mWkv2p60kqwbGKCAY9WQ687D1Ix0FQfewIpr7T0fp3wxXTHWYYrKmE5krME0PDzFofjYxIHhjgCNpPHkuI3__bq2kfHVdZdb687TTnJjBulCD18TOWAeoTeFzyakRxDm3rPkWvb66NgWJZv52PjxuyABxXxLU5slJLTSpvADL94rWc4WzvTIeEzguGK_x-RNJAZZRGYnx_uehNjzEBv-CuSDEx41ifMuJRWp-W9oZwgjUHYV-e608gVOx2vNxwUkIoCFGPmfv5wMYOGCBKFEVCQUsiCoWw5WY-_c4alYRx7-OlJiJ4z39-5uv9MSzBt7O5DOIXbhXnroaYrqgy0Xoa1QnDeckqrSBbIBBfO0Ky2Q0ITB6gnVxychh1pLIiPfhKxGfLPO9KhoefFeNCKjNcrpZI0AEx3aNOSzqczV2BgRQdtbZx7HVwLH_KcxQncZRMMQJWPuw0pqwGrkEmL1O8RE8RyS03gbNabfgU0c5LXkg58RhYP1ce4l0HrETeunzWq00XhiE5RVgF_zFi-YKFboV9cbe_oSo_8nF2O-5nnJCsF_g6YMQCLfGjNJBEbRG9V7lkgC5RZGKYD47AyKHvXgoqSaEFa0imyyUNWUz0SJhEpkIb2bAUS4AKWjsCakPgeC6c9WFIgn4GXFpkiTCNURNnJ2hBlhmAvjMMxcWFba8GhmKQZurf9js3aIatJO6v8nRFnrchHHmVyRcwRam_pNgWCLPF3DKRFSbiI9YCBRS3z4x8TnyUYB8UasTBbJs6eIlUZGJUFBM_vJgjTLl9-2bcOnM1srA12qWG4a-mY4z2y56qJomIqKj5GIMjkcljh4nCIOp6g9l1pbsNlLa4X-loRoANBqFMljN4p66_QJSJfcPMZ5TJFRcLWyQ8An53Z3cx3OTkQWOtO7f30OX6KnkwHBAXu2VsSWIOjldKZoIcOHuToEUpxGj4IihmuJ0mK3vCmVg7vMVS-soFEYyUhj0Vuss1sMBFc5v378zRYWtq_VxMX35X5XkLFYj-QKf_LLDjSOW7MTjkvi2JUs-3nXna-8fsCocPZ8zJQGuVVK2pXRkFMHSZj4gs_txO0l5tHNxBwd9-2xFYiThfAup6Yf_ydWN4dOe51mpnhZ4Eks6NbeNFibBe1L-6_0ybsnn60-NHZykhtHJzvFvQV7-W0MQ5c0G-I3Q9Iv1_I5BBZN_3i5KfIt0FW9P9PxIy4kOFFpzG1k0bmo8lIngbl8zIck7Co9GcpOXJUZLddKnGlpTbxexJ3E0Nd237On2KcQbC6chem-3On0NYdi_mu41wvN2-XS3BJfZ7R0wDIiPwrSSd9ieS7b4uaZIY-KvnLFp2S2Hyk5iKJrZTGPxWqv5Gr-mD8-obO1tk5Vs0CiAkS5b9uNSbTDoOvkddiZ7bzXAw_xYCafvN5foHircoJahWvNBael4JEaAmt0heVXEPH1YRuOmB1eBLgIUXe8lSOtewTpR4Af4knGCkZBgQkkCerki5uFfqi6seDvmYcrGLq1kOe2VPeN7U9cqHTzKOD2t0KMVxqDWKDFzvnxEoJpqCFBSSECvGWckUZ0neus5O9VRNPL_KTbQNUaqhPL1sAChfcuhcxn8fAiP45R8vrOQK5Aw0ObsAyTqSiMSCmReEmohbm9oShjqp2M4zWlZBVm60yEmIwiGDRn47DScjg-RNljU91ErcMvDFBcVOrn1FwNXrawitoOI-_CqQMyTdRBo9PRsIcd4awmMHa3Sxnh5lugCv4FTig1lpzbWugeziXgq36ylYmSHcFztvdei_Y42Iyf0vKxLYUThQmNVccF2pb2wnDfjkelKk2c7x8wI7hAG-a-kk6WKhBAN4aQzWHLZTjE1LdlgQ1qU-HqT5dd-83UgTGzAJbF45C1NmHJbVaDR-l5tywkTkcjp6YBVcdL6mChh6lTy87UWqYCCW6qgPJ0zX8M-YOF_RIr1WMCXb0Tm3gMGNVrf6do7R-JLFNOiGW1WBwT822rPX1C6QXXyzQzU6HKPvMDuxQ7E5U_ryhmCdZhiVxQFvPUbdl02yaloMYhSi4v8algX4m4pBidr70T4hbBON8pmVj-Ro8c5l-tVKX--uJIlexNhKmn_RCJsuvc3LISjoZRTkFDrENkcSCexBM4yzPsVJFOfa8PYPokxui84V8cAPuYG75TOjD717laCC0_OKQY3o2KuZGVPKANKLRxHTN716hDjI5FBBMC8oiIzvmExv8IngZjv68aH1k6iXNVPtbFr0RJYhbtYo4_AXTl4welJrX5U7YcHbhXjgVTNyT3CihWoX4FtK1Mmqxkh_vUBsZvn-xRe9nQBBdQiIFpaw7GqO4kv3pjC8j-CLLP19KJIRWi9oaeX1899rh1vjQwQNYedciahfgpWjDgGsyZDZ6HK_ro4VHRbX-25Y5mIO7njtoUcPv6wdS2mazdkeY35pjqjyYWIzbXmuPKXpzm6Rsp9BXk32dJrvgXDOaxPnUVT9K-flUHilXm1dS93op8gS-bu4pflGvE9kS_duRapQwj8_WY78W_o16qU-btxBwx9nrFdIQjNSagQ9U_9k_O9x4W7T-FvyPobrZmackRdOqTLpuQwjHhcObNKeq728Ue85vU63aKkz2sIBdwG4Rhj5M-E5p19FGmJrQ3bDCaE6upRYZFIr1Qno9ro09HVxI1qRhxM2GAEyrScyshgDpbrJVSOepXOA.nxFKGCBaOohrraNAhIFSvQ","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m =====PRIVATE_KEY=====
[36mEncryptionLibrary    |[0m {"crv": "P-256", "d": "wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY", "kty": "EC", "x": "tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM", "y": "-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60"}
[36mEncryptionLibrary    |[0m =====appConrolObjectResponse=====
[36mEncryptionLibrary    |[0m {"ReplyID":0,"ReplyStatusCode":200,"ReplyStatusMessage":"OK","Version":"1.0","DateTimeStamp":"2022-03-16T01:57:28.221Z","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5cdd-280b-8002-000000000000","Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAyLTVjZGQtMjgwYi04MDAyLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NnK0hlTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekkyTWpCYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJURUZTYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDdU9TamlyQlgrcEtrZGlDSE8yenNkVEhPVzRuVGV3UWRnWWZHK25wUkoyLzc5b29pUzhQa1hGRVk5OGVDVUQ5WXlRdWh4S0liR0JiRDIrWVpHUHYxVENkU2hSdTBKK0x1d1ZxM2UvMHI2NGM2N0hkVXQ3TE1TanRTQ1ZQRjgyUlcwODNDOHJVRFhTQldvbmRYaUFIWWpyaU9zbDEyWDVGT0sxN2FZTmx2SGg5SHp4NlhDVDVsVU5wRXUrZmNBSDlHMStqMVhJL2dMY3NHTUwzaUoyTjB3c1BSMXJ5YVNWTTVKdnNYRTU3YWE3N1FrNnVON1AzUmJKbWcwaGV2WnA5c2JvTGtKZ0JpbThDRXZKc3FrRTFoaHVEYk5hQXpHYTQ5dG1Bb0ZvMmo3SnlzUmJKdEM1WGhFbUJFMTN5bDZ6Y1h5bnBWNTY5VysxM1ZWTUtteFMvMUVzZHJ3U0lBWk45QXdNUnZTcVhQQ24xWlBEM1hQcmJodkJrNjJueE1rSWZlMGJoNUcvUzR1UVVlanFxQ29GVHBjWFNWSWx4dWJFbU8zUGgwb2NwcDE3Mkt5N2tJM1k5M3YvWGpyY2RMUlFZUTN0WEExTy8reDlGNkdBajRjZ040QnJsanJJYXpSV1NjZDZiZUZ2NDEyR3UzQ3NLVkZDbG15OTBBUmlDeWozVFVDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFkb0pBeXVhTGIrd09JaFAvRlFqdUVQa1BpOXFZdkxDMGQwTEJZVFQ5Z1BScEtJWU9OUDZpR052cllZenJaQ2pOV0V6dExtbmJrRHlrSzlIWnNvVXQzT1p1M1ArMGs1d1VLMElNWEs2V0dQbVlLa0VtT1hEQUd2VzZUNHdPeGpMRVd5YlpTKzBDY0VtM1dEUFgzYWwzK3IzcVYxRmtZY3pENnM4UEl0TGNJa2w3UEt6R01kK0dVdDNuYkdTUW9HbkNhbkMrb3RLYlIxZE0vTHRjR3I5K3BJeEg5YUl4U2NMSWRLUXJrM0x2bUhpS3BBSGx3MXVhR1FqV3pRRTJxdHdaZlJJT3g2bkFrVFVDN0p3OFJERmpTaVFCZnlaREg0WXZGMFZKeEhCWHZEb3hYWklVejFlS1pmYU56R3NuQWQ3SjJCY25yemdEbk5ndnh5R2pmNFZsWXhHcHpFK3ljdlJKY2c1bE5ranB4ZmxiZUlvVE9hK1djd1lMc2gyQlpMTFRWdzdIQjN3SEFhSXU2MEpNU1NYcjJwcDlQYUsvUXc4VCt0RW5CYXR4bDJ1MzdWNGdXVUhmZ3RHMzhFZTVEem8vY3M5ZmRJRHl6WGJyelJHUEhtd0xhT1l6dFlVS1EwKzArUFdBR0ZFNFA2WHFleldXUDk1c2lnQjE3K0xBRWs4dyIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiI3OWZLMXBBcFRkQWd6TkRMZkxIZGlxeC1TYlJOSm03RmN2LW96MnNHM3hFIiwieSI6IlhZU2dGU0lSb1FjUFViVWFsdEQwbzNmSkUwYlRENHF5Y3lsZlpJdmhqODQiLCJjcnYiOiJQLTI1NiJ9fQ.HtqvjYQ0tr-ov1z-K-NlgdBqABs9ZWQSHiRmCouv6TLRuEhp3VSgKg.CZEQ3dypa12QPWYO..nxFKGCBaOohrraNAhIFSvQ","MessageType":"response"}
[36mEncryptionLibrary    |[0m JsonWebEncryption: {"Payload":{"Body":{"NICEAS":{"NICEASEndPoint":{"AppEndPoint":{"APIVersion":"1.0","EndPointID":"00000001-5eab-2e10-8003-000000000000","X.509Certificate":"MIIDvDCCAiSgAwIBAgIGAXKChXgAMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI4MDRaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRQVNSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCi2dghP7y+bP6tvkJmmRYbqW50W0JNa9J5+D2ImfFK+7ipMz+G4431bylsPyftIwjhDvC1Mehl3nWwTmKIxBGOYnuIbEkuqV2/+JmjCymjd+zga6IQm+0He2t7NIr8pT3g2rwjf1dbRrYMCUtDCPOWVceBDEnCqi0u1RJBKJth6esOTGDUrAx33qV3amxT5X1ZZfJ6Jgp6+0lY9+W9umM+jJ9ka6lKQs2U/H9zr6fSfVvc+NQewpt3L5yQkunJyXel6jZVraUMBaFSwkhPuEBMSDkIR3PrziM8R03F3HHCvA/Kq5JX6HljoVOMa+3ggwiW4OcAmrl1qmtNd3tgBKdul7Q73IYb1oQ8w6dcmfQ5K/liQU6HREFGVtPtmxm5ecUfw1l/ZP4yGBq7VXiBg5IdgtdIbWk+nJ+In4/1klG9TgPjub/ppFOPB4v4ql6h+gfFZJ9ajZe8rnyYKCYzHXDpCkC4nBZkpWt+0kcz/t5JVnzT4Je0zoT9EXJYDzt8OC0CAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAm4/xl6y210c+FKRBCTLxCGDmjnG5H9+CT2Vt6+ouBJnbN6PtpgI/5fS1dUJcrRJFfJsZ3ZqyrTmQcm1INdudZ9y9FjDQRfNHc3jvzaFk6LFm+qJPbIoR4K/0twaIQQPKl48WbdLAh3Kxvz49vRMpl5RMVE0Z6JF3YhtyBber0Zvn1/JPN70h18r2JK5SHiMpJ0pDOQnEZmCFgV6dG5W6ErF5cWNlhydTD5u6RcX+baAt/II8aOEoAodhbFKT+i4QCFGnsnDif4UrQwNYuWuwa+pwA/dITRnzmp4TzSxhnii7AGn0XuuXRoLfm0uCP5Am4DmI3Ebef/MutqPDbtI6SNfFYdp0+MRRgo4GSmRUQts/i4gRtgeAaL1zlgBysapcIxtt4qHU/YjOyNhJCHH5s7HUAWF7dgmXSwjkhxmDSj7BI872u6bYwEwTv5OqyasxOrDR/kb7UJvOLUb1+u2xFkaeNsQJA5I2Kjv3JiD/AUcOByyAYd0cOpscRX/g3WMa","AccessToken":"eyJhbGciOiJSUzUxMiIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXX0.eyJFbmZvcmNlRW5jcnlwdGlvbiI6dHJ1ZSwiaXNzIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIiwic3ViIjoiMDAwMDAwMDAtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIiwiYXVkIjoiMDAwMDAwMTQtNjEwMC1lNjUzLTgwMDItMDAwMDAwMDAxOTYyIiwiZXhwIjoiMjAzMi0wMy0xNlQwMTo1NzoyOC4yMzBaIiwibmJmIjoiMjAyMi0wMy0xNlQwMTo1NzoyOC4yMzBaIiwiaWF0IjoiMjAyMi0wMy0xNlQwMTo1NzoyOC4yMzBaIiwianRpIjoiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQ4ODkwMCIsIlBlcm1pc3Npb25zIjpbIk1hbmFnZW1lbnQiXX0.E3faA5swUUj2jRgFWhKKJa2UZsIlFjlp9fBl1QfDBitmxHUt4j_1geBSZ0yyQtGZvlBPhj8xL5Y_CerGZ9rcJQJm8FXy9gCGXZaDrUAo47iJIRINX3UvbOrLgF05Jy23QaaqO2qUky7gDtD0EGp-Gjohqb8md83338Y-JuSQSzV4Hz8vdB51QskrcsVhJit3UZvTLu720z4Y-iNS2Oagqf7BEGnorBus1zKrnb4IwXD55lv0FsZ795Q1qnojH_SZCcpsmsSwDRv4wyAVUZh_Vnm01qHasNSkbX8M82PXw4jVob30guJ2ooZa7WKjsMqJeZftTlh5qdS_zrPPYNl9e6ZNXXHXsGhjHFsr2hAhubvqP5QQwujxsbq379S_tQv2zWjdwXjKkcagFkmz0JaCALEjRP-SoqbgtWeKX4EEOP9hTw-BR3zsXMN5pv5x9PfN9-aam4WAAVGug53CMOF9B85plL2HcHwkz-pUs9Mdos0M5xXKTlPxFjTl8fr5tWq_"},"NetEndPoint":{"APIVersion":"1.0","EndPointID":"00000001-5eab-2e10-8003-000000000000","Scheme":[{"Protocol":"WebAPI","Authority":"niceas-prod.scenera.live","Role":"Client","AccessToken":"eyJhbGciOiJSUzUxMiIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXX0.eyJFbmZvcmNlRW5jcnlwdGlvbiI6dHJ1ZSwiaXNzIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIiwic3ViIjoiMDAwMDAwMDAtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIiwiYXVkIjoiMDAwMDAwMTQtNjEwMC1lNjUzLTgwMDItMDAwMDAwMDAxOTYyIiwiZXhwIjoiMjAzMi0wMy0xNlQwMTo1NzoyOC4yMzBaIiwibmJmIjoiMjAyMi0wMy0xNlQwMTo1NzoyOC4yMzBaIiwiaWF0IjoiMjAyMi0wMy0xNlQwMTo1NzoyOC4yMzBaIiwianRpIjoiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQ4ODkwMCIsIlBlcm1pc3Npb25zIjpbIk1hbmFnZW1lbnQiXX0.E3faA5swUUj2jRgFWhKKJa2UZsIlFjlp9fBl1QfDBitmxHUt4j_1geBSZ0yyQtGZvlBPhj8xL5Y_CerGZ9rcJQJm8FXy9gCGXZaDrUAo47iJIRINX3UvbOrLgF05Jy23QaaqO2qUky7gDtD0EGp-Gjohqb8md83338Y-JuSQSzV4Hz8vdB51QskrcsVhJit3UZvTLu720z4Y-iNS2Oagqf7BEGnorBus1zKrnb4IwXD55lv0FsZ795Q1qnojH_SZCcpsmsSwDRv4wyAVUZh_Vnm01qHasNSkbX8M82PXw4jVob30guJ2ooZa7WKjsMqJeZftTlh5qdS_zrPPYNl9e6ZNXXHXsGhjHFsr2hAhubvqP5QQwujxsbq379S_tQv2zWjdwXjKkcagFkmz0JaCALEjRP-SoqbgtWeKX4EEOP9hTw-BR3zsXMN5pv5x9PfN9-aam4WAAVGug53CMOF9B85plL2HcHwkz-pUs9Mdos0M5xXKTlPxFjTl8fr5tWq_"}]}},"NICEASID":"00000001-5eab-2e10-8003-000000000000","NICEASName":"Scenera NICE Account Service","RevokedJSONTokenIDs":[""]},"FirmwareSourceCertificates":[""],"AllowedTLSRootCertificates":[""],"DeviceID":"00000014-6100-e653-8002-000000001962","ExpiryDateTime":"2032-03-16T01:57:28.230Z","Version":"1.0","FirmwareSourceID":"00000014-60f6-80a7-8002-000000000000","DeviceCertificate":["MIICmDCCAQCgAwIBAgIGAXrrg7qgMA0GCSqGSIb3DQEBDQUAMBUxEzARBgNVBAMMCktleVNlcnZpY2UwIBcNMjEwNzI4MDUwODM2WhgPMjEyMTA3MDQwNTA4MzZaMC8xLTArBgNVBAMMJDAwMDAwMDE0LTYwZjYtODBhNy04MDAyLTAwMDAwMDAwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLSHIOXNx2I6SiM4PDFvHMfo+BzXREevONRfOauwOOXT+RP+slNoPURPyGY6u8KkG5xjBXP5q56Tm+x3NFu3i62jHTAbMA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBDQUAA4IBgQApNGEw61+I5rgmlab0XO1Eq6agiJjpK3Oiob7jqWevrIrob5RdsRJAr6hr/0Kv8NlgL6vBwpgNpskDq0xc4Jk/9yRxYU5btkDCG9SpXcPUHlXui/dAoYG6C7qyCy7xYXF42LraInOlDHnwrYVcamXVh0lYucqD7MWCMex4kFd7Gl0KwsaZBhfCDvyyKsKkyzvIvG9khDEiRESM0vqStRRI0ffqF5M1xXKSO6KJU2nhO3Vq0Ltaj6Y8i9J5JoyP1NxAJyZPbUbdDhfJmlStUgwi8C8YdAo9hjK41S9vkxV10mfBYlyT4MBX6tPleOe9I6qkFvtpm1xyfmeyKuIucRx2uQYOzsCu2/ov9UfgiAx3rPyovvpELSfHcLSfQ84lx3UrfMgkMh7NTwCbTcfh3hBuuORfY/9fgRpNbeZb5WCcQofrgmfG2vaeEubahe92p1xYZlXN3Tfcy03VLPozo0BQc+ltpJoAB4uc5NdCzhOtdbft7C/ZtwiLpmiOjT8LNTQ="]}}}
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.ezzxkfLLFg6XlrI9Yuq5xsLuw5Afr8lxeMe2aiFQdwBAEdLJbEcih2CxrJfy4wpIb9BDfHK8HZ3-rK1lqXvc5OttEcWgNI9So8CeeywNM9dvD0Uy18hirtEPe-1Qu1aLWI51ZE46zyn0PFD-WofLBIWqo7bipnMU5QpxpVqZLPozIxwuLryeIot55V_lEMG5QgWfJfoE0aN6YjGYWdkmcXwuTZNJywGFLRDqQPy4f3xidTGUgw-a9LqFjuLSNv02EcP0AqOGpY-oO6kkbBNuBrvvj2pa-gH6QjAn1_O8YQ7Gt_D_4zNVajS2fg9E0bAThvXIlPMR8uk1V-EWsosouZtOIBybBjLtKE-frSlz9l4r1ct6swKFODhrtYpM6MLPQ0VRU61c7x0H6teaAd0B8u_TD3rM2Z0VShnyzjmyncYreFhQeSest7LlajRBpfiYgBhFyk6FxjFQqoBq62ec7DOB0HRgPp3la-6v29Ee86LFCZvrwnd80hg6L6xl8utr.qMy0H_gZVYaChwI-.IbLV5DZKKrgcTHhEp4wHc3WpEYoU80TL-NrKU_zDyO1pYANEL_33a4rcx8A8GwM8OJ5SrN01gDqiFJRoftyMICUW8BZFJp_fVQ5gLO1vtUNm9JJO81N5S2ZuSQYUzurPJILfAQ0doLPBn8fiVvDGjp512hnOrxFrDbhjZBO2Ai8ar54Ci4bFsAcFfFL9E4HW3VUl6mUlgCj_KpCQDMw0XF-Apqj4SUGYc5Ij08YSym48Rz58yoGpPtrjwDMAdSJkzozCFvoCFqYY5t2gsj7T9DxGKBc3rlGGNSUxF42FRnU2adOSzJsIO0BtN0O_9IdgT4XVBK3d7uCnVTQ82m8feGuE_qnGyqf_B_amM61pagTG-1uCnC0CGzUVMe1Br5UzsJBQYyJ1TyVQetZfS4eXm2hJ1uw1ZTyHxrhtFN-9FdAgyUzNXZMC3Y-d8U93THzEssK4amtUiKcRglvC_GjZi0lVowEh8g8LGK1doCuR0lRPFm5HZ8EOEyyvZ6grbLtRYtrdNUA-A0FKZlzDvI-D-LtDYJt61cWKXLRwXut64kdJLuKzjcBgqvvUoy2DaWPSY6peS5MJSjLviDBgXkOxaYMtW-D_ptvUbD0WaOV3s84Z9R8fIt3BWLW-Eio_giAUkYjbKadiEnnRaGVfXHkf6yjAH85DnCfjkaTRxfKBdSfMojPthsqC_vx8iiAgOrr6pmce0hWJFzKprt4RqcYqsUm8F9uA5gRhrnldy8ebCdDGoQvodPu2gWfvJVyGk7C4pA-_AvAZb1d4xStxrI-R3GKdq78-C3-RXJAaPfZ8HDM0h99SZoaDAhN7gzNYEcVFVSD5GGBIp3GUBmz01FVbkf9_l0bXLs8-6iSGGiIO2zMUl-vTE55Syfje3BPfa1dPIK-Gq-riEIRnq15cjQOPGSSUzu1sFQonkjhP9q3yCBDDGBXOb1yxIZZMQvdGOWLQ-piAXZpMETBAuVMMj9oc7u-ape5znYZzktFVShagTWJ-8jZZbEbUhv1v6PAILRUAcbsx5ExaCou6wJe2kUA1Z6Z7Cnz9hT37muxaFuIFegM0COPh1cVcVABPDj714Pw1YPglpXyQnNiBsnogaqXGA_SeuVUuRxOKdw3ujmaoLeWT5Sq8n_RC0dQFdXiX-i6tygJnQG7nGPQHaWNnWiS0nHh6idt9ftHUIBKT0D3aJeDIyn8VkNOl2ebCZ6c-5BGkhGztRlzstCif8eBiQ-w6xwqqJAFDh_PNrJ4HkeGa1GpYAxRDzlHdUJHEpgc0xNjvH31ef1CTwNtZhyfGpy9LJciUCkXjaMDYfojFg-FZCGo2eISeGmD-eJZAYTb0LWxTYRFA2r_z58nZ3eYmJpicu8zM7Gyp2GVeoQbBTPiEjf3zISdj3DkK7zKLHBVd-ilFO6EdxLygrxsKZcWx8cNfuq44OcnhIEUNWP5_O1Df3pTuns6P9TVnbtx2p-7PdYhTeF38i2slUFp4r7fVKptKzzDDz6VzKCeFSFHt8DQfkxhEqpgYD1C7PEQQHY_J2Oypx48CkhWMN_gUcjO2Kw4r0ISTi3hBHh_YCObdi31lidva1FYSu2jPkTks9nlnfipEqcCidMss1CJyY-2leB0F6_b9LyUAK0bM0ZEPhQ4QL5968GbwmgSKDBcPw2MBcdexJnfnVxJa4mwH-kAF3wKmCiWJvciZ2-D2L6X-SUXT8nDEFcbYxg_UhK7qRY3gKKVzMbRU2WAG_7fBi0acAvZ9NBhL3MRBslds8TRZQlV4ODJsIa3zEVYeH2ZilUiB5KnJ3prlKrg5Akl7muq1Er6DbrXidFYXZx6p_aiZv8rfQKr9_D1nBUSsK0lHm3MW3OtzMSkzUFxc5aKnL1UvlwcjKUF9j0RWNxEqg-03ijevHU1FsCtcqNEpBRO8uGupg9xoBISWXRQQCOF9n_uLT4NoJIppZ5A3t6G1JsP9YcjUAfWOR9IanFujai_7CuFg8Q3P1kg1JMV5vrqW4dnoLFJqv1o4DJ8Nu74b0JPnpfW2si9UOI-jqPwsKsj9FpgmzxIsgu_dEoNvUz1gCD2BGt31GXK6tFA__ZEOURUAzw0GxidzBRYqG-VKI3LkV2KyL1O5R57nc-VNnNq1T69Bi6G6-TLQIt0Xq7Va1CV-nlSQDgqeQXHqNuBLI1iMcznE4FwUOwc9bHIj-eI1NjbnDcTitvTapuzKM2AytmkgW9Hk4ota6vPfVbue4c4IQrjPOF7jZcWp6hHthcYxc1mMCQ_DJ3fJNbS7TegdXHwL0q1PioL-oWHfXcPOZpRnCagCXbJROF8rbArGlBcdJlrfiTRZ5TU0wMCWZfehpzFPoDTCP4_Zhl0gl6U_vf-IduFSX_VquR9pBppG9HdAMFOS5V-ZZXPhZ_zdXbpwFKoqlPpvDFELLlWe8koYOHgoXC_Iy3JaHkhsRbaa75noEbN9wSwztbm8Kyk6Uj_RRin_ynMm4znMwbdh1idHlCR4OICCcZ1ekyvWsx0m-bVjgg5SRIqxxTD36zxbFYDI7tRNyP13YrT36bSe0dXG4hFBEFsENw3JdbJXxxx2hYTfRf2WqjYGKDWXFQWox8-d6Y92VWIw4xHgfZf2uF0BJf1YzmFdm0-YIWZq_GHXHUJwSAT7dNcDrPSUD8n21AkrfrJ2MMtVLOmll_ye8an-F61AJ3YPEq-Uv4A0Da70-S8gO9gWlj0bWhM-rl_Dy7q3SL20fZycPiKpYJfp2lBNVfTOcXKEcK42Pe5Qs5BcxwEp-o3N_b0i5jR7QIOAP-iRi-9a-ExbqLEiJOmUlSD7iKLP654s009oiNWwjy42aIT8Znlu8PMDI9crVZvHpcxSNRL85Q-8XHhbBamVuHtcGNvV0Y-_D4isyK-0DO82KSdrQNEUBzg4vzVdoXZtAjAaVoNr-EaAinYkl6wBJ0dwzkFV74s3-OQ63Vg4RS603tLyOvKG2l0l0NWj4orGU_jenH61z4bvVc7M8LjcGPVG5baZUS-3t3YZ55xTbygUw1KzToLkYLffkkRSkMx6rvRDb39o5pkSXBbTwD9dEeQku7exP220ecRrNBjawowLY4ZNaGrtMgQUtLauinreQts-4Izrop3vnM3EXWW9WtpI3QTi07NpRWPt4jmcqHgFbWogx61TLbNSiNI7BxJtjh9lxjD--3Vmoy4UXfWKJyYQcUM_kUZvQ5ETOhoOfSE-twjkxtC_1UVWty7mca_8VDDryW-PSHmJgVQkMmbARdCpwJ0WCkb1aBS5hZckJVNUngaN9DOVHKerzlPhocW1q-Dnh3tcJ_Z2JA59A0eOjB9j-o5fPuW5HhWi3wOEdj8WuH1JxU7TSPJXWgxXRcWuP1RsxIbe13zfg-BU3xf9qhL_snSwBngzEKXUKCAmQEYTmQu1Ah7-m9FN2XezIN5k4ZR3GAw-TEwIyS_8vAr7O1HRPTyzlG8KmGXm5DkTkO6Rs8tsfoF5QogHUXrXT9Kcq4JgcNHvZGBqL1oF0xehnleePnXwRwOCpoMtDczqmea33EwKqEfrkMjgedRM1bzusX91Dyh_hyh6zgAO9oAg73Zu8tvy209BWJe3O6VACnMdCxwbAfP4fqdWyRIAT9iObYHF--54dzijlfeRjGX-1WWwWQ0ib38EwyxQz8GYFZtBKlEasWQIMb28Pg28aSRqWzrQp94Rb2CvFri1Dgc080u3aO2kZiXR3TeAx8qxC4Fkwxt-B-5OMndGzhkDOnXOIc_D4xj7GQJ8NCxYyRPkQ93omPlAkOyPmvjQl-65TAvPeGClQrPv_Yc9FUf2lgI07-8sTnSsk-1TmDp-bXBsT_Ho5MS5rXeTQKfcjjOWZiFeKxdJQUPu7n6Eji4-QvPKYo2nIIkDv4u7n1YcQ4zBoayv3vnTlwZQdF_EjMtiUGYbutdIi7ahF7bjqK8M-HkoECAekAP1ZBI64Z30Oo1-3JEoWq0E1ctm0fph3CRj9lVLogtyeHD02aS89ZzYBHeGBBKN4TBleOfL-e2D2H_fR8rEsy8UVRaBanU5mHo7MY_EstEfsnprdYkdOHFDQfjp8FkM5Ho_KPbSQpwBgIt2NUqfcNRfY-3A8Vo4AGLhbiTjFf8Hthkz2oKOAalC6iA4LgB40h_wkVimOQQbXxXImfmyMOZNdo9hd3T0G_Qbmelz6-6XJSWGhq7rvBDLO71cA2O3UsAOtNwt5Rkm5cFRhB0tErWz1HcqQJ7IdxfRyvMVzpP3GTmjosL7W47Be9s2sqd3FGOrVj7u-dWyiVid_wzYUpN2H0YAKFQjNjLnMODDbUCNpM1YE-zvEcFTw2yAGx5Hp01mVDkDeF84Hbo7D8vmXB6Wke9NqL_GVqfdILsYXGcX7AYMbGIele0la3OkLqWPp_ZIL31z8_pOtSKKC9-P4ZqcBHyEu7xWKzvZFRXzRzBwnF8GCXXUnUsz7OM9qIj9B4tm2enmlO513GSpI9owiQr9MUEss7PEWwgzDpHPihLS9rr9XFdYp_oc3O-CFvbigDuSIYgLbbPIE0aPHPd2XlQg8woz27ANj-Lup-7Mp-EL0SvU_-DoKHjEJ-HXNDFbS3EmJQp2wtOc4mM_43eC_p4xSW8OODw7mPknaBGbPTvNmpAOSLeO95lY1qfWZ10DxDpVejR3HkuXAC9DckdeCyZXEBo-Z1sT8TLF_o0l0dzBhBB0X4bnP9VeFtd40GNAeNEAmKujnh9bYw0Ou6ajJ2n-OE2TQq7C137uaVCcf9Go5fes2vBB9bgbvfgQdRumR1sK6g7zWndPOXpnlUHvGT8UHwKp-Kg508SxWctdd0LtYROpC9CPblQ2cbYHIuo26o-0JotMGsa94mOlMqS4v8ot_Qh5DlLaLJ0Dvt67Y1Dc4lDMOONx2hVL6wFXsUhxVf1hmCCclwP3lsGljoy51kllkpYIum15tzmEYlJOXOxh5TC3r2WU-213VRT06xlziJTPbIQwDg0rhvchXH2qmvFmd7ijgDaMfgF0Xla68S6YOoZEfOD-dv_PHbMEwRSRBJooIvB1-se-E_ta55NkMO3DVtCxNtREWfmZO4TKPXwROPDCAvi0R2xt5pJP8aa6hh2szyTIi4DkGqe3SKj_oR4O_CXPf1MnGWb7ggy9jDRGSwiiUGT3YZg3WqbI3ZdNlOXMnJdlpmcLSECMYuo10ZX2sqb7hrhGzrjzCtxLEYkOErPzRJo-Ibl0MNdHt8LZhdXc108uOawVg5Dikjp2WM3yViedNW5g4SGO1fi9XVaq1_ZD39Q6zInXm4-C4jXoNCW713k46Ry28ymr2VvkYMPALwDifL1ipV54IQSO9KDsTW9sQyGcmKof7oN-gHEut1OTX24Yrsq19ZtoFDb_Jfh4BYnO17tqpnjd89O1aWIm-7Dez5cPR5VaWFK34iaE8MPthsgECtXghdLTqKbGT8Nf4HHtQpCrVMCYl5IxTuOPQPV-f3ade4dA3ppSiR0GVbLbSbXGYY2VohFVj4LdTB1NOCErl0jfQ1Ne9q1LG97_bjgcDI8kOn_hynOpm6eD5AsOcr5jaHlHV3aUxOliStvPcoH-U3l82ARmZXMDFu9OvBV8t7MXbPwZncmD3ysitoR-rdyjEYHRAoWJTpGYLmSKkNxDF8lvdmfzhP8cHz0Set5ap_EvipP8cjSwy1stImeRcNRtpcQFVjtsWZbQNYYbrIOKO4Fe6COKrif_L2YXHtQ_FeQCL7HZBJ20Vp7It2kn3aVfP5i-iSfDlimSIiljte9iYa9h7WXgqTIllM6gbOTVqgiRU9CA124wQa8OOf1P2Do1aoinZ3ykO-ot7NTiuB7lWalPr6Iw0to6HJGdRtKNl7hDo_r58flujvUnZ5Plboulod5VolvvvdmLGxomAvVbEu4mjYj1m7R0eNLAMAUdwWRh30xCM7hcOyRzmx7BmM9HGeY95qoHKuVq719T9QFZ2hzytxZLAUWl1NM_HQ8wXmIp9X4VFeeIvD9M4Qbh6z_dfglDiXktb3uk43CVQm_okLz6Zl4E5i013qPpFsrc2LkEZ59noMAQ6SLOFr96sJlIUDli4EEYJqeeWvNw0aQmw9Ih8Bgey9D7N9ZVT83zToiyfjchCgrFpKx4pPYATRfk9FXys0yTXE-prv54g9JuAz35XIlchlr0_w49E0_WTBVpE5DJSy3C5JoCY0qN0EiXEcUI8sH_bHWwmFMswn6YyHyTms5OrVfjevd0w-0rcN1-odry5z7a1bMD9jvagr8xVFJ6Z_RI39f05kx0NmlI5DMokwK0Fd22SYVFCFzutES69hrVQCYHVTOjbnAoA4--jfwmx29Dk27_5uxG6zJdRZZC2djORC3szjoWYK6elQfkQl0piGZ7GUuwu7XWarOXiaxCZg.B4DOkSIxi7ORtDyBx03Iyw
[32mSceneraBridge        |[0m 01:57:35 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m /usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host 'niceas-prod.scenera.live'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
[35mSceneraLibrary       |[0m   InsecureRequestWarning,
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:57:35] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:57:35 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 90
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : {"alg":"RS512","kid":"00000001-5eab-2e10-8003-000000000000","x5c":["MIIDvDCCAiSgAwIBAgIGAXKChXgAMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI4MDRaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRQVNSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCi2dghP7y+bP6tvkJmmRYbqW50W0JNa9J5+D2ImfFK+7ipMz+G4431bylsPyftIwjhDvC1Mehl3nWwTmKIxBGOYnuIbEkuqV2/+JmjCymjd+zga6IQm+0He2t7NIr8pT3g2rwjf1dbRrYMCUtDCPOWVceBDEnCqi0u1RJBKJth6esOTGDUrAx33qV3amxT5X1ZZfJ6Jgp6+0lY9+W9umM+jJ9ka6lKQs2U/H9zr6fSfVvc+NQewpt3L5yQkunJyXel6jZVraUMBaFSwkhPuEBMSDkIR3PrziM8R03F3HHCvA/Kq5JX6HljoVOMa+3ggwiW4OcAmrl1qmtNd3tgBKdul7Q73IYb1oQ8w6dcmfQ5K/liQU6HREFGVtPtmxm5ecUfw1l/ZP4yGBq7VXiBg5IdgtdIbWk+nJ+In4/1klG9TgPjub/ppFOPB4v4ql6h+gfFZJ9ajZe8rnyYKCYzHXDpCkC4nBZkpWt+0kcz/t5JVnzT4Je0zoT9EXJYDzt8OC0CAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAm4/xl6y210c+FKRBCTLxCGDmjnG5H9+CT2Vt6+ouBJnbN6PtpgI/5fS1dUJcrRJFfJsZ3ZqyrTmQcm1INdudZ9y9FjDQRfNHc3jvzaFk6LFm+qJPbIoR4K/0twaIQQPKl48WbdLAh3Kxvz49vRMpl5RMVE0Z6JF3YhtyBber0Zvn1/JPN70h18r2JK5SHiMpJ0pDOQnEZmCFgV6dG5W6ErF5cWNlhydTD5u6RcX+baAt/II8aOEoAodhbFKT+i4QCFGnsnDif4UrQwNYuWuwa+pwA/dITRnzmp4TzSxhnii7AGn0XuuXRoLfm0uCP5Am4DmI3Ebef/MutqPDbtI6SNfFYdp0+MRRgo4GSmRUQts/i4gRtgeAaL1zlgBysapcIxtt4qHU/YjOyNhJCHH5s7HUAWF7dgmXSwjkhxmDSj7BI872u6bYwEwTv5OqyasxOrDR/kb7UJvOLUb1+u2xFkaeNsQJA5I2Kjv3JiD/AUcOByyAYd0cOpscRX/g3WMa","MIIESDCCArCgAwIBAgIQemQMCFVHS7SIPlkn+4fGYTANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDExVNYXN0ZXJLZXkuc2NlbmVyYS5jb20wIBcNMjAwNTE5MDQwOTQ2WhgPMjEyMDA1MTkwNDE5NDZaMCAxHjAcBgNVBAMTFU1hc3RlcktleS5zY2VuZXJhLmNvbTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAJ/WAejhOYRJk6qsJjsz11bZLKOf/Cf9ZiKXUhLWMs3xwTRVPe0qmH140WxRRe81K2spFEAdhLbKSQJgGmD6jW+3+BQ/BdEno5+SnRbd4/TsMTikJqKco1t6Ci73DU0pAXoHxK5cRrTzBzSukeqck9XMrQ00ErWns6XZAtlP3Z3diLjXw+MCitSKjMznJ+9A1DvyiJiEhRcASaNwz+/Z7eQ3BE++hs6jIuAdtZsJvHMtLbi4/k2ynf3xuxXpFbm1dMG/3Bggu9o+/+JEPPYesyQ+RomAOR+Vtxhbu8FpjuONgMWybHM//bWDiEe8aBmmoxr7ziZWzQ3VAutHIp8i+BAMRwjMWSBrWo6dahbRjcEUJKgxxGz3+L3Yy8oZrt1yonO/9UER0az1cwvWgna52JVLDTZxOqfZX3yEdVcu6ljKnNfUQC7+2r+/pGcKvXyElNt4zntldhD1/Eq+Q/2/Csdg/c3ZPz0rOzWAb0ExXRz9Xpq4gCEJE77jnm10UbpXBwIDAQABo3wwejAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUugh/56zRvA7/SMKk5KJYGYwIPkAwHQYDVR0OBBYEFLoIf+es0bwO/0jCpOSiWBmMCD5AMA0GCSqGSIb3DQEBCwUAA4IBgQAPmabu5G7ET+RHHvlqNZkdExPL4tlmEBuzcB5uNUA585DSSIYVskiL2uWIRtVTkcMQab5UqCBlBoLajcVtfInGKGGxlHq3q/B7at2D2YYrgPGldX994EBNlGZeBne8KdM9nRYDy1znJj2c8TQDZo4gvJ6nOzdv4VjTvcLQIDAHr0tLnm93AhVxeCg+MQO8+zLHjNSeza4JI8JoolN3BIhYuy4N3R1HrnPzz5xeKmj2uRzT4t+GlT+eJXL20faXssh4wKaON2DzKZriqZAQFDoovbhYw4Ox/iT1djxJe6kluMGi0gScIvYR1pCJB6urgSH9IDM/LedY8Ox4PlQk5b3T46ZWQrXquAq0ava1xQE+R+x6nK4VKc7FuMFy9BAcAgbfH8DiUVZwy+nvVS4812mcv7ErqhUhiWmk3mpKcNEus1t1/OFY9p51F/Jnz7Mc/Ipkpwx0Pe4XqiiHBP8egz2J4JwKnHlmf92q4QKRgXlu0czRVy4FOENqiGb3jH8ePuU="]}
[36mEncryptionLibrary    |[0m encodedCert: MIIDvDCCAiSgAwIBAgIGAXKChXgAMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI4MDRaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRQVNSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCi2dghP7y+bP6tvkJmmRYbqW50W0JNa9J5+D2ImfFK+7ipMz+G4431bylsPyftIwjhDvC1Mehl3nWwTmKIxBGOYnuIbEkuqV2/+JmjCymjd+zga6IQm+0He2t7NIr8pT3g2rwjf1dbRrYMCUtDCPOWVceBDEnCqi0u1RJBKJth6esOTGDUrAx33qV3amxT5X1ZZfJ6Jgp6+0lY9+W9umM+jJ9ka6lKQs2U/H9zr6fSfVvc+NQewpt3L5yQkunJyXel6jZVraUMBaFSwkhPuEBMSDkIR3PrziM8R03F3HHCvA/Kq5JX6HljoVOMa+3ggwiW4OcAmrl1qmtNd3tgBKdul7Q73IYb1oQ8w6dcmfQ5K/liQU6HREFGVtPtmxm5ecUfw1l/ZP4yGBq7VXiBg5IdgtdIbWk+nJ+In4/1klG9TgPjub/ppFOPB4v4ql6h+gfFZJ9ajZe8rnyYKCYzHXDpCkC4nBZkpWt+0kcz/t5JVnzT4Je0zoT9EXJYDzt8OC0CAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAm4/xl6y210c+FKRBCTLxCGDmjnG5H9+CT2Vt6+ouBJnbN6PtpgI/5fS1dUJcrRJFfJsZ3ZqyrTmQcm1INdudZ9y9FjDQRfNHc3jvzaFk6LFm+qJPbIoR4K/0twaIQQPKl48WbdLAh3Kxvz49vRMpl5RMVE0Z6JF3YhtyBber0Zvn1/JPN70h18r2JK5SHiMpJ0pDOQnEZmCFgV6dG5W6ErF5cWNlhydTD5u6RcX+baAt/II8aOEoAodhbFKT+i4QCFGnsnDif4UrQwNYuWuwa+pwA/dITRnzmp4TzSxhnii7AGn0XuuXRoLfm0uCP5Am4DmI3Ebef/MutqPDbtI6SNfFYdp0+MRRgo4GSmRUQts/i4gRtgeAaL1zlgBysapcIxtt4qHU/YjOyNhJCHH5s7HUAWF7dgmXSwjkhxmDSj7BI872u6bYwEwTv5OqyasxOrDR/kb7UJvOLUb1+u2xFkaeNsQJA5I2Kjv3JiD/AUcOByyAYd0cOpscRX/g3WMa
[36mEncryptionLibrary    |[0m The payload is RSA: {"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","DateTimeStamp":"2022-3-16T1:57:37:000000","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJYU05HMmpTNGJVZGl4TFN5cFZhc1BkVVdjTU1iX1BGUnlTNzZ6TXpoZkNBIiwieSI6IlFaSkhpNXZ6NFBDYlJ6am5oTm5Ka015NURMOEg1b1g5dWJyWGZpX0RzQTQiLCJjcnYiOiJQLTI1NiJ9fQ.VWKQPkrLRD994bm4gfN-LOOq8bAje4LcXADjTPeraFnTsYn7N7W5OQ.khXA2msb09a1RnnB..0CHOBuhAM4NY7YC-dS3-jg","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m IsValid ==> true
[36mEncryptionLibrary    |[0m ===============
[36mEncryptionLibrary    |[0m {"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","DateTimeStamp":"2022-3-16T1:57:37:000000","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJYU05HMmpTNGJVZGl4TFN5cFZhc1BkVVdjTU1iX1BGUnlTNzZ6TXpoZkNBIiwieSI6IlFaSkhpNXZ6NFBDYlJ6am5oTm5Ka015NURMOEg1b1g5dWJyWGZpX0RzQTQiLCJjcnYiOiJQLTI1NiJ9fQ.VWKQPkrLRD994bm4gfN-LOOq8bAje4LcXADjTPeraFnTsYn7N7W5OQ.khXA2msb09a1RnnB..0CHOBuhAM4NY7YC-dS3-jg","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m Before ::{"Version":"1.0","MessageType":"response","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","DateTimeStamp":"2022-3-16T1:57:37:000000","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJYU05HMmpTNGJVZGl4TFN5cFZhc1BkVVdjTU1iX1BGUnlTNzZ6TXpoZkNBIiwieSI6IlFaSkhpNXZ6NFBDYlJ6am5oTm5Ka015NURMOEg1b1g5dWJyWGZpX0RzQTQiLCJjcnYiOiJQLTI1NiJ9fQ.VWKQPkrLRD994bm4gfN-LOOq8bAje4LcXADjTPeraFnTsYn7N7W5OQ.khXA2msb09a1RnnB..0CHOBuhAM4NY7YC-dS3-jg","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m =====PRIVATE_KEY=====
[36mEncryptionLibrary    |[0m {"crv": "P-256", "d": "wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY", "kty": "EC", "x": "tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM", "y": "-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60"}
[36mEncryptionLibrary    |[0m =====appConrolObjectResponse=====
[36mEncryptionLibrary    |[0m {"ReplyID":0,"ReplyStatusCode":200,"ReplyStatusMessage":"OK","Version":"1.0","DateTimeStamp":"2022-3-16T1:57:37:000000","SourceEndPointID":"00000014-6100-e653-8002-000000001962","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJYU05HMmpTNGJVZGl4TFN5cFZhc1BkVVdjTU1iX1BGUnlTNzZ6TXpoZkNBIiwieSI6IlFaSkhpNXZ6NFBDYlJ6am5oTm5Ka015NURMOEg1b1g5dWJyWGZpX0RzQTQiLCJjcnYiOiJQLTI1NiJ9fQ.VWKQPkrLRD994bm4gfN-LOOq8bAje4LcXADjTPeraFnTsYn7N7W5OQ.khXA2msb09a1RnnB..0CHOBuhAM4NY7YC-dS3-jg","MessageType":"response"}
[36mEncryptionLibrary    |[0m JsonWebEncryption: {"DeviceID":"00000014-6100-e653-8002-000000001962","Version":"1.0","ControlEndPoints":[{"AppEndPoint":{"APIVersion":"1.0","EndPointID":"00000001-5eab-2e10-8003-000000000000","X.509Certificate":["MIIDvDCCAiSgAwIBAgIGAXKChXgAMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI4MDRaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRQVNSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCi2dghP7y+bP6tvkJmmRYbqW50W0JNa9J5+D2ImfFK+7ipMz+G4431bylsPyftIwjhDvC1Mehl3nWwTmKIxBGOYnuIbEkuqV2/+JmjCymjd+zga6IQm+0He2t7NIr8pT3g2rwjf1dbRrYMCUtDCPOWVceBDEnCqi0u1RJBKJth6esOTGDUrAx33qV3amxT5X1ZZfJ6Jgp6+0lY9+W9umM+jJ9ka6lKQs2U/H9zr6fSfVvc+NQewpt3L5yQkunJyXel6jZVraUMBaFSwkhPuEBMSDkIR3PrziM8R03F3HHCvA/Kq5JX6HljoVOMa+3ggwiW4OcAmrl1qmtNd3tgBKdul7Q73IYb1oQ8w6dcmfQ5K/liQU6HREFGVtPtmxm5ecUfw1l/ZP4yGBq7VXiBg5IdgtdIbWk+nJ+In4/1klG9TgPjub/ppFOPB4v4ql6h+gfFZJ9ajZe8rnyYKCYzHXDpCkC4nBZkpWt+0kcz/t5JVnzT4Je0zoT9EXJYDzt8OC0CAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAm4/xl6y210c+FKRBCTLxCGDmjnG5H9+CT2Vt6+ouBJnbN6PtpgI/5fS1dUJcrRJFfJsZ3ZqyrTmQcm1INdudZ9y9FjDQRfNHc3jvzaFk6LFm+qJPbIoR4K/0twaIQQPKl48WbdLAh3Kxvz49vRMpl5RMVE0Z6JF3YhtyBber0Zvn1/JPN70h18r2JK5SHiMpJ0pDOQnEZmCFgV6dG5W6ErF5cWNlhydTD5u6RcX+baAt/II8aOEoAodhbFKT+i4QCFGnsnDif4UrQwNYuWuwa+pwA/dITRnzmp4TzSxhnii7AGn0XuuXRoLfm0uCP5Am4DmI3Ebef/MutqPDbtI6SNfFYdp0+MRRgo4GSmRUQts/i4gRtgeAaL1zlgBysapcIxtt4qHU/YjOyNhJCHH5s7HUAWF7dgmXSwjkhxmDSj7BI872u6bYwEwTv5OqyasxOrDR/kb7UJvOLUb1+u2xFkaeNsQJA5I2Kjv3JiD/AUcOByyAYd0cOpscRX/g3WMa"],"AccessToken":"eyJhbGciOiJSUzUxMiIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXX0.eyJWZXJzaW9uIjoiMS4wIiwiRW5mb3JjZUVuY3J5cHRpb24iOnRydWUsImlzcyI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsInN1YiI6IjAwMDAwMDE0LTYxMDAtZTY1My04MDAyLTAwMDAwMDAwMTk2MiIsImF1ZCI6IjAwMDAwMDAxLTVlYWItMmUzZC04MDAzLTAwMDEwMDAwMDAwMCIsImlhdCI6MTY0NzM5NTg1NywibmJmIjoxNjQ3Mzk1ODU3LCJleHAiOjE2NDc0ODIyNTcsImp0aSI6Imp0aSIsIlBlcm1pc3Npb25zIjpbIk1hbmFnZW1lbnQiXX0.YfUuU5QirB80HLtcOh2DikT3tEWmPcwZTVk8pLMK4QRGKp_UnV0NIPTGlGsOc_lkQnXi4LWSFc7uMPiJaFLsL6h46FBCJhENLG_Z3G5f_Fz7T31Xm9sFPJ72E5UIHIGPoRPuiOzQ1K3Rtlj2TpamqCVNIkve9nKlskSyYuq2Dgg__AWs1tmkTrfv2q1onu2jDALUS3I-cEJw5RxwOWQc6hjtA-g4iT-zc1K6dO9CmvpVxnUBr2iLXQ3IbB4FC7OTOjNIZJNUDpREI9WW7njK3xJC-pqMk0k47zafGuGT4eAY57x1X8DfdCW5ZM9sr0hrHaYHQfLehLrNmZzBsgaw-nMD9Q4jvdyLDIfcr-LihKev9L1a3imlqXw1NzUjxYjxhfpMqoe8ge24zlv1J7lbVphybwK6H2SU2Q02ulWIYynlIIlP5ic381NcK1Pq6C1AR1SZ4PLL6EqIX18FL29dStN77kBNGxSS_NaDrh3UUHIEW1kTzwwZfWnuof9yuOWY"},"NetEndPoint":{"APIVersion":"1.0","EndPointID":"00000001-5eab-2e3d-8003-000100000000","Scheme":[{"Protocol":"WebAPI","Authority":"pipelinecontroller-prod.scenera.live","Role":"Client","AccessToken":"eyJhbGciOiJSUzUxMiIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXX0.eyJWZXJzaW9uIjoiMS4wIiwiRW5mb3JjZUVuY3J5cHRpb24iOnRydWUsImlzcyI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsInN1YiI6IjAwMDAwMDE0LTYxMDAtZTY1My04MDAyLTAwMDAwMDAwMTk2MiIsImF1ZCI6IjAwMDAwMDAxLTVlYWItMmUzZC04MDAzLTAwMDEwMDAwMDAwMCIsImlhdCI6MTY0NzM5NTg1NywibmJmIjoxNjQ3Mzk1ODU3LCJleHAiOjE2NDc0ODIyNTcsImp0aSI6Imp0aSIsIlBlcm1pc3Npb25zIjpbIk1hbmFnZW1lbnQiXX0.YfUuU5QirB80HLtcOh2DikT3tEWmPcwZTVk8pLMK4QRGKp_UnV0NIPTGlGsOc_lkQnXi4LWSFc7uMPiJaFLsL6h46FBCJhENLG_Z3G5f_Fz7T31Xm9sFPJ72E5UIHIGPoRPuiOzQ1K3Rtlj2TpamqCVNIkve9nKlskSyYuq2Dgg__AWs1tmkTrfv2q1onu2jDALUS3I-cEJw5RxwOWQc6hjtA-g4iT-zc1K6dO9CmvpVxnUBr2iLXQ3IbB4FC7OTOjNIZJNUDpREI9WW7njK3xJC-pqMk0k47zafGuGT4eAY57x1X8DfdCW5ZM9sr0hrHaYHQfLehLrNmZzBsgaw-nMD9Q4jvdyLDIfcr-LihKev9L1a3imlqXw1NzUjxYjxhfpMqoe8ge24zlv1J7lbVphybwK6H2SU2Q02ulWIYynlIIlP5ic381NcK1Pq6C1AR1SZ4PLL6EqIX18FL29dStN77kBNGxSS_NaDrh3UUHIEW1kTzwwZfWnuof9yuOWY"}]}}],"RevokedJSONTokenIDs":[],"AllowedTLSRootCertificates":[]}
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.fj0R8KmO1JFc9UYnoKobdc6SJJyg3VtznqGKxJkknIlYs0XSIaXFpmXQQq-RetuXfXZSqDh5BHxgQO1bnSNbydYeOJWnm-8K4Ts82L9ru6DCSFUc-Q1LK-sSwDOflhrWiR_kYUFbWG3duL8iVikacc6Jwzut6SnFJufiT6mr0IULWeIw5QHLvMMUFX4_hP7LVyhUfCFe02rqS3p6Rj_o-Qg9jx-31l3Yr4u3Gw03dPeC5k34-L6Rn0FgmO4Q3fh9lCtjaiKGQNTH6uQF0ilYuSHu38llBSL27ksSysogzIbKoCdUmDrPHTfXgRypKSG7abTjGMCO3UXirHY2cGuOq21cat8SF8I0vu6caZGGec7Q61SkmaeaX3D2K5irlmfc5ZmaVDRMshbyeflnAP0J8ogrTWNKWq-xyF391VvLgdjsU8M7dopBZZ8-6lPU--e3Tx_iVoaXmkpF_-AREfftfNyrUevkhN5eJwU_LbcGrNb02C4kXc5RMhB5Io23jXyQ.63Zo2B_q6LStKCJN.jbQ4ilfnMg1McQUsRh1a8I620zLA3_u0xxghjrlk_kuxD7Xfz0cjcb6FgTwNhEIhfBeyAoD25majXkzJLNt2B-4JhlAzi1K_8GoLVp7kaMKx7L9mOtE_sMwo12vOZfuHE2A6XTdNgHmN5Nip--Z6XpbQ5667sUgTHIqAdAPxY85GB7c035xU-K1NL1XeUAkEMXtEwcMcuL_TKC3wZneTSLlfyX0k8mPcNbbPZ6qkP4nmElUaeeOIVzwKO86VOuJvviqSaxzbM6FeprF6mkeoKpvExClWg5uHUpjK_llO-UxFaX2kbVS1LRBAMs66B6IUjuD5SW2tl5iY334xCjkGt6nTO6PWgm4OpHCzzVKBlnNnDL9BJTfRE2LR8EfdEhQysMr1X1P3K1BCtsCegC6jnZHF9Qo4NTgkM_TBUoIU17kUmleVo7ix4T-VnH_bfsYqignbee1O1tNGfP1MbTnPxX1R17-i-38CY2G9ihLYo1f8K8PaHCddDZTw9EVoeVVkU7VaCw9tqn31vbAvp_ONcbG-F2wJjRBlhNHt7o3sqpZYaKj76eUFsQpm2xGOWop-fXu2LtWFRe5Eac4MnjSZZ8sm58heqZhq2wwsKKY042cNX-Kz2gELD-vYpL-9o0xkBQv9QBt9OJB0IgWg9UM7M3fm3kZlV1J9y_SbJQZ6Yqkj5Xvv2vP60QoL_yNPE58HGElHjDyRwEoll206ycweSkwNmXNcUi7Sv3JMBlV6IqxM1II8tTYZftM9tbFPn0bb2UD3OSeeeV73omRpr2Xz2FWHVwc7ujqlum5TZoy6LPEF85ypO8eWK-xQecQEzkfEy09g5G3dWljp39zpAwcbicVeaI7et4f5pAg6WqqHoOkWISoL_D98kZAJh6V1pddckKPIYfpdu0DIlrbJ-CsJMDLzxhuru36g8z5L86EbH33-XeTZVM31d872LbJPpC1E3XTAjjTRyqT8-TFn7wuvZc9hopxikmh-atvInMChCQwF9Kuxt4MYt7XzAepmqkCVwY7nHzazvKZsNuiMYJqeHmBmIKMHtuDTsydiWuMYoWU8jKQDMNJcxLXvQjXTRJL46BmTTHtx1TCax0Oji760lZf0KYEYiIcmZOqhoNcfnIer-Wq-dhCUQnUgcZBaEEz82SaIiS98hVaun_V4S1e1oYw4NAqmx51857tXla2Wfn6TAFkZZZagtNSuVblF0Ys4XGfJqdQdIPKUnWR0W-lFaQzI0UMtfA09sBVuI1NvW2DxMz8mf2OAW0t95ohvu-OTeFh2w9HhwTy9mr59FXPbrT5v6C_KKb3OeGH465eFyqdesqB-18LBMvVZ49DBKGz6uakRF1k3pC7_FhvwXES3DRO2OnneEPmRDEIIb1nNsuatcuvE_2zRIu7xZY57oaO_f_sqg28mIP4lBhBRMUea5Icdr6lLo9CCeTlo4_0ID1JrCfpTSFv-hM2aKg52L3LMNgc2aJidh4betu92tm4WyugPQdrc1ItD4Mc65Bbe6c-m1dQpL8a6bjy8HKkev0kAobrc-XQ-aQ9bmgXbGEocqKyBzgex4ie1or-owTi9gZSpPrXGpBNFCCpAxKfFwu6vkFWWnzRagE5KyvD4VGsZqZWIr037rk9VC_cpbCs-Qpr_P-4KcKJT8Z9qQEire_PHr0KtgA2w2H5Dw5gwVrIZ4wBATzvBpdgQnfhopn608ihGWedKe_kWqHaG5nDg5E1XnPr-1Fhqi5zPH-xaeujqSLZwS5yLGF_T1jqow9auM6JwJizBve-jmVujevxvjzmJ1J2G37S1kIvGvlR8pI6i7YF1V-MwakqLT4SsMh9Qz-3PPvOpStixakP-4w4nhQV5Kf9C7bBrD9pgQ2tu9chulJMmXYgJUgfjArF268W0DM_5XSJOCaLguDJt6uSPrusQsRDlIsIwGxr9F2eFFZPD7h3U1jTFz6VPtxTdLNzRJnaoyHa3RZayAnTHA1dltH10SYeez74v5t6qsnDnOmRVVMpsom6VFWtJ-ZKUBmDdn0J08K0UuEUD-d0p7euOJ18X8SmtlniOtCis0WP3duxi-Gj8eHiqscTalBGicxLSzTU5OWHp-uK_TPxl6nq3bm9RxfzK9fy1lDQDRSWqOnjct_iZVjvd3dtEju4nn3ly1jmE1Ms8GrttmXlQVtmnvB46n1e23dY5QJge-iO1XGrdXtsC8bVHEYt5hk-_usM0bQgnvjR0VHgdh5tY7xqawNLBdTf2hfFDzdP3VoGTVWkedac9SOzs2d50bzooVSSBYRLTP9Ap2AcefvNpWqSNee8tNkyYIc0jJAbMwUAqxyPB6ZniiLCTiD9gGD8IVxQ51n6Tioec_ydsfO5qCYr_thkTgbYWmQys1IiirFVe5_vyWFS6ErrzWOLPjhzzOVZrp5IeMM2QA3t_hENI0B45DuRqVxlv5r2uYqIRTnG9qMObhKZIzT9oCGPVS9AygzE_xGUvUz9T8F9JRFOwFpXwqbpODtBa_-g8sRKQ3XpD5IqAE7IzoBQNRRizrcPlKmJO7TQg5beRtyPlWJ64g1axQP4gQN9HWMU_xDTmhqB4hP7vlDXqKjvdGJKDoYpQWZLajWoBb9HqFHCVwfVuKKaOp5dL0Us7l7mArasVgkq7LytzDvkR6BIOwaNVCCbBA9_HGNvirhLKWPt9t2__EuDL82FYw8rS53Nf9wDsjIAu8xqovQt8LPFwtKkCXH055A60bKDz4wGG2m3TgWJDSkYkILietgMob5xgEIFh5aE3_NZ--SLFFM7OO4mHqmss95PqR9eLLgH5rvtqhdZ8jW1YUV2VCGx5rabwzsO7r3E4Vm9_ojxeYLSzrRUfKpmf3LGZyUBgZGQNo0y8Ff0dpAxrbmk8D824fga_dIo8vw0KbsgXvSaYPSfdRNEJHQVetLqEYZoKU-Zwiy_udI2If6dyicJODDsszCVJmiTTbsT2I5th5ndG1vtb8sAt7Kh90RW66NmZYJIoe8_oVF2j7aMbRDFhdBoAqLig8GGL8LjU3aKeKWBlWTqU2w7DEcIbK-9QfxnPgOvsfl_c3QLPz_-FUwOyYeLt_6-yDva6arFBUTWRg5AISTvUnWFDPZ1ED5vc7Gy5DG-x8ON7n8mVCD81PxpKORJjkSoJoUmrXR_XjDPwAhYp7k45xnvCnlsSehd5fI0l7gy_F2-LyNCSDp_U8Owge97l-JKqgfYgI7AsNY-THajK-wYnZCNrA0BkYiKo8ZS17ctwqipGoOqBzUcAIMe03elOor0fqD7swjFvyapv_krJ9gJBJh8QF6a9IAoW2LvN-Eh_2YqE4ZyDcUC9wpK2FvqyyEsFLHSk5p951Ji57WG_XlztiMvVMyWzwIYDFQaq4HcPDHp3NhF7e0HT16jQJulciJxJDg9JCQT52WAHWk0wXWVC-cB7_DJY072YhMVz5M6VKnZI9ZjccJMH9Up0ey731ItRL-_yOj1PeJB_AKGIu-ICSOFN_9US6NAu_uPchnWtWoFsFAwNgvA25qnlwRtXe4jqLJ52rPh2YlmQJd4OastHX7hErWRF-lIAzw5rg95eNkrR5Ptq4GLdFlveFgisSAx4HlGEzcoQu6M59nepaEoxCn950KFXN1DbcO4DIqHkweZKbIya5RguN_RgflM0AM5MzuAmR4CK4sCB7BIH8p0qTkOZtwM6UZ0OhY4XEpcfeaWzNjSiQL3cbLYC35JFktJdGKC_uGzQoCODArDNxh8PlvXRUzoqss9Qg7lhQKZWwUNdTe4iw_KJEdmJhHELT9-CpvI5Ke-csXhQfYu7nPGs3iGbxaotqH_d_GIHenSYand94fuIaGhpRSPgMRrpP46dOlXrMKeVW3qxWY6v9-vXcQCQyT1CAvKMt3Ejd3wcWF8-0mgTJGTpnO9gOJxP9nIreX1a843dMYGBwRYdnMCr514YnAhuKiVLRDoRSpMBCzoKQi9atyCmqh0HbZIMv86jHEZzSRNUdPqrK24Bkj_Wu52ML2Cycm4frKOwSuSZcDqFi9hBJZzefgbBfNBPAsPhkCi04xG-ee9MNH7FB9tjWEL8Jy8BYAaAa9yUembIUZRhvL68lWvp-vlHG-A8-CAt8sEsGbBMRvMgi9zylNSnMyC_EOJ8nUMa3kN4QGG7W0tJnSVDKPC4w16dK8N-rNPPgskYIcG4SLiNFtXqAQN3_9xJ6oxEbDifwW519yd3AVCNbW-sgyK7iH5TKik4hd4Sb3NOJHFgh4TA4QjmCbEP95BOd5W9fvEMgMmlY3uyFpbZGebvONGa6WulxG4DTfLHkRiPD1KS_Th2PTdYld3VDnuwnLfeqOJI68jc086D7CycMw_0sWLUlqu4pS1By9O_KawoCDJZ46VZS0nMgjYaTckgKnqU10ylVmOoT6yzbdjcRxr_Mv-6jt523i7NF6lpjoh7dzxUyC87H5X_URInqLed5H7qbJ2nsmH-n9kLOUJGaPkNKwmPomDzMvZAvoG6XOC9PWQS9Q9VERvMXZXUNzeEHUMXHeR6GIgN_23KzW1StaGudhSuzqkWYrnU-Npv-UomH8DwdmHdqFs4L67jROFeVznHLsusgYCJNELUHhT882l3pxZH0mx2z-nUe-w3q8PxhNnSlVloGrLZzGQlDgtMTEG2d99i7RkRyusV6wHF1vHEJq-YU21_vBm8jPpORXXeE3dQhyRgmIHquvMOpXnc_bFoWuST2AIo9d9R16pQ-TF1O7akBGTisSBHmt7Xy0p_jWcSMaFe1TGOqAaVO4ItmR7o2wR2m-jXuzbq3xqMosCayUhyvJp5GBY5NUoIFLzmEx-x1xJW5pVJmIGGizZmYpUSp90cnX1jbpMdb_BlNa4fFIpz4mLfhft52nnHiCo8pOMN40a4UDz0ua7HipzSAQn__ENe9xncIGtglm5QfZiPdrgc7Pxzeish0-gpprJP3r_aj1T_QwxxZn8Z4b5bnTyNcwODUFtYmHiaudsjQmJVvElJ_Ci56UN-TJIiz6I6sd8p0G9e5QS_gIL8VCPuyukRK907fqQfkMCJ7b9Bw_ICisPcBi6RW1S-GsyO_-RRNn1kOk-dV2CxTCoDIDibKddfTfru7HG-JktHa1TGOrDrImBKXCsMfJULvWbQqSWIyCBM9chwybhRFqKHwVMcFpfSyvBCX3CRNHs_0njwvob3V2fv50-S96Pqt7f_FlYYFLqbuwM3cWjbr5MWNp_dk11nJo5cDvNB5RMBs4G3uEyaC7TKbySKuVk1Exh271iuDEoeXLH92VsOVZocvgIvEBz6MHWvlVb3m-5QmutLbcQLMNpB6B34vgovTMWbg9JUhV9DuZOL6HWgLmYULWG0DtiNrpqqR05XkHmT93aTuJb2KhExOQUWeUDI7KD76NnrnyO5rCGJIWuCy-nXrwtlrzl-IGrzfhWzFZmWUKRNF9-XCR7BkLSgK1KxjMuuwjRfIxn_tmL-KY3uJ3TLPR3pKoo5P_7u6bsFgU6WnBiBg4SZYTRzhM_b2OqDx_qLoqJk_d5JFE_ha8ONh_O7_AC-RT2XLnDFWDC4M0--BB9TOB7v8rDlosYK8wATIpU58mbYqdMu_ksnmzFOgq1Ajqnz29cpbgKHR_cUoruZwzTF8qGysxVipEQCbVh0Lz1OQ73InKVOue83tUbi2eBpgpQ_l_3J2wbnZNOAJdiB7ecLWCkmCTwrPhofL_u2OFMlLE3pY6wND4DNYbSS5I1E0HHg4bFnUNw-IlDgxtMgxP_vzoCANXPlE7iVCZLgWzptx9Vx8b0B4nRRV2K7d8FAgaaIlpt0TClSJiu_dOWsTHgn76sb8fr2UxPD52emVPB7hanhz3qQynmWZd5MTE6Szr_lE3HXw0b8Q6hFDM1X56RmAevjGm5LCdoFP44xubQa65D7bBQmc-uBi8DyultQsWSMHDOjs697oELVvByPGax5ieyB0fS92Onw0K0YfmSB1Zb_-a8wKQwJAJ0S1ha-VoCeNzAEX9usWcE9FccFzUyzBgqKZxPihCDZSiaFdF2uz7cFgE4MEWxR81bo1qsvSLD1CNfDRqaeWGdXG3mriqCG9_itXe8tfHCchubgJzoEFkvvsl_hhGfAoKtEG9kJKEtxH5FYRzzMbaXwpr6w6cMB3mLDJxe3fKGcyM81hrGFy6XuLIOHYqF9RbAXnPYMSbIz7b2YnJGkOcesZZPrB6JQCW-A1x1kZBkmUILlhzh6AZM8Iu2-taudGkFt1Dur4uy2bJWm8ROPwQh4Vz0t8X4nlyuSu0WozDOu0iiNFLoW1ktw8VOJaDBvl3ZCLXQ8.EBhKre9PAODvj0H33wKDBA
[32mSceneraBridge        |[0m 01:57:45 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:57:45] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:57:45 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 100
[32mSceneraBridge        |[0m 01:57:55 : Wait for Video URL from SceneMode
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : {"alg":"RS512","kid":"00000001-5eab-2e10-8003-000000000000","x5c":["MIIDvDCCAiSgAwIBAgIGAXKChXgAMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI4MDRaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRQVNSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCi2dghP7y+bP6tvkJmmRYbqW50W0JNa9J5+D2ImfFK+7ipMz+G4431bylsPyftIwjhDvC1Mehl3nWwTmKIxBGOYnuIbEkuqV2/+JmjCymjd+zga6IQm+0He2t7NIr8pT3g2rwjf1dbRrYMCUtDCPOWVceBDEnCqi0u1RJBKJth6esOTGDUrAx33qV3amxT5X1ZZfJ6Jgp6+0lY9+W9umM+jJ9ka6lKQs2U/H9zr6fSfVvc+NQewpt3L5yQkunJyXel6jZVraUMBaFSwkhPuEBMSDkIR3PrziM8R03F3HHCvA/Kq5JX6HljoVOMa+3ggwiW4OcAmrl1qmtNd3tgBKdul7Q73IYb1oQ8w6dcmfQ5K/liQU6HREFGVtPtmxm5ecUfw1l/ZP4yGBq7VXiBg5IdgtdIbWk+nJ+In4/1klG9TgPjub/ppFOPB4v4ql6h+gfFZJ9ajZe8rnyYKCYzHXDpCkC4nBZkpWt+0kcz/t5JVnzT4Je0zoT9EXJYDzt8OC0CAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAm4/xl6y210c+FKRBCTLxCGDmjnG5H9+CT2Vt6+ouBJnbN6PtpgI/5fS1dUJcrRJFfJsZ3ZqyrTmQcm1INdudZ9y9FjDQRfNHc3jvzaFk6LFm+qJPbIoR4K/0twaIQQPKl48WbdLAh3Kxvz49vRMpl5RMVE0Z6JF3YhtyBber0Zvn1/JPN70h18r2JK5SHiMpJ0pDOQnEZmCFgV6dG5W6ErF5cWNlhydTD5u6RcX+baAt/II8aOEoAodhbFKT+i4QCFGnsnDif4UrQwNYuWuwa+pwA/dITRnzmp4TzSxhnii7AGn0XuuXRoLfm0uCP5Am4DmI3Ebef/MutqPDbtI6SNfFYdp0+MRRgo4GSmRUQts/i4gRtgeAaL1zlgBysapcIxtt4qHU/YjOyNhJCHH5s7HUAWF7dgmXSwjkhxmDSj7BI872u6bYwEwTv5OqyasxOrDR/kb7UJvOLUb1+u2xFkaeNsQJA5I2Kjv3JiD/AUcOByyAYd0cOpscRX/g3WMa","MIIESDCCArCgAwIBAgIQemQMCFVHS7SIPlkn+4fGYTANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDExVNYXN0ZXJLZXkuc2NlbmVyYS5jb20wIBcNMjAwNTE5MDQwOTQ2WhgPMjEyMDA1MTkwNDE5NDZaMCAxHjAcBgNVBAMTFU1hc3RlcktleS5zY2VuZXJhLmNvbTCCAaIwDQYJKoZIhvcNAQEBBQADggGPADCCAYoCggGBAJ/WAejhOYRJk6qsJjsz11bZLKOf/Cf9ZiKXUhLWMs3xwTRVPe0qmH140WxRRe81K2spFEAdhLbKSQJgGmD6jW+3+BQ/BdEno5+SnRbd4/TsMTikJqKco1t6Ci73DU0pAXoHxK5cRrTzBzSukeqck9XMrQ00ErWns6XZAtlP3Z3diLjXw+MCitSKjMznJ+9A1DvyiJiEhRcASaNwz+/Z7eQ3BE++hs6jIuAdtZsJvHMtLbi4/k2ynf3xuxXpFbm1dMG/3Bggu9o+/+JEPPYesyQ+RomAOR+Vtxhbu8FpjuONgMWybHM//bWDiEe8aBmmoxr7ziZWzQ3VAutHIp8i+BAMRwjMWSBrWo6dahbRjcEUJKgxxGz3+L3Yy8oZrt1yonO/9UER0az1cwvWgna52JVLDTZxOqfZX3yEdVcu6ljKnNfUQC7+2r+/pGcKvXyElNt4zntldhD1/Eq+Q/2/Csdg/c3ZPz0rOzWAb0ExXRz9Xpq4gCEJE77jnm10UbpXBwIDAQABo3wwejAOBgNVHQ8BAf8EBAMCBaAwCQYDVR0TBAIwADAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwHwYDVR0jBBgwFoAUugh/56zRvA7/SMKk5KJYGYwIPkAwHQYDVR0OBBYEFLoIf+es0bwO/0jCpOSiWBmMCD5AMA0GCSqGSIb3DQEBCwUAA4IBgQAPmabu5G7ET+RHHvlqNZkdExPL4tlmEBuzcB5uNUA585DSSIYVskiL2uWIRtVTkcMQab5UqCBlBoLajcVtfInGKGGxlHq3q/B7at2D2YYrgPGldX994EBNlGZeBne8KdM9nRYDy1znJj2c8TQDZo4gvJ6nOzdv4VjTvcLQIDAHr0tLnm93AhVxeCg+MQO8+zLHjNSeza4JI8JoolN3BIhYuy4N3R1HrnPzz5xeKmj2uRzT4t+GlT+eJXL20faXssh4wKaON2DzKZriqZAQFDoovbhYw4Ox/iT1djxJe6kluMGi0gScIvYR1pCJB6urgSH9IDM/LedY8Ox4PlQk5b3T46ZWQrXquAq0ava1xQE+R+x6nK4VKc7FuMFy9BAcAgbfH8DiUVZwy+nvVS4812mcv7ErqhUhiWmk3mpKcNEus1t1/OFY9p51F/Jnz7Mc/Ipkpwx0Pe4XqiiHBP8egz2J4JwKnHlmf92q4QKRgXlu0czRVy4FOENqiGb3jH8ePuU="]}
[36mEncryptionLibrary    |[0m encodedCert: MIIDvDCCAiSgAwIBAgIGAXKChXgAMA0GCSqGSIb3DQEBDQUAMCAxHjAcBgNVBAMMFU1hc3RlcktleS5zY2VuZXJhLmNvbTAgFw0yMDA2MDUwMzI4MDRaGA8yMTIwMTIzMTA4MDAwMFowHDEaMBgGA1UEAxMRQVNSb290LnNjZW5lcy5jb20wggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCi2dghP7y+bP6tvkJmmRYbqW50W0JNa9J5+D2ImfFK+7ipMz+G4431bylsPyftIwjhDvC1Mehl3nWwTmKIxBGOYnuIbEkuqV2/+JmjCymjd+zga6IQm+0He2t7NIr8pT3g2rwjf1dbRrYMCUtDCPOWVceBDEnCqi0u1RJBKJth6esOTGDUrAx33qV3amxT5X1ZZfJ6Jgp6+0lY9+W9umM+jJ9ka6lKQs2U/H9zr6fSfVvc+NQewpt3L5yQkunJyXel6jZVraUMBaFSwkhPuEBMSDkIR3PrziM8R03F3HHCvA/Kq5JX6HljoVOMa+3ggwiW4OcAmrl1qmtNd3tgBKdul7Q73IYb1oQ8w6dcmfQ5K/liQU6HREFGVtPtmxm5ecUfw1l/ZP4yGBq7VXiBg5IdgtdIbWk+nJ+In4/1klG9TgPjub/ppFOPB4v4ql6h+gfFZJ9ajZe8rnyYKCYzHXDpCkC4nBZkpWt+0kcz/t5JVnzT4Je0zoT9EXJYDzt8OC0CAwEAATANBgkqhkiG9w0BAQ0FAAOCAYEAm4/xl6y210c+FKRBCTLxCGDmjnG5H9+CT2Vt6+ouBJnbN6PtpgI/5fS1dUJcrRJFfJsZ3ZqyrTmQcm1INdudZ9y9FjDQRfNHc3jvzaFk6LFm+qJPbIoR4K/0twaIQQPKl48WbdLAh3Kxvz49vRMpl5RMVE0Z6JF3YhtyBber0Zvn1/JPN70h18r2JK5SHiMpJ0pDOQnEZmCFgV6dG5W6ErF5cWNlhydTD5u6RcX+baAt/II8aOEoAodhbFKT+i4QCFGnsnDif4UrQwNYuWuwa+pwA/dITRnzmp4TzSxhnii7AGn0XuuXRoLfm0uCP5Am4DmI3Ebef/MutqPDbtI6SNfFYdp0+MRRgo4GSmRUQts/i4gRtgeAaL1zlgBysapcIxtt4qHU/YjOyNhJCHH5s7HUAWF7dgmXSwjkhxmDSj7BI872u6bYwEwTv5OqyasxOrDR/kb7UJvOLUb1+u2xFkaeNsQJA5I2Kjv3JiD/AUcOByyAYd0cOpscRX/g3WMa
[36mEncryptionLibrary    |[0m The payload is RSA: {"Version":"1.0","MessageType":"request","SourceEndPointID":"00000014-6100-e653-8002-000000001962_0001","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","DateTimeStamp":"2022-03-16T01:57:53.753Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJrWm5uSVo2aXJrcTVZSHhWTDNkcHVJWEJBTmxhVmhLOUh3NlU0YWo1eG9vIiwieSI6IlIxeHg2NWJ0dGNsaEFhYW5TNmlfSnJPZENyelRaV084U3NZbGJPellha3MiLCJjcnYiOiJQLTI1NiJ9fQ._Z3SDAZcYPCNtJNmrcI6WUBFKpdeF-Nh1sMsYWgubjWGX45_khcQVg.C-U-ClyPVDVft3vL..OAgdMmG8rx05LDcHo5mWQA","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m IsValid ==> true
[36mEncryptionLibrary    |[0m ===============
[36mEncryptionLibrary    |[0m {"Version":"1.0","MessageType":"request","SourceEndPointID":"00000014-6100-e653-8002-000000001962_0001","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","DateTimeStamp":"2022-03-16T01:57:53.753Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJrWm5uSVo2aXJrcTVZSHhWTDNkcHVJWEJBTmxhVmhLOUh3NlU0YWo1eG9vIiwieSI6IlIxeHg2NWJ0dGNsaEFhYW5TNmlfSnJPZENyelRaV084U3NZbGJPellha3MiLCJjcnYiOiJQLTI1NiJ9fQ._Z3SDAZcYPCNtJNmrcI6WUBFKpdeF-Nh1sMsYWgubjWGX45_khcQVg.C-U-ClyPVDVft3vL..OAgdMmG8rx05LDcHo5mWQA","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[35mSceneraLibrary       |[0m /usr/local/lib/python3.6/dist-packages/urllib3/connectionpool.py:1020: InsecureRequestWarning: Unverified HTTPS request is being made to host 'pipelinecontroller-prod.scenera.live'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
[35mSceneraLibrary       |[0m   InsecureRequestWarning,
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:57:55] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:57:55 : Waiting for SceneraWrapper_IsFirstSceneModeReceived() - 110
[36mEncryptionLibrary    |[0m Before ::{"Version":"1.0","MessageType":"request","SourceEndPointID":"00000014-6100-e653-8002-000000001962_0001","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","DateTimeStamp":"2022-03-16T01:57:53.753Z","ReplyID":0,"Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJrWm5uSVo2aXJrcTVZSHhWTDNkcHVJWEJBTmxhVmhLOUh3NlU0YWo1eG9vIiwieSI6IlIxeHg2NWJ0dGNsaEFhYW5TNmlfSnJPZENyelRaV084U3NZbGJPellha3MiLCJjcnYiOiJQLTI1NiJ9fQ._Z3SDAZcYPCNtJNmrcI6WUBFKpdeF-Nh1sMsYWgubjWGX45_khcQVg.C-U-ClyPVDVft3vL..OAgdMmG8rx05LDcHo5mWQA","ReplyStatusMessage":"OK","ReplyStatusCode":200}
[36mEncryptionLibrary    |[0m =====PRIVATE_KEY=====
[36mEncryptionLibrary    |[0m {"crv": "P-256", "d": "wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY", "kty": "EC", "x": "tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM", "y": "-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60"}
[36mEncryptionLibrary    |[0m =====appConrolObjectResponse=====
[36mEncryptionLibrary    |[0m {"ReplyID":0,"ReplyStatusCode":200,"ReplyStatusMessage":"OK","Version":"1.0","DateTimeStamp":"2022-03-16T01:57:53.753Z","SourceEndPointID":"00000014-6100-e653-8002-000000001962_0001","DestinationEndPointID":"00000001-5eab-2e10-8003-000000000000","Payload":"eyJhbGciOiJFQ0RILUVTK0EyNTZLVyIsImtpZCI6IjAwMDAwMDAxLTVlYWItMmUxMC04MDAzLTAwMDAwMDAwMDAwMCIsIng1YyI6WyJNSUlEdkRDQ0FpU2dBd0lCQWdJR0FYS0NoWGdBTUEwR0NTcUdTSWIzRFFFQkRRVUFNQ0F4SGpBY0JnTlZCQU1NRlUxaGMzUmxja3RsZVM1elkyVnVaWEpoTG1OdmJUQWdGdzB5TURBMk1EVXdNekk0TURSYUdBOHlNVEl3TVRJek1UQTRNREF3TUZvd0hERWFNQmdHQTFVRUF4TVJRVk5TYjI5MExuTmpaVzVsY3k1amIyMHdnZ0dpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCandBd2dnR0tBb0lCZ1FDaTJkZ2hQN3krYlA2dHZrSm1tUllicVc1MFcwSk5hOUo1K0QySW1mRksrN2lwTXorRzQ0MzFieWxzUHlmdEl3amhEdkMxTWVobDNuV3dUbUtJeEJHT1ludUliRWt1cVYyLytKbWpDeW1qZCt6Z2E2SVFtKzBIZTJ0N05JcjhwVDNnMnJ3amYxZGJScllNQ1V0RENQT1dWY2VCREVuQ3FpMHUxUkpCS0p0aDZlc09UR0RVckF4MzNxVjNhbXhUNVgxWlpmSjZKZ3A2KzBsWTkrVzl1bU0rako5a2E2bEtRczJVL0g5enI2ZlNmVnZjK05RZXdwdDNMNXlRa3VuSnlYZWw2alpWcmFVTUJhRlN3a2hQdUVCTVNEa0lSM1ByemlNOFIwM0YzSEhDdkEvS3E1Slg2SGxqb1ZPTWErM2dnd2lXNE9jQW1ybDFxbXROZDN0Z0JLZHVsN1E3M0lZYjFvUTh3NmRjbWZRNUsvbGlRVTZIUkVGR1Z0UHRteG01ZWNVZncxbC9aUDR5R0JxN1ZYaUJnNUlkZ3RkSWJXaytuSitJbjQvMWtsRzlUZ1BqdWIvcHBGT1BCNHY0cWw2aCtnZkZaSjlhalplOHJueVlLQ1l6SFhEcENrQzRuQlprcFd0KzBrY3ovdDVKVm56VDRKZTB6b1Q5RVhKWUR6dDhPQzBDQXdFQUFUQU5CZ2txaGtpRzl3MEJBUTBGQUFPQ0FZRUFtNC94bDZ5MjEwYytGS1JCQ1RMeENHRG1qbkc1SDkrQ1QyVnQ2K291QkpuYk42UHRwZ0kvNWZTMWRVSmNyUkpGZkpzWjNacXlyVG1RY20xSU5kdWRaOXk5RmpEUVJmTkhjM2p2emFGazZMRm0rcUpQYklvUjRLLzB0d2FJUVFQS2w0OFdiZExBaDNLeHZ6NDl2Uk1wbDVSTVZFMFo2SkYzWWh0eUJiZXIwWnZuMS9KUE43MGgxOHIySks1U0hpTXBKMHBET1FuRVptQ0ZnVjZkRzVXNkVyRjVjV05saHlkVEQ1dTZSY1grYmFBdC9JSThhT0VvQW9kaGJGS1QraTRRQ0ZHbnNuRGlmNFVyUXdOWXVXdXdhK3B3QS9kSVRSbnptcDRUelN4aG5paTdBR24wWHV1WFJvTGZtMHVDUDVBbTREbUkzRWJlZi9NdXRxUERidEk2U05mRllkcDArTVJSZ280R1NtUlVRdHMvaTRnUnRnZUFhTDF6bGdCeXNhcGNJeHR0NHFIVS9Zak95TmhKQ0hINXM3SFVBV0Y3ZGdtWFN3amtoeG1EU2o3Qkk4NzJ1NmJZd0V3VHY1T3F5YXN4T3JEUi9rYjdVSnZPTFViMSt1MnhGa2FlTnNRSkE1STJLanYzSmlEL0FVY09CeXlBWWQwY09wc2NSWC9nM1dNYSIsIk1JSUVTRENDQXJDZ0F3SUJBZ0lRZW1RTUNGVkhTN1NJUGxrbis0ZkdZVEFOQmdrcWhraUc5dzBCQVFzRkFEQWdNUjR3SEFZRFZRUURFeFZOWVhOMFpYSkxaWGt1YzJObGJtVnlZUzVqYjIwd0lCY05NakF3TlRFNU1EUXdPVFEyV2hnUE1qRXlNREExTVRrd05ERTVORFphTUNBeEhqQWNCZ05WQkFNVEZVMWhjM1JsY2t0bGVTNXpZMlZ1WlhKaExtTnZiVENDQWFJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dHUEFEQ0NBWW9DZ2dHQkFKL1dBZWpoT1lSSms2cXNKanN6MTFiWkxLT2YvQ2Y5WmlLWFVoTFdNczN4d1RSVlBlMHFtSDE0MFd4UlJlODFLMnNwRkVBZGhMYktTUUpnR21ENmpXKzMrQlEvQmRFbm81K1NuUmJkNC9Uc01UaWtKcUtjbzF0NkNpNzNEVTBwQVhvSHhLNWNSclR6QnpTdWtlcWNrOVhNclEwMEVyV25zNlhaQXRsUDNaM2RpTGpYdytNQ2l0U0tqTXpuSis5QTFEdnlpSmlFaFJjQVNhTnd6Ky9aN2VRM0JFKytoczZqSXVBZHRac0p2SE10TGJpNC9rMnluZjN4dXhYcEZibTFkTUcvM0JnZ3U5bysvK0pFUFBZZXN5UStSb21BT1IrVnR4aGJ1OEZwanVPTmdNV3liSE0vL2JXRGlFZThhQm1tb3hyN3ppWld6UTNWQXV0SElwOGkrQkFNUndqTVdTQnJXbzZkYWhiUmpjRVVKS2d4eEd6MytMM1l5OG9acnQxeW9uTy85VUVSMGF6MWN3dldnbmE1MkpWTERUWnhPcWZaWDN5RWRWY3U2bGpLbk5mVVFDNysycisvcEdjS3ZYeUVsTnQ0em50bGRoRDEvRXErUS8yL0NzZGcvYzNaUHowck96V0FiMEV4WFJ6OVhwcTRnQ0VKRTc3am5tMTBVYnBYQndJREFRQUJvM3d3ZWpBT0JnTlZIUThCQWY4RUJBTUNCYUF3Q1FZRFZSMFRCQUl3QURBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdId1lEVlIwakJCZ3dGb0FVdWdoLzU2elJ2QTcvU01LazVLSllHWXdJUGtBd0hRWURWUjBPQkJZRUZMb0lmK2VzMGJ3Ty8wakNwT1NpV0JtTUNENUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJnUUFQbWFidTVHN0VUK1JISHZscU5aa2RFeFBMNHRsbUVCdXpjQjV1TlVBNTg1RFNTSVlWc2tpTDJ1V0lSdFZUa2NNUWFiNVVxQ0JsQm9MYWpjVnRmSW5HS0dHeGxIcTNxL0I3YXQyRDJZWXJnUEdsZFg5OTRFQk5sR1plQm5lOEtkTTluUllEeTF6bkpqMmM4VFFEWm80Z3ZKNm5PemR2NFZqVHZjTFFJREFIcjB0TG5tOTNBaFZ4ZUNnK01RTzgrekxIak5TZXphNEpJOEpvb2xOM0JJaFl1eTROM1IxSHJuUHp6NXhlS21qMnVSelQ0dCtHbFQrZUpYTDIwZmFYc3NoNHdLYU9OMkR6S1pyaXFaQVFGRG9vdmJoWXc0T3gvaVQxZGp4SmU2a2x1TUdpMGdTY0l2WVIxcENKQjZ1cmdTSDlJRE0vTGVkWThPeDRQbFFrNWIzVDQ2WldRclhxdUFxMGF2YTF4UUUrUit4Nm5LNFZLYzdGdU1GeTlCQWNBZ2JmSDhEaVVWWnd5K252VlM0ODEybWN2N0VycWhVaGlXbWszbXBLY05FdXMxdDEvT0ZZOXA1MUYvSm56N01jL0lwa3B3eDBQZTRYcWlpSEJQOGVnejJKNEp3S25IbG1mOTJxNFFLUmdYbHUwY3pSVnk0Rk9FTnFpR2Izakg4ZVB1VT0iXSwiZW5jIjoiQTI1NkdDTSIsImVwayI6eyJrdHkiOiJFQyIsIngiOiJrWm5uSVo2aXJrcTVZSHhWTDNkcHVJWEJBTmxhVmhLOUh3NlU0YWo1eG9vIiwieSI6IlIxeHg2NWJ0dGNsaEFhYW5TNmlfSnJPZENyelRaV084U3NZbGJPellha3MiLCJjcnYiOiJQLTI1NiJ9fQ._Z3SDAZcYPCNtJNmrcI6WUBFKpdeF-Nh1sMsYWgubjWGX45_khcQVg.C-U-ClyPVDVft3vL.78wWI8DkVGHZA68AWRhMwViBa4t0jSrvWrV0qFREgeOuxvaPTPtODVvccNbY5cNYxhjanubafMBuc-xOT6L_-BlgoWSEAebBfuf2IghC5w-UB-q4IZNXqZs38AVveSAzsrgYDoXgxYmB0LJnH36YpnIsSOllbejprKScdRHbMCTZYJWIAjSLtfqwnfF1Xb28BFzXraE1enD50gvsQop9ATKTRxHFyxfFEBLsCb1eftN_MfREffSymHmHHnIEHbiE99NknJXdiYEqtaS6Z71_0Hu7WQFRZNS5x_L3FypsefI64NH8iuIKT61x60ffGg3IqJ1k5N5ExlL45oaVd7phPRnha-afUIbh6FqbsYAclFs_wkul_8MFS4wpCtR5Mx_FSq8rZNvasc8bm3gKBV1SVx2xmSSi66CoakzPZwVZIj1QE685lcRaqwABbm3mpRdT2wejhvQ0ruDhzs18YEm7GuYctiyh4oW1cXr0rBgtm9WSzt4osk3BNJftrTe4ePeRL8fad2f6LksnxeBkjDMqtiP-Xjkx5njLNL3T7XpMb1y77a57UaqiWSpeIO1iO1OCS02pgIokd-u0tpHf8jD33PmcxUGcQayiLa8qEVWW30OvlUkXE6A1KxXtRjtxPF0-J5boxmF-Sd2jJFc7hJmrsOgHtGrizMoZ2M0Zr08fyK99qiGvnUQyNvwX82aiKCZhGQxyK0ZHsjioCGFRZLRI0_fBBlVqb3njdoFP3iELkAjlh8FNKF-eKiG9Pxf-itt-zmhvrAO301jepNhsBoSOFgDZYYR3jxDM-sxKJlAfZ-Tq5eF2I2DOSZ6K6ARv-8r-WGv1g0xPAq5lebzcIFJmOYBPuTkFGzcTu1B7wj_CBDt4yLy-x4z-0hLv7bzuSaoL7Ez7Fn62wdCAforUGt27NTu0_2XPbKFhTbrxjp2K8fBkwjYwOL9Fct9yYshxaLS58kD5BfJrwl_CqsEDs-Gn9Kd5uHNkkxM_iZeuadW0aIWvXi-QF5t1JOe4nzi9f0KwgsY48QZZ2Hnngd1qt8JP8C2lAkomDJ1Upg7fZz3PBjc7Dt_yjrXoH3_ik1dxGz5pkN10K4lIkSB8a14TGcIvcCCREGgLwkyp8j8a-7ikEMHEkmVhOe6VSH9_zS42xbjuRBrbl3I1reGh6SSJPBWHedRSOnjnLkTdhrIiW91aTvlYeE60g2Jsrr09uuUK-Hc3Hg7mKBIKz61Tvc3XlZOkIHi5VigDKv3nYxMLiXC0cWIptSYAF4j-2-Iep_oThn_NzTO8eOS4Nev8RGiJ7xovLkwL1MIkyNE8C7aBGA0UE53BAEwDXsdvLRQyZgc6zUhcrgmTg_l7mCVoUiZYnFZ-N57zuG7l5EUDSFJwSV2P57ctSowC2QgIK-X6xtI8r9niNWtPGlFGxNJa52_wTItcUijljqGxS07CZiVhayyWYBF8ET3Oe8ZIdLipcrTNJH2LI7tKz4Lr7DJlMUxzHK-chkg8ZhmfgRlCBrHXchZryFvMqJ5Fh1y54a0y0N-A3xGzYzqBDuiOnNnQdH_hIWnThIVxlYz5XKn3nGcRE6O99i6CeGwA_fyZkeE-0Ffl7Hu1laAtoFvY2p1NSEtuBkrY6Br3BQzwYPGtinUjVjgWHjF6gAYNRPQcOPgkdM8aKtOlQFr8kzb-p12jxU9kEXwOMjPT2xWSeV7Ho9Nmb6Jve3Zq8uJ8dfiyuXHjW1gMs9GYNHHrWrH6VGYFWrrFHKrjPqv01mfH2oqYFy68xQ43C8bN-_xj9hmWGjtcew_PzXOrcTZ-GlojT1lxoswkjkcpEIa6VxEZkiM9YBVdIsBwKblw-OA4764xCIn3d2DCXCspWAm2ytjd43UjjClhs1uabljcMVLD8fX0NAyyipHJkxDHGSErKiKlY3uGO1cuc4q66la0RWwEiChOKeyYrg_WiA_CjFAHe1HOZhXLGdtAKa-CymsqT_YyfSSzdN5L_0zeYNiAJK-sAKKj5rUvRVlHAjqFsKRVlJIGa8oEasyJ92Q7getO7-hkvC_lgBkKUvKKAfpT-Ymnk5Gc-aUix9MMEeNzApvYVn6_6BTqWpJyR7K3Ob90c1qNWIK8JHTW64LEWtiEroIxei4odq7Am7eSbPL4TKVUDHuErIwC1PD0u7vkIiULU6AOkuTOj4ailRRctDL_bQUptwVd_SQBtQBYWrfAbVW-wTBUHNfOJkvc86yEmQAdGRcuSz0of-jQG5Edx-t1EVP8NC-CQihPro7hUxnYyuh5UWV2CHdcc7rH33nz3MfldPDCzUOVNDSDhjNrBFP_i2mEQLmijg61NpJ7bNbaSVgjs8QN_vwGwwK6EH93lfSzqnxvnkgUVtc7VUq2qKqRDyZtQ18gtjiJhDHZQMQlL-5ZGhyBRPGd20QmxnzETsSlSWU2vwPFH3YF38jLNpBkk7ZWxGjGfK656H8kA-ym61i8qYmVvb6GEIHd9akvplHlBI2lRhM-CaagbORF4_3hmc5qegBimIPh5tbjhET-zTe2eDmFKnMCteyR1Q0Pv629aCIwDdmuEHrBJmfOO9xzcW9wTqLAlWfSnhH1z2XkdtIw5tkx5iKzDcv5Vx31pUf3RrA_n-ZN1XIleuidXH20-hxQFCoR3N6q3HrqsGKXLYftuGmCVRaePFX303v3qQSXlpsXg3VvEMgDANVSMYHZ48zQmKhrJojiYGT9dAYdnFzaiOGLHhDkY0414yA5n5O58rFsS6v3Ybjg716AZH9bnf5UtTperfBcK1RCl_5RwfN4PB2ZV8DS189hiS_asPdDZiB9jmPK4iYCPzRgl72UCAdUhT7F2k6_XsORbkxsg7Tj49vQARd7ddFjNToM9ttsC2YlPtV3FKCXwKxnoU54cGJG_1JZzhZ7wDHpngwDcm2B83rwUJ3wdYAu04lMDsdqg1BG-SSUvmXXShGSlIdjNIlB-JVQ9u8soVGo7XeExNyQdMgCV4zYgoZ4xdPdl-X6Aaa3NZiunqicFt1JhjMNlo-vDL98pwuBF7qs5R5GnMcDOL0yP8PNPkfmb5GeqRUGAtUIWGK-CwuXaj-CdlYBEyG0GKMhQfSbS_wRqjsYI5Kt3WJlwNzzf_VKsOBKBQ0QNzV-AEhPR2xSfJIyLx2c3gnUNH1FF38eX7k3KLxgHkDCxh-lbLkz_gsXAwpPggrwSa4lLpr4E0TZcQOfASXIeXJalFrmeSykBP5d7k3S2RJxfmVugqdD_Y5m7PdMa-LptB_hNGFDW4Olb00HnIRXHqXMsrXuxZMFfhhlg97L0Wg5EE2N0cIVN_Nsc4PVEyfxsw4M0B2Od3qAcDw4yNVX_kRfqdFwzq7x8kaQ0kQC251qu6BsesnhE6x9J8KxZRyII_6vRaVqBYqG68kbLTHnWRyF5XhtGx9mgRMsQPuL22CZDo3qXSbpyfLz91eHLaZz8cbE0GF1NynVMKnsyp1kjkNQ4cuJ1N3zFzGJNzaXPdxWHMrcCW6sD5for1dZ8M4lXNvKyWFYT0KBlbrVo_NTlo2b5qNZJpBBMFjOrdJlEbfsOGP56MLB0oKeDKQu64XcYGZGEDPVkzqp3tiDUzDtVotSAyqfLknvCsC7dphCGHTyOaQdGidfwGShnIcGYaMN0VZ4aacGAJpH5h-g2BOamcQMmnRz11E9uSCslRMOENtJPva7kounYtc7ozQK3sUS9QrCL5g0PgQBIjSYlRN5AggY9MCVB4M96LqOdt-n3cm4k9WB-WdI9RlymlFS8ygntD5bBQ89D60QU1e-yCkSTHQDT5KBd2XxZtLed42hQOWBuWNL-MIk4Vo0dDIbE6TZAG-D3_mgJ_hIX3krl5Yk9bhC-_1t6lemEW_ao1ng1TLRpP32SjWWRrPPUl1jD32QTXMdI-GqL7nPHmZKy1XuJshtlxbf1eeDEwzhqg9rwvAFkiOGl-9l1dqAgQLXN0tiilpx3C0F2MsxW_J8croOlYqMc72dibQQt_RUXv1uHoC9P-JagF9tm7Nc30GXRcdBHHnsJwoRJ48xXAe8oMNwR8xHoukqXnxhhoiYmNVrM12igMzvsqhsARz2INWsPkydtOH3LLns0ZO57yIVQvuU6UFEcEQ_xuESSTLqyImoKgC8AeWRhK6HMnfq3zm_m6skO03ymdPpD98s4OGZmLBH_86Du1W2GYRJz7r-5NjSlxRFOu2LoOUfzeJDPMgu9oAuu5Fj55y5RXOaQPWs-tnJgOwnRPid0RHWoKZt9g6xOsLIwY2RJcK44Nv119C7Dn03U3Ny1FyhhxJrCQLqkFakV429m0VnfaymVfHvKhKHCsvxXeMgaSF9coNrjEg1eq7hPZ9c0ecT1fEwt0ZbdBHX2YEQ3UNfkhyl_dhMhcSrwf7WCA8m8r7udW2j6lAcCJ1XCTyI01tMGPoLjcpCMmUV6NAXtsexk629MqbYuEseNEe4s2l0fbco6sYB-wQcZlTRlU_JSPx8r8ijUg3lYi9qWPiFev8iWMsp5f22lxT9jnNqQaIDyjh9HmIAOyq5eAR0w0whw0L598xfW5_h4ZwaJHJYLsOiDmRGmuMI48RFo-8cPtgtOmSxbrK0XRxitbkA46gCwWH4SXVaDFbCBF9jd0ug-DahPZ0xFPUSCAd20ptU53kGEQnMSFLAeNnI8twO92wGeUqU4KI0SvGysT2Cj1LFC9glbViXsN1C28wZwfdkv-BLiC3mDRD5vQIoyMkN6vyZPYLIKALlMuPGC6gR0aP09U0I5zE8ymGLj-gMFgU7gE5xNb6P5VjuFlQyqAj6t4c0Vd059U4WtJSFEic5gtjvPwy6atrSZwKekgZcJdnbg1Of9ASgonAUFuAwY38aT3fYmSNs_DDmtthQO_JryLJ-ts9jq5tg6c60bIBHUCcHO5-QiohSIu8rB7ZQyaxO82zpASzxRXqt9JtzFQDWk58tnbVrXyheRacBeZrn9DHEFEH3xo6KBOLNpbRYi-ZgmAZsYsbM7eo7PpHP9cVoVW_tqKfT-kH_z-rR4BMOKUC4fC0NjaRE333l6mNnrYx7DGzCZjkx9GkYg3nU4wDqttfILCin7ZMdFQyMx6ck7qscDCo8jL5tBnK9xRA3nnYqIn2OvHrp2j5AKHvf00GVyIU_tActdhEHarwVcDsEQmvkdDq0Up5tgdG_f-SzypzHfnh_368ZvUz1OMmsgLQsnm19O_Cr5CqQHh3_cg7SlLxvtSB1DtX3hv8XLal85GhVTr-68_Alrd-Zm1_fdL0lG_Y4r_zqWKMok_deyoP5_Vc97eEk4i0dY1826MWAQuwnzA5RZPAYti1-y4_3sDKCUGWHWzvhpqq_nM0df3f9KTPTuycNN74VHvKAThl1lts_bS_hiAKPBW1lJhEBmBuQbc9thCkdFMaAMFQNOC_DhaxWHUgVxOgUWqmwvDRmrHbgfU0IaEIU8WKkSc2DR34DgWTJr7bOZHtvzSUCGnntH0vl2Ece6-h7nrsKEghTZao9UC7Wv9qRnir0QShLivoyOKhzD5bk0H64gdLgsH9HSjgar6SKVeJ_Pu_rYAzZJpFYXnyUX30EXxyot2R28r0n17p-5ImxUfIkDXbOFtUop2gggYY4JcVSPIzVTDnMbvf9deDlHaw0RQn4PufITySfEVm7UijpNeorT-O-ilhSyZdP3Dw-yVp6iUr2bNpXZGIc-k1pDjwVn_7VGNoGgXJVuDw-tSVrNGfR0_MJ4jli5qHIwK7zrjjSp-mKnf7Ww86JucaEPZHzjxIisG9IV29VgNfOz8K-020dJWXdocrj8AM04i97gKVScZOPZMp5WOlUYN4Rk1oAsRYKR_Nndpa8fmgvNcFyXjRVNMRODQhgw6VEV4pMT-r_V4SFuCKKvNM-pO3YCTtut0_Y5ydxuXgsWhY74Kfz5B9wE5S-HXUjVoWARlFdM36AQBUPjBt3AYPe2u8j91j6oZcyKO_aiJsx6Ikl8WO1S5YhvGuWYyUDZHlIYQDS5HzHpSDvb1Rn_oRsbK38V-EvGHMM-F4oDEXJQ4aV-y35SxfaJhnLLhDb7FNK8spTRJ8Wn04YwUFvFQWHjuk9A88v0JfDm5xYFHvf_73fXruQZBElqb9MDyg21ve-wpsYxb7me13oFG8yTLvbs78ZE_Rd6uDDQ6n-tgC1EHa4LaUGIkMkvbTYIYc3Uu0j5n9PS3Ne5jYM1EJNzmpn_LT0YGXEessMnRsW4u0uWTCxHtbKM769aVnF9fosEDRPTPrzvMxQrsSvzjI6H5eTiUo4fQ2q-QXuhFbctvT8wlvS83BNi1zazzQZ7Njwr3KaV7zH8jDq5ctNMLcEsexSSdowiRUwbPHq_wOt7m4OS5c7fD6g4v9SNDHVx5bP2pmYdQCjTBo_v3uh56sGvqbC_iaioDvoJSnY0ck282HskZnFqJCSAJ0RlBYepQtbf6Fdqv1_H6ju7XWqe9erfpNy2q7Lez26SYxbUNAhu3fIJWbYSi8r_VJ1Hrln5yfHnr2r1sah8z9RvGXlqefAPPy1CPs3P-7_3cb4-ybH_RZFdgWWoBjSGaFmXSByPIMceymvbQW2WNklLmTQ73wblFvUUMETJdqzRqZQVpiVYpercoeHW6Q600UDE6rQtsE9eVCFdJeVQlwVHloYY3bG-_FhwWMfzme9Bk-YKHs_cv7ueW23lbpCRMnzo7Ice3ZVgmUnHKOaII9ka80HMD44U2o1Vdipo8xw5aueJ7bKFNr8IxWSQ4kqjMqHAFnwUvhBvIDZ4AtJP1pYaH3EphgueHbVOJuSaH6kZcKBW0fXTwCCCAbxCiab_yVpklXmQ-WOlkOE-da4uaScCPvsiKHospD3AXgcLjIaRgTGb6VL57iGNhnwi5jMr1uiq-DztZHFoHua6CMTriPYQbshg1VoKjEc9WXjzLIpUkNR6rCyuWwby23V7O_1-urGSh4Bg9Foo28LhbP58pNyCgEWDNVHPy65assggXDi3d36NG2nlK03ODPBOsvmptEIxElckDF5IiCP1r4A8eR0SpF0cIjiT898-b84k4A8vcz2WxUylkO0_dZ6hlyGSzlrH8Fd7FgBWqC78tRErE-UFBVwWX0apUP9n1aVO2hkmXgmI7X9dbUB5PIvhGPioeyClnOh1cqN_AYLpxJrfeD_2NGF3Tw8yFO9ZqT87ZEvDUpkyHUo7Yq6iLDS9nFgypmYCC1g47E3H5n-xxwN9HYehxyZ2-vowqhq1eFPdec9QnYqdqn_qe-pT2AIUefUXMe6DbsiVtEkbHc11_V8h4-MWZnTUPFTpraLoQnfIsW68ACzXQTrXnexXThXgDt0xnNDb1pYs3ws-ucW3qyHQ2ALnSP_nuwlJP1b5D2ZCrv8mEIBADQ4lKZUcaH0ESWBYHevpUriVaOGK_-BxHs8afmDwl28nTK44yuAhuubqFtbkMZCWnFJmNRIPNr9mejgLXGpCB6O2rKss-f2mocUBTNzShkQRoZQVEbUW2W_uxTE1ES6fPhnnKpTkzB8ZDLNyd1h6ZkMjFwfYF0ePGLfFGV39xeU0THBQFkhbIR8VM9KOYd4JvCIgXSh31xilXDDSL_UYQ4VojhhWmHDfDDaevz5NMBYrg_dwCmFnk1EdUpbfmMmR36-Y8Z7twZUPtL9G00wp5s4GuP43eailwUOyNgkjAev_7VUAiCMMSulT7HQ9BcPNKSAd6Jqq3KYyKyo6k_KgcBPJA7LsYzekAq0p09POuFenmtH2963T_XfMwsUWeVh8nmPtsoxEueXV0VfgRgQ9BA5TisfU916JeRm4zKxtpKhLv9D6WUFx6ElKtAtNw4WgQRlOjs7uX-3D6Sv46kSbXxtxkp3Dk1Liw-4st1YTXZVFyQ75Oz-bJW7f0ehg7tduP8uqkpKLl0CkFP_75JduLVJXw19kPFjgvGbGT_Ozi8HTv4_nvNc5TAtWBmihVHqL1O2RTNasy2t6vNEJvUWBfo0_gY7GitJ_oO5Y6T9Axa8X4EwHHzyYrE6LUJgwE0khk5Ip9c_ZYwAVR1szk887FnJPT10VLqmRGYg9yuqC-LRb49StBKQ8FqrI0wgG9321gh9caZ722FUpUMaH3Vq5OFATDGKHXGCBtpL-V-yhh-2nMK567C7cTcEONyqk7f507P_oUSuEWLJth-8matb769O6cmmzps3RGn94bT3jkj-GnJWIJapjaoZHtGygnXCqEQrNhv7-Wm141NMMqc8CV9j1x6QFxouoQZHM6tN77K4da2cv_dq0TeLxVPMdLGH_Rug_sTC5yXCBbiInriQoI7kRfToXSkIfed2_1K8j5gLc-HDYfE5TLL1wUiETQRak18Eo7DE_-b-qCYN7x85pMh_zvwAyGHc21ZS_filhhvZaInDvjTHFpTXq-rGbf0wxEgAbOI_srZ1Vp4aDslQF7oQk0EfLXNkS0mQL-teeqDp_ZduurTFptcthkeA4EpdMyhVqzky7ijBZQyg8tC9vgrZoPQRs584ZM8lcnS9Tp7ODpBBdDR7MFqNU4ZGDD9KyxiVn49WigOD2S8z2dWCpOuHWEr1hlSPTY6l7Emg-lnQq9rnGWpQEz1bdAywYR5FAlPFazcVkjFc9A-h5SQCmFSKDYg6IHQ7M-jJGVdU0Lu-L0PvaoVI8oQHx56g0Mmg8SkT4-ZxYJUi0QKb-eAlD_cfqjOQKFy6AJc57Xa3Zl9Mk8qKU1_wWI0WrAp2V2lBlAUuJ9llgh-3_qWEYTV6N0HaJQuz6y7o6ZbHuukpwGED46Eq0nfYlIbZkyuLJ24Do9u8_gsVunxzpKFQqFd94ZaFCU9E3vlo3K3SHkk_kN1RnxEQXEBijiFtKULE7z9mNZ3wv8Le1k7wo3Q_bH5hmOdCtk3UhBfIJHT4l5eVj4K4J1qP770uSeBWWD3Lbm6BxZiVie-VFXajiOtH6yZmqZE3i7EkixWLHpfh5o33bjXmI17UF84lNAwkenD1gGzj4mR0D0Xojk_4bTnzCep7oVxwYOhUhnxU31f9zxflnpJNm-4xeK_Bc4ZK_2r_Lnsw5-s813ijrb04CN8eYLDvgVvSVcnJlOFgHVKlQ3wE4_poYDvEXPv4Vu3BrB19RiOGDToIvdOtiB_QvbKFq2EXkgzqZlRWt63VSSLBeZDS5nInWJVGOAEU9Ov2O3WQ1Rz_Wag2vjxqnX-kEZ3So_2GGedlQQH6-PrblKWHBB8eW831F259j7bHmiHHEflyqeNFlCNuJ94Pyq5bGGF2AlTh7M696jMFOFWNVJworA__ARxk34h_F6_ZfjX1i2lYKSQWiFhnDFzsbSijPRwMoHNabENiE5JURqt-0rjlQBX3At4bDY6UK5elitWmrAXbJGrUrF8DUcBHN_Ra54X3QySG8R9EcWQnYoU28aby380BQqRm1SGBrxhN5rKstYwkyW8pKhCDjtufCVrcSWncYjXwsN8b-oBSwiPVg3l_G0IBnmpkEiHPF_YwuZXlqhUKUtGDXlz0s0aLcs6u7Y_E0J5E5SE1-Sr5ZGiVYdwRP43s4v0lzJbV_atFygurQI3t9vFrT1KexylfuemphEcvZNUy6JtPBNJvyKYsza6a_YXl1O8v6pe3AOP3vzKSCYz5QFrRgKW_4UVrwxwCdJtn355S-EobI5Ut5j4dFtf1ADmOm3OSSp5gVZA7jPm0iQhAMJ5gM6rmGyOImRbIIgnGKNZELlUf7cURR4k0ki3p6vSfYnKyN6BpUuuouKpReC5MhvNbzEA2_bz39ApOvhGRMIMU-254ld2b2XjqDZtxm54bDYHp59yqs_nx6rD3G6B9VsEuRz8RXMud_y7o9uaaHNbMz38-EH3KrLChoSqIXUcV7VwcoDUcKFwzbeK75dWDdcvle7XaYTbeNZPlRedOhVo1KDo294eawwGqu9bc_2wfv9KX4syUdfBj3ABOlzgeUZQ9kbQQfF64tK0LLTMj1mrg55-HCtwDvRHgMLEr1_Ox8BxfFFOMle_L-Lcy7Qf6GzZqy3B31xE4bt-PcH09YiUIkiwKJ2ri2oScLoTA1vTZVJithrNOo4GQvPAJvQOghAfwhpYcDDDq9rc1n8OE9gjOgLwDaq7MZ4AtMtr1W_W2kA9rmodZck8_j6XjOVUi--6HrYNzXyJhBfUazOd0Rp7pYuDFMyzbTuYPpOlUtq5pLPU8r61O_D7iQ37oZk-10JEKJeIhX0CGzTqXswu-KMkV2LXWCzeZ8s_hKJDQlObSHz56c0fswjygXKcWvB6CnP0EN8oe3h9STSZ8RrKDw6jtdZ4rwo5t4ylsreENhGRlFFiDsM5XfaF-Mv40uqHvj9sKbT_bxkbOGgMsGx7dFHqGc2YK89JDuy1MYwQvkVtPVF86IzbP5_uOSxLvB43aZ2zwX6KNffkXEZiDiADdXW026nKXG2PF9Y8quHwFZhmNeQSNn7bGcCakbcxZwR09P79g4JEuaAoWSgBvCSF4X2bIiY74yo4bvNw5y2lgZp6EmUkij1xGkP0q_6wMpzY7vD_UTW7lZC77P0_vTAWl7eIVOfgKR2y-XzJP02pfvAGjLvCIfbPMEM0K1SfBhp8RqNKWJcT1P9oWCKAILzYgBSM5JPWKXD3GZZ34zP5nPelcWl1u-dLFUu4wmUzvONVmjLHxAqhpi7crAJtOGR3_QD4EM4S9-FxT8KZxC4ZrbD5oeRPOK5-L60gRpzVAjV7RKj2Wz9TCSSiON-NYFi2dd0X8la3b45E6GvR9aS1-dH6wBBvObbzV8xAY208DD1Hw1ueZ04YkNYr7j7JxoqhGiCqz5NI4VV2pgwTmpG8OcFvaKuEKSSTtyiLPgDIDHdAO1g9vJqirGZ5qpUtSubf2xN7YxYR-S_lpre_rPhBZ6G6E79r3bHRspOiGaxk-E0mF2wQBA0K2Nrxa731lU9JvjJS76NgZMXehlo4ccHYQYC2cP5U67VehlqLeC9N7CvCI5W_2UKBobLE52CoBIS-F6PqmpAluLoFCnVKkAfvZLGhOUHPR-7ZD62B0XP-a6LeoYerhAiAje_72jokl1j64b6AhrJssxX-HwmzeJQ5u8s0NPgQ855U5swWSLnGwtLblK5Q6sk5_ywgyHBXxVDOYag_cKrC9o1jCBesH84gsgmrO4JCodgopeQhFJ-xboZG41ehVoKGjFd0J4BASCfuPpKGqzCwuzztmN-30OXva7JxcP8lzCPEGXpr6wBb14htOhB6VdNMJHNoWxQ1hjZ0osaIUPtbi0yAG1m-tcM-UmWqCGsfcgJ4X8V4Y950H-dxoM7MvEVDoyG5fVhceA_86ata-Ulw5Oc52GGAFjnb5J14xbAtxvfBRDcB_3kSWuqBHEqQGOsr-TSUHSHqMi0-ukW9ltRH-Upfh80lXUDA0hjgLxJijJuzC01qoDBtrK1RA3pwqkD33KaeBVSgUb7TCVuVzQLXOKkzhZfKWHQlexBKETTG785cq6frfFsmNNY_WmdS1uDnntDV9L9UicjLYaGPN3LomdV0xhwDs9F_rN1iGlzbYI6SrsbqmVBReZ8PKH2cCVclDGvqFXkgRzQi2ob49ISARq_JoeTDWZxxQVwS775uSZv4OiMKIxZsE6-F22YevhN7ypI8pEkBxWBsyS0KKPLez5T2w1-wzdJKzk-a3-S45Y_rI2gpvCdSnZ5J_Dle5ZhDeChzUTqn97ZEqpe1X5th_geOgvN8xYghvJ6LyCYq9fydkmqwDmVRmkjLV1H482TgbHftz88aCMiJz7qwyoilPuN4EF6TnUZT9u_K8854rtEFzvRzyhfTHDWzForuf5HBnAfEqfFhWKdaprTMIqbS11ZcelWO5tEHRn101kucsALUxv2o6WTre_9hGWb3CSW2PTQsh8NlVHzwq5kqqSPdghxEEL0s5W9D3cK_p7yeqjPMFizKVAZo4EEO15vf3PqBnJblFQBwuskI0zgKME_6VwWdkVMsaKudELPZI05z6aNursNCqlGPOkgW5I39WxPhQDn0_FCryyEt_9bn92aZAx5iV542-fpCGfOXmgpll7HVAgrddSYjd8VbCUhUHE74GYZH6tZkdMpPq0nqPospJA8r13vJjBpAovWl7-t0-cYvk9P0mpM1BbN_yrAwiKyZH5GppJliZuQ2pYcIYXj8g6Xoffi43zJAGQI9wp02wrV_CGnmh3ECU70evbrTWr0Zz27kVlTAUJ1hEY8tMM3iYppP9t5KxnCfxem3Hsu7RzJlevAqFYRZ8ZoQxSoYd5GoKQUDBQeZol830orhlHdu5uo9gY0_yxdDKJtkjJ8EZhKFh7t1zmD0oS5HM2XjtiUz80JE3PFbgZpTGo59ql0eGGKZ7g6m-nGWHHi9iqnnRWSv1fiPqzC83Be05YZw6y2K6sojjZiF_ifZiTHVlvbrm57ptybvDrkEDyUSP9572spnueXlj3tLtcRiiI-iPksi1wp9hSeBKwHNpUljnA6APLAS1nLhj8MDl3Vl2Gh71-LXDv5R7xM36T7BnAWbTB7LdcSCj444b10c9OCuHegLqDspr_en6UTlZfoRtBWsfwlROXarst8Ye_bjU9L667CMRNxlk1stkqXSqLmrwnbNQ9SZNxm__cmzVIwGzM0xCOpsa1MTwYDunlD9LoEMc4InB4Hx6Nra6z7fcIG4iE9YE_K3JwLIGU5kryMWqwtouiCiUyvCNA9M7_ek8VRfT3Oq7dJglEGZ_TF19KHNxIRA4r20rs_jbALlwLDc0LetU4WWsrbc_R4j2MJ6XlVhKPaKavxXk2xHTKX7gJzEDRWzxarlbgChI6kmseQqfec8EstZxSonF4sQveAax31DcbPbetGga2pBtcnclMsHuT6fHSsfQdUbJSzbOqqBr2qajeQU35BHFRHVwgyRIW5hyIHrgvxQaejYSk5xciss1c02W0o0S3PLQHyz0gm6zht3GhLiRZdNMhiB3SX61SkPDOfDMinhq-6Dw-dDpyEx_gRSr0YGI7XoYeFLgmrRc3uSdHNcdMCL9P5rO-KiigjrNwDsz9DVCKkMdalVKb1JWbbEYssApApNReIWsI83f7Bxl7kdcrKD8U53ZclPDkzhjWdQu75WxYFC9zKtTNqfyiWYPaA3TCtKMDYiY9CUjp_7eBffTSCMP5d6MFtPzkh92_pieB-AoJheJ_pS_kLkd_76Zw06iVIrPjQeJ1-YeeFfngM97inq65jEG7P7YPZToY9HhxtwsWN0DZ20U8zR5A9VeJ1gewftSyvRcBABs2KyPwySndrsX9QYDMoRB2AXuHwb9zreg9UaY5vCSIE2wicHc5kGHHMsOHS3E34BGvIYlIvRXC5b22M-Dd7EQ3ngm6mXQGA.OAgdMmG8rx05LDcHo5mWQA","MessageType":"request"}
[36mEncryptionLibrary    |[0m JsonWebEncryption: {"SceneModeID": "00000001-5cdd-280b-8003-000200000002", "NodeID": "00000014-6100-e653-8002-000000001962_0001", "Version": "1.0", "Inputs": [{"Type": "Video", "VideoEndPoint": {"VideoURI": "0"}}], "Outputs": [{"Type": "Video", "PortID": "00000014-6100-e653-8002-000000001962_0001_0001", "DestinationEndPointList": [{"AppEndPoint": {"APIVersion": "1.0", "EndPointID": "00000001-5cdd-280b-8003-00020000ffff", "AccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJhcGk6Ly85ZmExNGI5NC0wMmFkLTRhNDMtOTU1MC04MzA1NDM0OGRkZGMiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xMzEwMzFkNy1iOThjLTQzNWQtOGM1YS1mYTc0MDk1N2Q2MmIvIiwiaWF0IjoxNjQ3Mzk1NTczLCJuYmYiOjE2NDczOTU1NzMsImV4cCI6MTY0NzQ3ODY3MywiYWlvIjoiRTJaZ1lHajc0NTkwMG4yVmJMdmZvWlNXdis4akFRPT0iLCJhcHBpZCI6ImEzY2I0Mzc2LThkYWUtNDc2NC1iMGNhLWRjNzc3ZmNiODE1MCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzEzMTAzMWQ3LWI5OGMtNDM1ZC04YzVhLWZhNzQwOTU3ZDYyYi8iLCJvaWQiOiIzZmU4OTc3Zi1hZjg0LTQ4MTktYjRjZi05OTRkMTk2ODc4MDEiLCJyaCI6IjAuQVZnQTF6RVFFNHk1WFVPTVd2cDBDVmZXSzVSTG9aLXRBa05LbFZDREJVTkkzZHhZQUFBLiIsInJvbGVzIjpbIkFwcFJvbGUiXSwic3ViIjoiM2ZlODk3N2YtYWY4NC00ODE5LWI0Y2YtOTk0ZDE5Njg3ODAxIiwidGlkIjoiMTMxMDMxZDctYjk4Yy00MzVkLThjNWEtZmE3NDA5NTdkNjJiIiwidXRpIjoiOG1GR1JGbkUwa1dXalRNWmRlb0ZBQSIsInZlciI6IjEuMCJ9.rvxsJ6eJzdgngxEOOQL-vZutU1S9gyhogncxrQIUDmHWR8wuuiyX_cf0xio5-2bXGFB6MgO0zinZ__THck_rnCp3qSLvJ8ZIn9tHPvg9OE8kcfVw0J8xBVfR70OlYeo49sddOEz_LIrkWgCVucw3Otrf1R_f9b6ehElIXGrplm-yyLI3fGvnVEW3chK-CYNlLO_dyXgMc0Ess2ni9R0BrBKR4ot5SwhjRLqNZNP1uCVF88MtJp-OvasI0c5Mm3rQyfWSrT7Ut7ZgoLnPDQVx136Y_6Xe0W2Dxo4NQtjEHYnP4uuZ0gFVn-niMfPOG7jIfX5z0rsaN7xTeXUl40lJkw"}, "NetEndPoint": {"APIVersion": "1.0", "EndPointID": "00000001-5cdd-280b-8003-00020000ffff", "Scheme": [{"Protocol": "WebAPI", "Authority": "ingress-prod.scenera.live", "AccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJhcGk6Ly85ZmExNGI5NC0wMmFkLTRhNDMtOTU1MC04MzA1NDM0OGRkZGMiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xMzEwMzFkNy1iOThjLTQzNWQtOGM1YS1mYTc0MDk1N2Q2MmIvIiwiaWF0IjoxNjQ3Mzk1NTczLCJuYmYiOjE2NDczOTU1NzMsImV4cCI6MTY0NzQ3ODY3MywiYWlvIjoiRTJaZ1lHajc0NTkwMG4yVmJMdmZvWlNXdis4akFRPT0iLCJhcHBpZCI6ImEzY2I0Mzc2LThkYWUtNDc2NC1iMGNhLWRjNzc3ZmNiODE1MCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzEzMTAzMWQ3LWI5OGMtNDM1ZC04YzVhLWZhNzQwOTU3ZDYyYi8iLCJvaWQiOiIzZmU4OTc3Zi1hZjg0LTQ4MTktYjRjZi05OTRkMTk2ODc4MDEiLCJyaCI6IjAuQVZnQTF6RVFFNHk1WFVPTVd2cDBDVmZXSzVSTG9aLXRBa05LbFZDREJVTkkzZHhZQUFBLiIsInJvbGVzIjpbIkFwcFJvbGUiXSwic3ViIjoiM2ZlODk3N2YtYWY4NC00ODE5LWI0Y2YtOTk0ZDE5Njg3ODAxIiwidGlkIjoiMTMxMDMxZDctYjk4Yy00MzVkLThjNWEtZmE3NDA5NTdkNjJiIiwidXRpIjoiOG1GR1JGbkUwa1dXalRNWmRlb0ZBQSIsInZlciI6IjEuMCJ9.rvxsJ6eJzdgngxEOOQL-vZutU1S9gyhogncxrQIUDmHWR8wuuiyX_cf0xio5-2bXGFB6MgO0zinZ__THck_rnCp3qSLvJ8ZIn9tHPvg9OE8kcfVw0J8xBVfR70OlYeo49sddOEz_LIrkWgCVucw3Otrf1R_f9b6ehElIXGrplm-yyLI3fGvnVEW3chK-CYNlLO_dyXgMc0Ess2ni9R0BrBKR4ot5SwhjRLqNZNP1uCVF88MtJp-OvasI0c5Mm3rQyfWSrT7Ut7ZgoLnPDQVx136Y_6Xe0W2Dxo4NQtjEHYnP4uuZ0gFVn-niMfPOG7jIfX5z0rsaN7xTeXUl40lJkw", "Role": "Client"}]}}]}, {"Type": "Image", "PortID": "00000014-6100-e653-8002-000000001962_0001_0001", "DestinationEndPointList": [{"AppEndPoint": {"APIVersion": "1.0", "EndPointID": "00000001-5cdd-280b-8003-00020000ffff", "AccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJhcGk6Ly85ZmExNGI5NC0wMmFkLTRhNDMtOTU1MC04MzA1NDM0OGRkZGMiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xMzEwMzFkNy1iOThjLTQzNWQtOGM1YS1mYTc0MDk1N2Q2MmIvIiwiaWF0IjoxNjQ3Mzk1NTczLCJuYmYiOjE2NDczOTU1NzMsImV4cCI6MTY0NzQ3ODY3MywiYWlvIjoiRTJaZ1lHajc0NTkwMG4yVmJMdmZvWlNXdis4akFRPT0iLCJhcHBpZCI6ImEzY2I0Mzc2LThkYWUtNDc2NC1iMGNhLWRjNzc3ZmNiODE1MCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzEzMTAzMWQ3LWI5OGMtNDM1ZC04YzVhLWZhNzQwOTU3ZDYyYi8iLCJvaWQiOiIzZmU4OTc3Zi1hZjg0LTQ4MTktYjRjZi05OTRkMTk2ODc4MDEiLCJyaCI6IjAuQVZnQTF6RVFFNHk1WFVPTVd2cDBDVmZXSzVSTG9aLXRBa05LbFZDREJVTkkzZHhZQUFBLiIsInJvbGVzIjpbIkFwcFJvbGUiXSwic3ViIjoiM2ZlODk3N2YtYWY4NC00ODE5LWI0Y2YtOTk0ZDE5Njg3ODAxIiwidGlkIjoiMTMxMDMxZDctYjk4Yy00MzVkLThjNWEtZmE3NDA5NTdkNjJiIiwidXRpIjoiOG1GR1JGbkUwa1dXalRNWmRlb0ZBQSIsInZlciI6IjEuMCJ9.rvxsJ6eJzdgngxEOOQL-vZutU1S9gyhogncxrQIUDmHWR8wuuiyX_cf0xio5-2bXGFB6MgO0zinZ__THck_rnCp3qSLvJ8ZIn9tHPvg9OE8kcfVw0J8xBVfR70OlYeo49sddOEz_LIrkWgCVucw3Otrf1R_f9b6ehElIXGrplm-yyLI3fGvnVEW3chK-CYNlLO_dyXgMc0Ess2ni9R0BrBKR4ot5SwhjRLqNZNP1uCVF88MtJp-OvasI0c5Mm3rQyfWSrT7Ut7ZgoLnPDQVx136Y_6Xe0W2Dxo4NQtjEHYnP4uuZ0gFVn-niMfPOG7jIfX5z0rsaN7xTeXUl40lJkw"}, "NetEndPoint": {"APIVersion": "1.0", "EndPointID": "00000001-5cdd-280b-8003-00020000ffff", "Scheme": [{"Protocol": "WebAPI", "Authority": "ingress-prod.scenera.live", "AccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJhcGk6Ly85ZmExNGI5NC0wMmFkLTRhNDMtOTU1MC04MzA1NDM0OGRkZGMiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xMzEwMzFkNy1iOThjLTQzNWQtOGM1YS1mYTc0MDk1N2Q2MmIvIiwiaWF0IjoxNjQ3Mzk1NTczLCJuYmYiOjE2NDczOTU1NzMsImV4cCI6MTY0NzQ3ODY3MywiYWlvIjoiRTJaZ1lHajc0NTkwMG4yVmJMdmZvWlNXdis4akFRPT0iLCJhcHBpZCI6ImEzY2I0Mzc2LThkYWUtNDc2NC1iMGNhLWRjNzc3ZmNiODE1MCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzEzMTAzMWQ3LWI5OGMtNDM1ZC04YzVhLWZhNzQwOTU3ZDYyYi8iLCJvaWQiOiIzZmU4OTc3Zi1hZjg0LTQ4MTktYjRjZi05OTRkMTk2ODc4MDEiLCJyaCI6IjAuQVZnQTF6RVFFNHk1WFVPTVd2cDBDVmZXSzVSTG9aLXRBa05LbFZDREJVTkkzZHhZQUFBLiIsInJvbGVzIjpbIkFwcFJvbGUiXSwic3ViIjoiM2ZlODk3N2YtYWY4NC00ODE5LWI0Y2YtOTk0ZDE5Njg3ODAxIiwidGlkIjoiMTMxMDMxZDctYjk4Yy00MzVkLThjNWEtZmE3NDA5NTdkNjJiIiwidXRpIjoiOG1GR1JGbkUwa1dXalRNWmRlb0ZBQSIsInZlciI6IjEuMCJ9.rvxsJ6eJzdgngxEOOQL-vZutU1S9gyhogncxrQIUDmHWR8wuuiyX_cf0xio5-2bXGFB6MgO0zinZ__THck_rnCp3qSLvJ8ZIn9tHPvg9OE8kcfVw0J8xBVfR70OlYeo49sddOEz_LIrkWgCVucw3Otrf1R_f9b6ehElIXGrplm-yyLI3fGvnVEW3chK-CYNlLO_dyXgMc0Ess2ni9R0BrBKR4ot5SwhjRLqNZNP1uCVF88MtJp-OvasI0c5Mm3rQyfWSrT7Ut7ZgoLnPDQVx136Y_6Xe0W2Dxo4NQtjEHYnP4uuZ0gFVn-niMfPOG7jIfX5z0rsaN7xTeXUl40lJkw", "Role": "Client"}]}}]}], "Mode": {"SceneMode": "Label", "SceneModeConfig": [{"CustomAnalysisStage": "People Detection", "AnalysisRegion": [], "AnalysisResult": {"Result": "UnDetected", "AdditionalInfo": [{"DetectedRegion": []}]}, "Resolution": "1920x1080", "Threshold": 0.7, "Scheduling": [{"SchedulingType": "ScheduledWeekDay", "StartTime": "00:00", "EndTime": "23:59"}]}], "AnalysisResult": {"Result": "UnDetected", "AdditionalInfo": [{"DetectedRegion": [{"XCoord": 145, "YCoord": 160}, {"XCoord": 245, "YCoord": 160}, {"XCoord": 245, "YCoord": 260}, {"XCoord": 145, "YCoord": 260}]}]}, "Resolution": "1920x1080", "Threshold": 0.7, "Scheduling": [{"SchedulingType": "ScheduledWeekDay", "StartTime": "20:00", "EndTime": "08:00"}, {"SchedulingType": "ScheduledWeekEnd", "StartTime": "00:00", "EndTime": "23:59"}, {"SchedulingType": "ScheduledHoliday", "StartTime": "00:00", "EndTime": "23:59"}], "SceneMarkOutputList": [{"AppEndPoint": {"APIVersion": "1.0", "EndPointID": "00000001-5cdd-280b-8003-00020000ffff", "AccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJhcGk6Ly85ZmExNGI5NC0wMmFkLTRhNDMtOTU1MC04MzA1NDM0OGRkZGMiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xMzEwMzFkNy1iOThjLTQzNWQtOGM1YS1mYTc0MDk1N2Q2MmIvIiwiaWF0IjoxNjQ3Mzk1NTczLCJuYmYiOjE2NDczOTU1NzMsImV4cCI6MTY0NzQ3ODY3MywiYWlvIjoiRTJaZ1lHajc0NTkwMG4yVmJMdmZvWlNXdis4akFRPT0iLCJhcHBpZCI6ImEzY2I0Mzc2LThkYWUtNDc2NC1iMGNhLWRjNzc3ZmNiODE1MCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzEzMTAzMWQ3LWI5OGMtNDM1ZC04YzVhLWZhNzQwOTU3ZDYyYi8iLCJvaWQiOiIzZmU4OTc3Zi1hZjg0LTQ4MTktYjRjZi05OTRkMTk2ODc4MDEiLCJyaCI6IjAuQVZnQTF6RVFFNHk1WFVPTVd2cDBDVmZXSzVSTG9aLXRBa05LbFZDREJVTkkzZHhZQUFBLiIsInJvbGVzIjpbIkFwcFJvbGUiXSwic3ViIjoiM2ZlODk3N2YtYWY4NC00ODE5LWI0Y2YtOTk0ZDE5Njg3ODAxIiwidGlkIjoiMTMxMDMxZDctYjk4Yy00MzVkLThjNWEtZmE3NDA5NTdkNjJiIiwidXRpIjoiOG1GR1JGbkUwa1dXalRNWmRlb0ZBQSIsInZlciI6IjEuMCJ9.rvxsJ6eJzdgngxEOOQL-vZutU1S9gyhogncxrQIUDmHWR8wuuiyX_cf0xio5-2bXGFB6MgO0zinZ__THck_rnCp3qSLvJ8ZIn9tHPvg9OE8kcfVw0J8xBVfR70OlYeo49sddOEz_LIrkWgCVucw3Otrf1R_f9b6ehElIXGrplm-yyLI3fGvnVEW3chK-CYNlLO_dyXgMc0Ess2ni9R0BrBKR4ot5SwhjRLqNZNP1uCVF88MtJp-OvasI0c5Mm3rQyfWSrT7Ut7ZgoLnPDQVx136Y_6Xe0W2Dxo4NQtjEHYnP4uuZ0gFVn-niMfPOG7jIfX5z0rsaN7xTeXUl40lJkw"}, "NetEndPoint": {"APIVersion": "1.0", "EndPointID": "00000001-5cdd-280b-8003-00020000ffff", "Scheme": [{"Protocol": "WebAPI", "Authority": "ingress-prod.scenera.live", "AccessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyIsImtpZCI6ImpTMVhvMU9XRGpfNTJ2YndHTmd2UU8yVnpNYyJ9.eyJhdWQiOiJhcGk6Ly85ZmExNGI5NC0wMmFkLTRhNDMtOTU1MC04MzA1NDM0OGRkZGMiLCJpc3MiOiJodHRwczovL3N0cy53aW5kb3dzLm5ldC8xMzEwMzFkNy1iOThjLTQzNWQtOGM1YS1mYTc0MDk1N2Q2MmIvIiwiaWF0IjoxNjQ3Mzk1NTczLCJuYmYiOjE2NDczOTU1NzMsImV4cCI6MTY0NzQ3ODY3MywiYWlvIjoiRTJaZ1lHajc0NTkwMG4yVmJMdmZvWlNXdis4akFRPT0iLCJhcHBpZCI6ImEzY2I0Mzc2LThkYWUtNDc2NC1iMGNhLWRjNzc3ZmNiODE1MCIsImFwcGlkYWNyIjoiMSIsImlkcCI6Imh0dHBzOi8vc3RzLndpbmRvd3MubmV0LzEzMTAzMWQ3LWI5OGMtNDM1ZC04YzVhLWZhNzQwOTU3ZDYyYi8iLCJvaWQiOiIzZmU4OTc3Zi1hZjg0LTQ4MTktYjRjZi05OTRkMTk2ODc4MDEiLCJyaCI6IjAuQVZnQTF6RVFFNHk1WFVPTVd2cDBDVmZXSzVSTG9aLXRBa05LbFZDREJVTkkzZHhZQUFBLiIsInJvbGVzIjpbIkFwcFJvbGUiXSwic3ViIjoiM2ZlODk3N2YtYWY4NC00ODE5LWI0Y2YtOTk0ZDE5Njg3ODAxIiwidGlkIjoiMTMxMDMxZDctYjk4Yy00MzVkLThjNWEtZmE3NDA5NTdkNjJiIiwidXRpIjoiOG1GR1JGbkUwa1dXalRNWmRlb0ZBQSIsInZlciI6IjEuMCJ9.rvxsJ6eJzdgngxEOOQL-vZutU1S9gyhogncxrQIUDmHWR8wuuiyX_cf0xio5-2bXGFB6MgO0zinZ__THck_rnCp3qSLvJ8ZIn9tHPvg9OE8kcfVw0J8xBVfR70OlYeo49sddOEz_LIrkWgCVucw3Otrf1R_f9b6ehElIXGrplm-yyLI3fGvnVEW3chK-CYNlLO_dyXgMc0Ess2ni9R0BrBKR4ot5SwhjRLqNZNP1uCVF88MtJp-OvasI0c5Mm3rQyfWSrT7Ut7ZgoLnPDQVx136Y_6Xe0W2Dxo4NQtjEHYnP4uuZ0gFVn-niMfPOG7jIfX5z0rsaN7xTeXUl40lJkw", "Role": "Client"}]}}]}}
[32mSceneraBridge        |[0m 01:58:05 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:06] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:58:15 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:16] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:58:25 : Wait for Video URL from SceneMode
[32mSceneraBridge        |[0m 0
[33mInferencingEngine    |[0m 2022-03-16 01:58:26,088 app:42 load [INFO]: openvino available devices: 
[33mInferencingEngine    |[0m 2022-03-16 01:58:26,104 app:43 load [INFO]: ['MYRIAD']
[33mInferencingEngine    |[0m 2022-03-16 01:58:26,105 app:47 load [INFO]: use openvino device MYRIAD
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,685 app:71 detect [INFO]: time: 0.0710456371307373
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,685 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,686 app:97 detect [INFO]: 	person, 0.6100000143051147, [257, 97, 378, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,687 app:97 detect [INFO]: 	person, 0.07999999821186066, [267, 97, 349, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,688 app:97 detect [INFO]: 	person, 0.05999999865889549, [170, 100, 316, 304]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,689 app:97 detect [INFO]: 	person, 0.029999999329447746, [301, 102, 406, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,690 app:97 detect [INFO]: 	person, 0.029999999329447746, [257, 157, 332, 370]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,690 app:97 detect [INFO]: 	person, 0.029999999329447746, [224, 110, 316, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,691 app:97 detect [INFO]: 	person, 0.029999999329447746, [146, 137, 236, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,692 app:97 detect [INFO]: 	person, 0.029999999329447746, [196, 134, 249, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,693 app:97 detect [INFO]: 	person, 0.029999999329447746, [117, 145, 187, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,693 app:97 detect [INFO]: 	person, 0.019999999552965164, [181, 120, 267, 264]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,694 app:97 detect [INFO]: 	person, 0.019999999552965164, [273, 93, 321, 169]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,695 app:97 detect [INFO]: 	person, 0.019999999552965164, [223, 155, 302, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,696 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 147, 205, 357]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,697 app:97 detect [INFO]: 	person, 0.019999999552965164, [353, 99, 418, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,697 app:97 detect [INFO]: 	person, 0.019999999552965164, [94, 144, 159, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,698 app:97 detect [INFO]: 	person, 0.019999999552965164, [332, 101, 403, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,699 app:97 detect [INFO]: 	person, 0.019999999552965164, [226, 84, 295, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:58:31,700 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 119, 216]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "GET /GetVideoURL HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "POST /UpdateDetectedObjects/person/0.61/257/378/97/310/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "GET /CreateVideoSceneDataID/10/1920/1080 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:31] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,042 app:71 detect [INFO]: time: 0.06641030311584473
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,043 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,043 app:97 detect [INFO]: 	person, 0.6100000143051147, [258, 98, 379, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,044 app:97 detect [INFO]: 	person, 0.10000000149011612, [267, 96, 351, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,045 app:97 detect [INFO]: 	person, 0.05000000074505806, [207, 110, 333, 333]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,046 app:97 detect [INFO]: 	person, 0.029999999329447746, [313, 141, 412, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,047 app:97 detect [INFO]: 	person, 0.029999999329447746, [320, 97, 406, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,048 app:97 detect [INFO]: 	person, 0.029999999329447746, [180, 121, 272, 277]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,049 app:97 detect [INFO]: 	person, 0.029999999329447746, [258, 159, 332, 371]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,050 app:97 detect [INFO]: 	person, 0.029999999329447746, [225, 109, 318, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,050 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 134, 249, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,051 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 138, 235, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,052 app:97 detect [INFO]: 	person, 0.019999999552965164, [273, 94, 322, 170]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,053 app:97 detect [INFO]: 	person, 0.019999999552965164, [341, 103, 399, 202]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,054 app:97 detect [INFO]: 	person, 0.019999999552965164, [350, 68, 424, 276]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,055 app:97 detect [INFO]: 	person, 0.019999999552965164, [364, 106, 416, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,056 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 155, 301, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,057 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 144, 186, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,057 app:97 detect [INFO]: 	person, 0.019999999552965164, [226, 85, 295, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,059 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 119, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:32,059 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 154, 176, 234]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:32] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:32] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:32] "POST /UpdateDetectedObjects/person/0.61/258/379/98/308/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:32] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:32] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:32] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,052 app:71 detect [INFO]: time: 0.06617951393127441
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,052 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,054 app:97 detect [INFO]: 	person, 0.3400000035762787, [259, 93, 355, 244]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,055 app:97 detect [INFO]: 	person, 0.09000000357627869, [213, 100, 345, 304]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,056 app:97 detect [INFO]: 	person, 0.07999999821186066, [223, 135, 298, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,057 app:97 detect [INFO]: 	person, 0.05999999865889549, [289, 92, 403, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,058 app:97 detect [INFO]: 	person, 0.05999999865889549, [267, 101, 332, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,059 app:97 detect [INFO]: 	person, 0.03999999910593033, [330, 98, 410, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,060 app:97 detect [INFO]: 	person, 0.03999999910593033, [172, 110, 292, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,061 app:97 detect [INFO]: 	person, 0.029999999329447746, [223, 155, 296, 298]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,062 app:97 detect [INFO]: 	person, 0.029999999329447746, [293, 115, 351, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,063 app:97 detect [INFO]: 	person, 0.029999999329447746, [188, 133, 261, 253]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,064 app:97 detect [INFO]: 	person, 0.029999999329447746, [341, 112, 392, 193]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,064 app:97 detect [INFO]: 	person, 0.029999999329447746, [359, 98, 416, 201]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,065 app:97 detect [INFO]: 	person, 0.029999999329447746, [182, 165, 267, 340]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,066 app:97 detect [INFO]: 	person, 0.029999999329447746, [116, 145, 186, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,067 app:97 detect [INFO]: 	person, 0.029999999329447746, [227, 96, 296, 197]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,068 app:97 detect [INFO]: 	person, 0.029999999329447746, [200, 137, 245, 209]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,069 app:97 detect [INFO]: 	person, 0.029999999329447746, [146, 131, 236, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,071 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 333, 371]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,072 app:97 detect [INFO]: 	person, 0.019999999552965164, [267, 134, 327, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,072 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 119, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,073 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 147, 204, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,074 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 167, 310, 381]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,075 app:97 detect [INFO]: 	person, 0.019999999552965164, [331, 158, 407, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,076 app:97 detect [INFO]: 	person, 0.019999999552965164, [296, 163, 354, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,077 app:97 detect [INFO]: 	person, 0.019999999552965164, [160, 134, 224, 230]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,078 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 36, 320, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,079 app:97 detect [INFO]: 	person, 0.019999999552965164, [237, 193, 281, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,080 app:97 detect [INFO]: 	person, 0.019999999552965164, [267, 110, 307, 172]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,081 app:97 detect [INFO]: 	person, 0.019999999552965164, [342, 144, 388, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,083 app:97 detect [INFO]: 	person, 0.019999999552965164, [202, 167, 247, 265]
[33mInferencingEngine    |[0m 2022-03-16 01:58:33,084 app:97 detect [INFO]: 	person, 0.019999999552965164, [157, 188, 223, 334]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:33] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:33] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:33] "POST /UpdateDetectedObjects/person/0.34/259/355/93/244/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:33] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:33] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:33] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,107 app:71 detect [INFO]: time: 0.06941413879394531
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,108 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,109 app:97 detect [INFO]: 	person, 0.5699999928474426, [260, 94, 362, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,110 app:97 detect [INFO]: 	person, 0.12999999523162842, [266, 98, 347, 207]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,112 app:97 detect [INFO]: 	person, 0.07000000029802322, [222, 117, 328, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,114 app:97 detect [INFO]: 	person, 0.05000000074505806, [318, 107, 408, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,115 app:97 detect [INFO]: 	person, 0.03999999910593033, [222, 145, 287, 237]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,116 app:97 detect [INFO]: 	person, 0.029999999329447746, [168, 124, 287, 317]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,118 app:97 detect [INFO]: 	person, 0.029999999329447746, [336, 118, 395, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,119 app:97 detect [INFO]: 	person, 0.029999999329447746, [186, 136, 256, 254]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,120 app:97 detect [INFO]: 	person, 0.029999999329447746, [222, 85, 310, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,121 app:97 detect [INFO]: 	person, 0.029999999329447746, [147, 141, 234, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,122 app:97 detect [INFO]: 	person, 0.029999999329447746, [201, 140, 245, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,123 app:97 detect [INFO]: 	person, 0.029999999329447746, [119, 146, 186, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,125 app:97 detect [INFO]: 	person, 0.019999999552965164, [353, 84, 417, 255]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,126 app:97 detect [INFO]: 	person, 0.019999999552965164, [270, 96, 323, 166]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,127 app:97 detect [INFO]: 	person, 0.019999999552965164, [231, 176, 289, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,128 app:97 detect [INFO]: 	person, 0.019999999552965164, [272, 134, 319, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,129 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 155, 333, 371]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,130 app:97 detect [INFO]: 	person, 0.019999999552965164, [233, 125, 284, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,131 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 169, 310, 380]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,132 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 204, 359]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,134 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 177, 252, 301]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,135 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 146, 177, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,136 app:97 detect [INFO]: 	person, 0.019999999552965164, [371, 105, 415, 187]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,137 app:97 detect [INFO]: 	person, 0.019999999552965164, [304, 138, 349, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,138 app:97 detect [INFO]: 	person, 0.019999999552965164, [159, 135, 225, 230]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,138 app:97 detect [INFO]: 	person, 0.019999999552965164, [291, 158, 360, 328]
[33mInferencingEngine    |[0m 2022-03-16 01:58:34,139 app:97 detect [INFO]: 	person, 0.019999999552965164, [128, 177, 180, 295]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:34] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:34] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:34] "POST /UpdateDetectedObjects/person/0.57/260/362/94/296/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:34] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:34] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:34] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,147 app:71 detect [INFO]: time: 0.06874370574951172
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,147 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,148 app:97 detect [INFO]: 	person, 0.3400000035762787, [263, 98, 360, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,150 app:97 detect [INFO]: 	person, 0.07999999821186066, [222, 119, 324, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,151 app:97 detect [INFO]: 	person, 0.05999999865889549, [270, 101, 332, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,152 app:97 detect [INFO]: 	person, 0.05999999865889549, [290, 86, 404, 301]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,153 app:97 detect [INFO]: 	person, 0.05999999865889549, [223, 140, 290, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,154 app:97 detect [INFO]: 	person, 0.03999999910593033, [329, 94, 410, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,156 app:97 detect [INFO]: 	person, 0.03999999910593033, [171, 117, 285, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,157 app:97 detect [INFO]: 	person, 0.029999999329447746, [184, 135, 255, 254]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,158 app:97 detect [INFO]: 	person, 0.029999999329447746, [199, 139, 245, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,159 app:97 detect [INFO]: 	person, 0.029999999329447746, [292, 114, 351, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,160 app:97 detect [INFO]: 	person, 0.029999999329447746, [268, 111, 308, 173]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,161 app:97 detect [INFO]: 	person, 0.029999999329447746, [231, 174, 288, 298]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,162 app:97 detect [INFO]: 	person, 0.029999999329447746, [228, 95, 296, 198]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,163 app:97 detect [INFO]: 	person, 0.029999999329447746, [153, 137, 236, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,164 app:97 detect [INFO]: 	person, 0.029999999329447746, [359, 96, 416, 199]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,166 app:97 detect [INFO]: 	person, 0.029999999329447746, [274, 134, 323, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,167 app:97 detect [INFO]: 	person, 0.029999999329447746, [269, 139, 304, 202]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,168 app:97 detect [INFO]: 	person, 0.019999999552965164, [252, 129, 342, 376]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,168 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 145, 190, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,170 app:97 detect [INFO]: 	person, 0.019999999552965164, [296, 161, 354, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,171 app:97 detect [INFO]: 	person, 0.019999999552965164, [342, 112, 391, 191]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,172 app:97 detect [INFO]: 	person, 0.019999999552965164, [269, 151, 322, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,172 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 173, 274, 398]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,173 app:97 detect [INFO]: 	person, 0.019999999552965164, [108, 121, 218, 297]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,174 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 172, 251, 300]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,175 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 153, 176, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,176 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 166, 309, 384]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,177 app:97 detect [INFO]: 	person, 0.019999999552965164, [330, 157, 406, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,178 app:97 detect [INFO]: 	person, 0.019999999552965164, [358, 115, 417, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,179 app:97 detect [INFO]: 	person, 0.019999999552965164, [299, 95, 350, 164]
[33mInferencingEngine    |[0m 2022-03-16 01:58:35,180 app:97 detect [INFO]: 	person, 0.019999999552965164, [237, 96, 281, 167]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:35] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:35] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:35] "POST /UpdateDetectedObjects/person/0.34/263/360/98/281/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:35] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:35] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:35] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,185 app:71 detect [INFO]: time: 0.06884765625
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,185 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,186 app:97 detect [INFO]: 	person, 0.3400000035762787, [258, 94, 351, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,187 app:97 detect [INFO]: 	person, 0.1599999964237213, [224, 140, 293, 231]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,187 app:97 detect [INFO]: 	person, 0.07999999821186066, [213, 107, 330, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,188 app:97 detect [INFO]: 	person, 0.05999999865889549, [266, 102, 332, 193]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,188 app:97 detect [INFO]: 	person, 0.05000000074505806, [296, 94, 403, 300]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,189 app:97 detect [INFO]: 	person, 0.03999999910593033, [169, 126, 288, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,190 app:97 detect [INFO]: 	person, 0.03999999910593033, [190, 136, 265, 255]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,190 app:97 detect [INFO]: 	person, 0.03999999910593033, [336, 121, 406, 265]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,191 app:97 detect [INFO]: 	person, 0.029999999329447746, [229, 166, 287, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,191 app:97 detect [INFO]: 	person, 0.029999999329447746, [293, 118, 351, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,192 app:97 detect [INFO]: 	person, 0.029999999329447746, [228, 102, 294, 200]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,192 app:97 detect [INFO]: 	person, 0.029999999329447746, [201, 139, 248, 212]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,193 app:97 detect [INFO]: 	person, 0.029999999329447746, [115, 145, 187, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,194 app:97 detect [INFO]: 	person, 0.029999999329447746, [146, 133, 236, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,194 app:97 detect [INFO]: 	person, 0.029999999329447746, [281, 128, 360, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,195 app:97 detect [INFO]: 	person, 0.029999999329447746, [340, 107, 399, 202]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,195 app:97 detect [INFO]: 	person, 0.019999999552965164, [267, 131, 326, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,196 app:97 detect [INFO]: 	person, 0.019999999552965164, [190, 187, 259, 333]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,196 app:97 detect [INFO]: 	person, 0.019999999552965164, [160, 135, 223, 230]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,197 app:97 detect [INFO]: 	person, 0.019999999552965164, [264, 131, 304, 190]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,197 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 147, 204, 350]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,198 app:97 detect [INFO]: 	person, 0.019999999552965164, [202, 166, 248, 265]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,198 app:97 detect [INFO]: 	person, 0.019999999552965164, [362, 109, 415, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,199 app:97 detect [INFO]: 	person, 0.019999999552965164, [157, 187, 223, 331]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,199 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 154, 333, 367]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,200 app:97 detect [INFO]: 	person, 0.019999999552965164, [237, 100, 281, 168]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,201 app:97 detect [INFO]: 	person, 0.019999999552965164, [234, 142, 277, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:58:36,201 app:97 detect [INFO]: 	person, 0.019999999552965164, [306, 192, 348, 297]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:36] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:36] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:36] "POST /UpdateDetectedObjects/person/0.34/258/351/94/260/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:36] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:36] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:36] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,225 app:71 detect [INFO]: time: 0.06898760795593262
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,225 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,227 app:97 detect [INFO]: 	person, 0.6899999976158142, [259, 90, 374, 318]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,228 app:97 detect [INFO]: 	person, 0.05999999865889549, [288, 103, 359, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,229 app:97 detect [INFO]: 	person, 0.05000000074505806, [172, 105, 308, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,230 app:97 detect [INFO]: 	person, 0.03999999910593033, [354, 100, 415, 298]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,232 app:97 detect [INFO]: 	person, 0.03999999910593033, [304, 98, 400, 286]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,233 app:97 detect [INFO]: 	person, 0.029999999329447746, [198, 140, 250, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,234 app:97 detect [INFO]: 	person, 0.029999999329447746, [205, 127, 244, 197]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,236 app:97 detect [INFO]: 	person, 0.029999999329447746, [118, 145, 188, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,237 app:97 detect [INFO]: 	person, 0.029999999329447746, [220, 103, 321, 244]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,238 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 160, 334, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,239 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 105, 324, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,241 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 121, 265, 264]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,242 app:97 detect [INFO]: 	person, 0.019999999552965164, [146, 140, 234, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,243 app:97 detect [INFO]: 	person, 0.019999999552965164, [332, 121, 382, 230]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,244 app:97 detect [INFO]: 	person, 0.019999999552965164, [180, 164, 269, 340]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,245 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 148, 205, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,247 app:97 detect [INFO]: 	person, 0.019999999552965164, [131, 155, 176, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,248 app:97 detect [INFO]: 	person, 0.019999999552965164, [377, 132, 415, 250]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,249 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 91, 350, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,250 app:97 detect [INFO]: 	person, 0.019999999552965164, [226, 80, 292, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,252 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 144, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,253 app:97 detect [INFO]: 	person, 0.019999999552965164, [205, 86, 244, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:58:37,254 app:97 detect [INFO]: 	person, 0.019999999552965164, [128, 179, 181, 296]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:37] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:37] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:37] "POST /UpdateDetectedObjects/person/0.69/259/374/90/318/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:37] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:37] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:37] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,283 app:71 detect [INFO]: time: 0.0686025619506836
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,283 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,284 app:97 detect [INFO]: 	person, 0.6000000238418579, [264, 92, 371, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,285 app:97 detect [INFO]: 	person, 0.07999999821186066, [285, 96, 358, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,286 app:97 detect [INFO]: 	person, 0.07000000029802322, [306, 113, 402, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,287 app:97 detect [INFO]: 	person, 0.05000000074505806, [171, 97, 317, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,287 app:97 detect [INFO]: 	person, 0.03999999910593033, [353, 102, 415, 297]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,288 app:97 detect [INFO]: 	person, 0.03999999910593033, [332, 136, 383, 252]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,289 app:97 detect [INFO]: 	person, 0.029999999329447746, [275, 105, 326, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,290 app:97 detect [INFO]: 	person, 0.019999999552965164, [115, 144, 186, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,290 app:97 detect [INFO]: 	person, 0.019999999552965164, [341, 171, 371, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,291 app:97 detect [INFO]: 	person, 0.019999999552965164, [304, 91, 350, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,292 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 147, 203, 354]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,293 app:97 detect [INFO]: 	person, 0.019999999552965164, [145, 142, 233, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,294 app:97 detect [INFO]: 	person, 0.019999999552965164, [326, 87, 407, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,295 app:97 detect [INFO]: 	person, 0.019999999552965164, [181, 170, 269, 344]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,296 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 102, 299, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,297 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 123, 243, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,297 app:97 detect [INFO]: 	person, 0.019999999552965164, [188, 137, 255, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,298 app:97 detect [INFO]: 	person, 0.019999999552965164, [375, 132, 416, 249]
[33mInferencingEngine    |[0m 2022-03-16 01:58:38,299 app:97 detect [INFO]: 	person, 0.019999999552965164, [338, 175, 400, 305]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:38] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:38] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:38] "POST /UpdateDetectedObjects/person/0.6/264/371/92/312/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:38] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:38] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:38] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,312 app:71 detect [INFO]: time: 0.06611418724060059
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,312 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,313 app:97 detect [INFO]: 	person, 0.7900000214576721, [263, 96, 376, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,314 app:97 detect [INFO]: 	person, 0.05000000074505806, [284, 106, 357, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,315 app:97 detect [INFO]: 	person, 0.03999999910593033, [217, 118, 339, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,316 app:97 detect [INFO]: 	person, 0.029999999329447746, [176, 128, 272, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,317 app:97 detect [INFO]: 	person, 0.029999999329447746, [116, 146, 185, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,318 app:97 detect [INFO]: 	person, 0.029999999329447746, [310, 124, 407, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,319 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 92, 333, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,319 app:97 detect [INFO]: 	person, 0.019999999552965164, [145, 142, 233, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,320 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 138, 247, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,320 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 147, 203, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,321 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 155, 332, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,322 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 124, 243, 196]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,322 app:97 detect [INFO]: 	person, 0.019999999552965164, [356, 113, 419, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,323 app:97 detect [INFO]: 	person, 0.019999999552965164, [221, 74, 306, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,324 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 144, 177, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,324 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 177, 279, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,325 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 205, 180, 327]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,326 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 167, 120, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:58:39,327 app:97 detect [INFO]: 	person, 0.019999999552965164, [160, 135, 223, 231]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:39] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:39] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:39] "POST /UpdateDetectedObjects/person/0.79/263/376/96/311/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:39] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:39] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:39] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,363 app:71 detect [INFO]: time: 0.0700221061706543
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,364 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,366 app:97 detect [INFO]: 	person, 0.75, [261, 95, 376, 316]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,367 app:97 detect [INFO]: 	person, 0.05000000074505806, [268, 95, 349, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,368 app:97 detect [INFO]: 	person, 0.03999999910593033, [204, 118, 331, 324]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,369 app:97 detect [INFO]: 	person, 0.03999999910593033, [310, 104, 405, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,370 app:97 detect [INFO]: 	person, 0.029999999329447746, [183, 125, 269, 279]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,371 app:97 detect [INFO]: 	person, 0.029999999329447746, [353, 111, 416, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,372 app:97 detect [INFO]: 	person, 0.029999999329447746, [199, 141, 247, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,373 app:97 detect [INFO]: 	person, 0.029999999329447746, [338, 119, 392, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,374 app:97 detect [INFO]: 	person, 0.019999999552965164, [297, 102, 352, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,375 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 156, 332, 361]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,376 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 141, 234, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,377 app:97 detect [INFO]: 	person, 0.019999999552965164, [111, 141, 196, 288]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,378 app:97 detect [INFO]: 	person, 0.019999999552965164, [219, 103, 315, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,379 app:97 detect [INFO]: 	person, 0.019999999552965164, [123, 149, 180, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,380 app:97 detect [INFO]: 	person, 0.019999999552965164, [226, 79, 292, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,381 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 176, 278, 394]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,382 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 144, 160, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,383 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 104, 322, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:58:40,384 app:97 detect [INFO]: 	person, 0.019999999552965164, [127, 179, 180, 296]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:40] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:40] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:40] "POST /UpdateDetectedObjects/person/0.75/261/376/95/316/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:40] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:40] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:40] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,391 app:71 detect [INFO]: time: 0.06770467758178711
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,391 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,392 app:97 detect [INFO]: 	person, 0.699999988079071, [255, 91, 365, 316]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,393 app:97 detect [INFO]: 	person, 0.05999999865889549, [310, 108, 402, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,394 app:97 detect [INFO]: 	person, 0.05000000074505806, [285, 104, 357, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,395 app:97 detect [INFO]: 	person, 0.05000000074505806, [207, 115, 333, 325]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,396 app:97 detect [INFO]: 	person, 0.029999999329447746, [264, 93, 337, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,397 app:97 detect [INFO]: 	person, 0.029999999329447746, [332, 120, 385, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,398 app:97 detect [INFO]: 	person, 0.029999999329447746, [354, 99, 416, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,398 app:97 detect [INFO]: 	person, 0.029999999329447746, [177, 126, 272, 293]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,399 app:97 detect [INFO]: 	person, 0.029999999329447746, [118, 146, 186, 258]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,400 app:97 detect [INFO]: 	person, 0.029999999329447746, [222, 81, 315, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,401 app:97 detect [INFO]: 	person, 0.029999999329447746, [195, 135, 248, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,402 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 141, 235, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,403 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 204, 358]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,404 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 334, 359]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,405 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 145, 176, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,405 app:97 detect [INFO]: 	person, 0.019999999552965164, [376, 117, 416, 212]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,406 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 144, 159, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,407 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 181, 278, 392]
[33mInferencingEngine    |[0m 2022-03-16 01:58:41,408 app:97 detect [INFO]: 	person, 0.019999999552965164, [161, 135, 224, 232]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "POST /UpdateDetectedObjects/person/0.7/255/365/91/316/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:41] "GET /GetVideoURL HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "GET /DoVideoEncryption HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "POST /SendVideoSection/1/1 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,461 app:71 detect [INFO]: time: 0.06850290298461914
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,461 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,462 app:97 detect [INFO]: 	person, 0.7200000286102295, [261, 93, 375, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,463 app:97 detect [INFO]: 	person, 0.03999999910593033, [218, 116, 338, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,464 app:97 detect [INFO]: 	person, 0.03999999910593033, [287, 105, 358, 240]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,465 app:97 detect [INFO]: 	person, 0.029999999329447746, [270, 99, 335, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,466 app:97 detect [INFO]: 	person, 0.029999999329447746, [169, 119, 298, 319]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,467 app:97 detect [INFO]: 	person, 0.029999999329447746, [301, 112, 412, 324]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,468 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 146, 186, 258]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,469 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 159, 332, 363]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,470 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 137, 248, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,470 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 140, 235, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,471 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 148, 204, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,472 app:97 detect [INFO]: 	person, 0.019999999552965164, [354, 99, 416, 293]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,473 app:97 detect [INFO]: 	person, 0.019999999552965164, [186, 158, 259, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,474 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 103, 262, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,475 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 178, 278, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,475 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 145, 175, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,476 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 105, 299, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,477 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 123, 244, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:58:42,478 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 159, 257]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "POST /UpdateDetectedObjects/person/0.72/261/375/93/312/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "GET /CreateVideoSceneDataID/10/1920/1080 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:42] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,534 app:71 detect [INFO]: time: 0.06864213943481445
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,534 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,535 app:97 detect [INFO]: 	person, 0.6800000071525574, [263, 95, 365, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,537 app:97 detect [INFO]: 	person, 0.05999999865889549, [281, 98, 354, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,538 app:97 detect [INFO]: 	person, 0.05000000074505806, [206, 115, 331, 330]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,539 app:97 detect [INFO]: 	person, 0.05000000074505806, [303, 108, 401, 298]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,539 app:97 detect [INFO]: 	person, 0.029999999329447746, [178, 125, 272, 293]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,540 app:97 detect [INFO]: 	person, 0.029999999329447746, [271, 118, 334, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,541 app:97 detect [INFO]: 	person, 0.029999999329447746, [223, 81, 314, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,542 app:97 detect [INFO]: 	person, 0.019999999552965164, [197, 136, 248, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,542 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 145, 186, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,543 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 142, 235, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,544 app:97 detect [INFO]: 	person, 0.019999999552965164, [355, 101, 416, 289]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,545 app:97 detect [INFO]: 	person, 0.019999999552965164, [101, 148, 204, 356]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,546 app:97 detect [INFO]: 	person, 0.019999999552965164, [270, 93, 329, 187]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,546 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 180, 277, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,547 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 144, 159, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,548 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 159, 333, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:58:43,549 app:97 detect [INFO]: 	person, 0.019999999552965164, [332, 105, 399, 227]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:43] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:43] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:43] "POST /UpdateDetectedObjects/person/0.68/263/365/95/312/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:43] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:43] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:43] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,574 app:71 detect [INFO]: time: 0.06853461265563965
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,574 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,575 app:97 detect [INFO]: 	person, 0.6800000071525574, [254, 94, 370, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,576 app:97 detect [INFO]: 	person, 0.05999999865889549, [282, 105, 357, 237]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,577 app:97 detect [INFO]: 	person, 0.05000000074505806, [171, 107, 303, 297]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,578 app:97 detect [INFO]: 	person, 0.03999999910593033, [300, 116, 403, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,578 app:97 detect [INFO]: 	person, 0.029999999329447746, [264, 93, 338, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,579 app:97 detect [INFO]: 	person, 0.029999999329447746, [223, 102, 338, 245]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,580 app:97 detect [INFO]: 	person, 0.029999999329447746, [148, 139, 236, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,581 app:97 detect [INFO]: 	person, 0.029999999329447746, [196, 138, 247, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,582 app:97 detect [INFO]: 	person, 0.029999999329447746, [119, 147, 187, 258]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,582 app:97 detect [INFO]: 	person, 0.019999999552965164, [185, 155, 258, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,583 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 161, 333, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,584 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 205, 358]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,585 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 108, 262, 245]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,586 app:97 detect [INFO]: 	person, 0.019999999552965164, [227, 84, 294, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,586 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 146, 176, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,587 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 93, 321, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,588 app:97 detect [INFO]: 	person, 0.019999999552965164, [290, 147, 359, 326]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,589 app:97 detect [INFO]: 	person, 0.019999999552965164, [355, 100, 417, 286]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,590 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 177, 276, 397]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,590 app:97 detect [INFO]: 	person, 0.019999999552965164, [302, 95, 351, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,591 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,592 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 159, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,593 app:97 detect [INFO]: 	person, 0.019999999552965164, [123, 190, 187, 336]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,594 app:97 detect [INFO]: 	person, 0.019999999552965164, [160, 136, 226, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,594 app:97 detect [INFO]: 	person, 0.019999999552965164, [223, 158, 302, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:58:44,595 app:97 detect [INFO]: 	person, 0.019999999552965164, [331, 106, 399, 224]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:44] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:44] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:44] "POST /UpdateDetectedObjects/person/0.68/254/370/94/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:44] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:44] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:44] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,619 app:71 detect [INFO]: time: 0.06746602058410645
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,620 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,620 app:97 detect [INFO]: 	person, 0.7200000286102295, [260, 94, 367, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,621 app:97 detect [INFO]: 	person, 0.05000000074505806, [282, 104, 357, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,622 app:97 detect [INFO]: 	person, 0.05000000074505806, [207, 117, 331, 330]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,622 app:97 detect [INFO]: 	person, 0.03999999910593033, [303, 114, 402, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,623 app:97 detect [INFO]: 	person, 0.029999999329447746, [265, 93, 337, 206]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,624 app:97 detect [INFO]: 	person, 0.029999999329447746, [173, 102, 295, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,625 app:97 detect [INFO]: 	person, 0.029999999329447746, [196, 136, 248, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,625 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 145, 186, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,626 app:97 detect [INFO]: 	person, 0.019999999552965164, [222, 81, 312, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,627 app:97 detect [INFO]: 	person, 0.019999999552965164, [154, 154, 227, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,628 app:97 detect [INFO]: 	person, 0.019999999552965164, [180, 165, 267, 339]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,628 app:97 detect [INFO]: 	person, 0.019999999552965164, [356, 100, 416, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,629 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 148, 204, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,630 app:97 detect [INFO]: 	person, 0.019999999552965164, [259, 158, 333, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,631 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 95, 350, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,631 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 93, 320, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:58:45,632 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 159, 259]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:45] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:45] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:45] "POST /UpdateDetectedObjects/person/0.72/260/367/94/315/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:45] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:45] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:45] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,649 app:71 detect [INFO]: time: 0.06817317008972168
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,649 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,650 app:97 detect [INFO]: 	person, 0.7799999713897705, [265, 94, 376, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,651 app:97 detect [INFO]: 	person, 0.05000000074505806, [288, 104, 361, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,652 app:97 detect [INFO]: 	person, 0.03999999910593033, [218, 111, 343, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,653 app:97 detect [INFO]: 	person, 0.03999999910593033, [317, 123, 410, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,654 app:97 detect [INFO]: 	person, 0.029999999329447746, [170, 108, 299, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,655 app:97 detect [INFO]: 	person, 0.029999999329447746, [265, 92, 336, 203]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,656 app:97 detect [INFO]: 	person, 0.029999999329447746, [259, 152, 331, 357]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,657 app:97 detect [INFO]: 	person, 0.029999999329447746, [196, 138, 248, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,658 app:97 detect [INFO]: 	person, 0.029999999329447746, [124, 142, 179, 230]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,659 app:97 detect [INFO]: 	person, 0.019999999552965164, [154, 155, 226, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,660 app:97 detect [INFO]: 	person, 0.019999999552965164, [181, 166, 267, 342]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,661 app:97 detect [INFO]: 	person, 0.019999999552965164, [366, 121, 415, 269]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,662 app:97 detect [INFO]: 	person, 0.019999999552965164, [113, 138, 195, 277]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,663 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 102, 262, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,664 app:97 detect [INFO]: 	person, 0.019999999552965164, [304, 91, 349, 163]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,665 app:97 detect [INFO]: 	person, 0.019999999552965164, [335, 133, 391, 253]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,666 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,667 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 105, 300, 219]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,668 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 124, 244, 196]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,669 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 94, 319, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,670 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 140, 319, 239]
[33mInferencingEngine    |[0m 2022-03-16 01:58:46,671 app:97 detect [INFO]: 	person, 0.019999999552965164, [161, 135, 224, 232]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:46] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:46] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:46] "POST /UpdateDetectedObjects/person/0.78/265/376/94/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:46] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:46] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:46] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,721 app:71 detect [INFO]: time: 0.06575679779052734
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,721 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,722 app:97 detect [INFO]: 	person, 0.6499999761581421, [270, 92, 397, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,723 app:97 detect [INFO]: 	person, 0.07999999821186066, [286, 98, 373, 223]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,724 app:97 detect [INFO]: 	person, 0.05999999865889549, [201, 101, 352, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,725 app:97 detect [INFO]: 	person, 0.03999999910593033, [297, 103, 354, 188]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,726 app:97 detect [INFO]: 	person, 0.029999999329447746, [329, 83, 418, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,726 app:97 detect [INFO]: 	person, 0.029999999329447746, [166, 131, 289, 323]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,728 app:97 detect [INFO]: 	person, 0.029999999329447746, [302, 160, 356, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,729 app:97 detect [INFO]: 	person, 0.029999999329447746, [198, 141, 246, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,730 app:97 detect [INFO]: 	person, 0.029999999329447746, [217, 100, 305, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,730 app:97 detect [INFO]: 	person, 0.029999999329447746, [119, 147, 185, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,731 app:97 detect [INFO]: 	person, 0.019999999552965164, [264, 132, 341, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,732 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 161, 226, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,733 app:97 detect [INFO]: 	person, 0.019999999552965164, [270, 114, 332, 199]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,734 app:97 detect [INFO]: 	person, 0.019999999552965164, [336, 166, 394, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,735 app:97 detect [INFO]: 	person, 0.019999999552965164, [186, 148, 256, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,736 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 148, 204, 357]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,737 app:97 detect [INFO]: 	person, 0.019999999552965164, [305, 139, 352, 239]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,738 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 145, 176, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,739 app:97 detect [INFO]: 	person, 0.019999999552965164, [231, 113, 287, 203]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,740 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 148, 316, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,741 app:97 detect [INFO]: 	person, 0.019999999552965164, [220, 151, 301, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,742 app:97 detect [INFO]: 	person, 0.019999999552965164, [327, 111, 392, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,743 app:97 detect [INFO]: 	person, 0.019999999552965164, [124, 189, 186, 336]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,744 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 169, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,745 app:97 detect [INFO]: 	person, 0.019999999552965164, [106, 84, 213, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,746 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 146, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,747 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 179, 332, 373]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,748 app:97 detect [INFO]: 	person, 0.019999999552965164, [139, 109, 244, 288]
[33mInferencingEngine    |[0m 2022-03-16 01:58:47,749 app:97 detect [INFO]: 	person, 0.019999999552965164, [231, 155, 283, 236]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:47] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:47] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:47] "POST /UpdateDetectedObjects/person/0.65/270/397/92/307/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:47] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:47] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:47] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 01:56:05 : ### ERRROR ###: Issue submitting the SetPrivateKeyAndDeviceCertificate to Encryption Container
[35mSceneraLibrary       |[0m 01:58:41 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa89d6dd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:41 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933ccb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:41 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81913d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:42 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181930>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:42 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81915d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:42 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8191fb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:43 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8191250>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:43 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194030>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:43 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a51f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:44 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5cd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:44 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181370>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:44 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f2d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:45 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f3d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:45 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813fe30>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:45 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1610>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:46 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b070>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:46 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1950>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:46 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b7b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:47 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81662d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:47 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166950>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:47 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c18b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:48 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77d2390>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,762 app:71 detect [INFO]: time: 0.06585383415222168
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,763 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,763 app:97 detect [INFO]: 	person, 0.5799999833106995, [274, 92, 404, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,764 app:97 detect [INFO]: 	person, 0.07999999821186066, [273, 106, 322, 189]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,765 app:97 detect [INFO]: 	person, 0.07000000029802322, [269, 100, 352, 249]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,766 app:97 detect [INFO]: 	person, 0.05999999865889549, [313, 99, 399, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,767 app:97 detect [INFO]: 	person, 0.05999999865889549, [200, 94, 346, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,768 app:97 detect [INFO]: 	person, 0.03999999910593033, [289, 100, 365, 198]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,769 app:97 detect [INFO]: 	person, 0.029999999329447746, [168, 109, 286, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,770 app:97 detect [INFO]: 	person, 0.029999999329447746, [338, 99, 415, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,771 app:97 detect [INFO]: 	person, 0.029999999329447746, [335, 96, 397, 161]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,772 app:97 detect [INFO]: 	person, 0.029999999329447746, [224, 131, 286, 223]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,773 app:97 detect [INFO]: 	person, 0.019999999552965164, [181, 172, 269, 342]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,773 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 136, 248, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,774 app:97 detect [INFO]: 	person, 0.019999999552965164, [148, 144, 236, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,775 app:97 detect [INFO]: 	person, 0.019999999552965164, [215, 110, 305, 256]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,776 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 144, 188, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,777 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 151, 204, 360]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,778 app:97 detect [INFO]: 	person, 0.019999999552965164, [301, 166, 358, 303]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,779 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 144, 158, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,780 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 98, 262, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,781 app:97 detect [INFO]: 	person, 0.019999999552965164, [235, 117, 280, 193]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,782 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 154, 176, 233]
[33mInferencingEngine    |[0m 2022-03-16 01:58:48,783 app:97 detect [INFO]: 	person, 0.019999999552965164, [123, 192, 186, 337]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:48] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 01:58:48 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77d2a10>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:58:48] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:48] "POST /UpdateDetectedObjects/person/0.58/274/404/92/308/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:48] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:48] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:48] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,768 app:71 detect [INFO]: time: 0.06583452224731445
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,768 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,769 app:97 detect [INFO]: 	person, 0.7900000214576721, [284, 71, 402, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,769 app:97 detect [INFO]: 	person, 0.20000000298023224, [296, 69, 376, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,770 app:97 detect [INFO]: 	person, 0.05000000074505806, [297, 68, 339, 140]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,770 app:97 detect [INFO]: 	person, 0.05000000074505806, [204, 81, 341, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,770 app:97 detect [INFO]: 	person, 0.029999999329447746, [198, 138, 245, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,771 app:97 detect [INFO]: 	person, 0.029999999329447746, [305, 102, 352, 209]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,771 app:97 detect [INFO]: 	person, 0.019999999552965164, [120, 145, 186, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,771 app:97 detect [INFO]: 	person, 0.019999999552965164, [187, 145, 253, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,772 app:97 detect [INFO]: 	person, 0.019999999552965164, [171, 151, 273, 357]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,772 app:97 detect [INFO]: 	person, 0.019999999552965164, [156, 158, 225, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,773 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 154, 176, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,773 app:97 detect [INFO]: 	person, 0.019999999552965164, [107, 102, 212, 288]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,774 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 146, 158, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,774 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 169, 244, 264]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,775 app:97 detect [INFO]: 	person, 0.019999999552965164, [373, 106, 417, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,775 app:97 detect [INFO]: 	person, 0.019999999552965164, [231, 126, 285, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,776 app:97 detect [INFO]: 	person, 0.019999999552965164, [6, 178, 83, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,777 app:97 detect [INFO]: 	person, 0.019999999552965164, [271, 110, 324, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,778 app:97 detect [INFO]: 	person, 0.019999999552965164, [230, 164, 285, 278]
[33mInferencingEngine    |[0m 2022-03-16 01:58:49,778 app:97 detect [INFO]: 	person, 0.019999999552965164, [344, 78, 417, 280]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:49] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:49] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:49] "POST /UpdateDetectedObjects/person/0.79/284/402/71/307/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:49] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:49] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:49] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,780 app:71 detect [INFO]: time: 0.06622982025146484
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,780 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,781 app:97 detect [INFO]: 	person, 0.8500000238418579, [299, 85, 398, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,782 app:97 detect [INFO]: 	person, 0.36000001430511475, [331, 63, 400, 233]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,782 app:97 detect [INFO]: 	person, 0.09000000357627869, [305, 70, 361, 187]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,783 app:97 detect [INFO]: 	person, 0.03999999910593033, [337, 63, 394, 137]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,783 app:97 detect [INFO]: 	person, 0.03999999910593033, [204, 83, 341, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,784 app:97 detect [INFO]: 	person, 0.03999999910593033, [316, 65, 355, 138]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,784 app:97 detect [INFO]: 	person, 0.029999999329447746, [363, 65, 412, 212]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,784 app:97 detect [INFO]: 	person, 0.029999999329447746, [117, 146, 184, 255]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,785 app:97 detect [INFO]: 	person, 0.019999999552965164, [198, 136, 247, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,785 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 138, 226, 266]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,786 app:97 detect [INFO]: 	person, 0.019999999552965164, [138, 149, 240, 356]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,786 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 120, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,787 app:97 detect [INFO]: 	person, 0.019999999552965164, [307, 111, 363, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,787 app:97 detect [INFO]: 	person, 0.019999999552965164, [287, 49, 382, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,788 app:97 detect [INFO]: 	person, 0.019999999552965164, [114, 169, 192, 344]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,789 app:97 detect [INFO]: 	person, 0.019999999552965164, [89, 169, 157, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,789 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 174, 263, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,790 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 206, 180, 327]
[33mInferencingEngine    |[0m 2022-03-16 01:58:50,790 app:97 detect [INFO]: 	person, 0.019999999552965164, [5, 176, 87, 322]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:50] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:50] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:50] "POST /UpdateDetectedObjects/person/0.85/299/398/85/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:50] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:50] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:50] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,774 app:71 detect [INFO]: time: 0.06621599197387695
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,774 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,775 app:97 detect [INFO]: 	person, 0.8700000047683716, [297, 83, 400, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,776 app:97 detect [INFO]: 	person, 0.12999999523162842, [325, 64, 398, 213]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,777 app:97 detect [INFO]: 	person, 0.05000000074505806, [331, 51, 394, 147]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,778 app:97 detect [INFO]: 	person, 0.03999999910593033, [200, 88, 340, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,778 app:97 detect [INFO]: 	person, 0.029999999329447746, [308, 72, 370, 174]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,779 app:97 detect [INFO]: 	person, 0.029999999329447746, [120, 146, 185, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,780 app:97 detect [INFO]: 	person, 0.029999999329447746, [198, 139, 247, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,781 app:97 detect [INFO]: 	person, 0.019999999552965164, [308, 105, 364, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,781 app:97 detect [INFO]: 	person, 0.019999999552965164, [134, 144, 176, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,782 app:97 detect [INFO]: 	person, 0.019999999552965164, [333, 58, 372, 121]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,783 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 172, 264, 350]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,783 app:97 detect [INFO]: 	person, 0.019999999552965164, [139, 148, 240, 354]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,784 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 139, 227, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,785 app:97 detect [INFO]: 	person, 0.019999999552965164, [94, 144, 159, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,786 app:97 detect [INFO]: 	person, 0.019999999552965164, [106, 119, 208, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:58:51,787 app:97 detect [INFO]: 	person, 0.019999999552965164, [171, 75, 274, 255]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "POST /UpdateDetectedObjects/person/0.87/297/400/83/315/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "GET /GetVideoURL HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:51] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "GET /DoVideoEncryption HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "POST /SendVideoSection/1/1 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,227 app:71 detect [INFO]: time: 0.06567978858947754
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,228 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,230 app:97 detect [INFO]: 	person, 0.8600000143051147, [301, 83, 402, 316]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,230 app:97 detect [INFO]: 	person, 0.27000001072883606, [322, 46, 401, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,230 app:97 detect [INFO]: 	person, 0.07000000029802322, [339, 45, 398, 133]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,231 app:97 detect [INFO]: 	person, 0.03999999910593033, [199, 88, 340, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,231 app:97 detect [INFO]: 	person, 0.029999999329447746, [304, 52, 379, 170]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,231 app:97 detect [INFO]: 	person, 0.019999999552965164, [119, 145, 186, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,231 app:97 detect [INFO]: 	person, 0.019999999552965164, [199, 137, 247, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,232 app:97 detect [INFO]: 	person, 0.019999999552965164, [259, 89, 369, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,234 app:97 detect [INFO]: 	person, 0.019999999552965164, [318, 64, 355, 135]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,234 app:97 detect [INFO]: 	person, 0.019999999552965164, [325, 55, 359, 108]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,235 app:97 detect [INFO]: 	person, 0.019999999552965164, [333, 81, 386, 187]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,236 app:97 detect [INFO]: 	person, 0.019999999552965164, [344, 57, 416, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,237 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 138, 228, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,238 app:97 detect [INFO]: 	person, 0.019999999552965164, [370, 76, 414, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,238 app:97 detect [INFO]: 	person, 0.019999999552965164, [319, 103, 356, 178]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,239 app:97 detect [INFO]: 	person, 0.019999999552965164, [170, 154, 277, 358]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,240 app:97 detect [INFO]: 	person, 0.019999999552965164, [105, 117, 212, 300]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,241 app:97 detect [INFO]: 	person, 0.019999999552965164, [187, 150, 255, 283]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,241 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,242 app:97 detect [INFO]: 	person, 0.019999999552965164, [358, 44, 413, 162]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,243 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:53,244 app:97 detect [INFO]: 	person, 0.019999999552965164, [308, 106, 364, 238]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "POST /UpdateDetectedObjects/person/0.86/301/402/83/316/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "GET /CreateVideoSceneDataID/10/1920/1080 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:53] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,254 app:71 detect [INFO]: time: 0.06943726539611816
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,255 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,256 app:97 detect [INFO]: 	person, 0.5299999713897705, [301, 92, 411, 303]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,257 app:97 detect [INFO]: 	person, 0.14000000059604645, [323, 100, 402, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,257 app:97 detect [INFO]: 	person, 0.10999999940395355, [334, 195, 408, 318]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,258 app:97 detect [INFO]: 	person, 0.07000000029802322, [358, 108, 414, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,259 app:97 detect [INFO]: 	person, 0.05999999865889549, [379, 110, 416, 239]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,259 app:97 detect [INFO]: 	person, 0.03999999910593033, [379, 173, 416, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,260 app:97 detect [INFO]: 	person, 0.03999999910593033, [336, 99, 388, 168]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,261 app:97 detect [INFO]: 	person, 0.029999999329447746, [254, 124, 361, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,261 app:97 detect [INFO]: 	person, 0.029999999329447746, [193, 101, 331, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,262 app:97 detect [INFO]: 	person, 0.019999999552965164, [393, 120, 415, 208]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,262 app:97 detect [INFO]: 	person, 0.019999999552965164, [347, 237, 391, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,263 app:97 detect [INFO]: 	person, 0.019999999552965164, [200, 139, 247, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,264 app:97 detect [INFO]: 	person, 0.019999999552965164, [299, 91, 377, 198]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,264 app:97 detect [INFO]: 	person, 0.019999999552965164, [344, 165, 388, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,265 app:97 detect [INFO]: 	person, 0.019999999552965164, [120, 146, 184, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,265 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 177, 315, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,266 app:97 detect [INFO]: 	person, 0.019999999552965164, [182, 176, 266, 349]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,267 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 186, 366, 302]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,267 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 158, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,268 app:97 detect [INFO]: 	person, 0.019999999552965164, [156, 140, 226, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,268 app:97 detect [INFO]: 	person, 0.019999999552965164, [188, 152, 255, 283]
[33mInferencingEngine    |[0m 2022-03-16 01:58:54,269 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 144, 175, 219]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:54] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:54] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:54] "POST /UpdateDetectedObjects/person/0.53/301/411/92/303/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:54] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:54] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:54] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,323 app:71 detect [INFO]: time: 0.06589388847351074
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,324 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,324 app:97 detect [INFO]: 	person, 0.36000001430511475, [318, 102, 413, 301]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,325 app:97 detect [INFO]: 	person, 0.07999999821186066, [355, 106, 415, 251]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,325 app:97 detect [INFO]: 	person, 0.05999999865889549, [246, 92, 398, 320]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,326 app:97 detect [INFO]: 	person, 0.05000000074505806, [335, 100, 404, 200]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,326 app:97 detect [INFO]: 	person, 0.03999999910593033, [183, 107, 323, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,327 app:97 detect [INFO]: 	person, 0.029999999329447746, [199, 141, 246, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,327 app:97 detect [INFO]: 	person, 0.029999999329447746, [119, 147, 185, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,327 app:97 detect [INFO]: 	person, 0.029999999329447746, [378, 140, 416, 274]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,328 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 142, 226, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,328 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 149, 204, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,329 app:97 detect [INFO]: 	person, 0.019999999552965164, [187, 155, 256, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,329 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 145, 175, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,330 app:97 detect [INFO]: 	person, 0.019999999552965164, [168, 156, 282, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,330 app:97 detect [INFO]: 	person, 0.019999999552965164, [344, 126, 391, 249]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,330 app:97 detect [INFO]: 	person, 0.019999999552965164, [306, 117, 374, 231]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,331 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 175, 245, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,331 app:97 detect [INFO]: 	person, 0.019999999552965164, [370, 90, 415, 198]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,332 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 99, 261, 237]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,332 app:97 detect [INFO]: 	person, 0.019999999552965164, [229, 132, 285, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,333 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 154, 315, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,333 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 169, 119, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,334 app:97 detect [INFO]: 	person, 0.019999999552965164, [123, 189, 186, 335]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,334 app:97 detect [INFO]: 	person, 0.019999999552965164, [136, 83, 243, 267]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,335 app:97 detect [INFO]: 	person, 0.019999999552965164, [269, 167, 322, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,335 app:97 detect [INFO]: 	person, 0.019999999552965164, [263, 116, 329, 249]
[33mInferencingEngine    |[0m 2022-03-16 01:58:55,336 app:97 detect [INFO]: 	person, 0.019999999552965164, [94, 146, 158, 260]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:55] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:55] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:55] "POST /UpdateDetectedObjects/person/0.36/318/413/102/301/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:55] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:55] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:58:55] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 
[35mSceneraLibrary       |[0m 01:58:48 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1810>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:49 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e42b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:49 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4cb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:49 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4ed0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:50 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5eb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:50 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933c590>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:50 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4790>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:51 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5510>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:51 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f41d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:51 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77894b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:52 : Exception in SendSceneDataToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81912d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:52 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933c910>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:52 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa89d6db0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:52 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77898d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:53 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194a50>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:53 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7789990>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:53 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194cb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:54 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a51b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:54 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa9337b10>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:54 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81910b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:55 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f3d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:55 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8191490>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[36mEncryptionLibrary    |[0m ================
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,353 app:71 detect [INFO]: time: 0.07151579856872559
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,354 app:77 detect [INFO]: detections:
[36mEncryptionLibrary    |[0m {"PrivateKey": "{\"crv\": \"P-256\", \"d\": \"wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY\", \"kty\": \"EC\", \"x\": \"tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM\", \"y\": \"-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60\"}", "DeviceCertificate": "MIICmDCCAQCgAwIBAgIGAXrrg7qgMA0GCSqGSIb3DQEBDQUAMBUxEzARBgNVBAMMCktleVNlcnZpY2UwIBcNMjEwNzI4MDUwODM2WhgPMjEyMTA3MDQwNTA4MzZaMC8xLTArBgNVBAMMJDAwMDAwMDE0LTYwZjYtODBhNy04MDAyLTAwMDAwMDAwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLSHIOXNx2I6SiM4PDFvHMfo+BzXREevONRfOauwOOXT+RP+slNoPURPyGY6u8KkG5xjBXP5q56Tm+x3NFu3i62jHTAbMA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBDQUAA4IBgQApNGEw61+I5rgmlab0XO1Eq6agiJjpK3Oiob7jqWevrIrob5RdsRJAr6hr/0Kv8NlgL6vBwpgNpskDq0xc4Jk/9yRxYU5btkDCG9SpXcPUHlXui/dAoYG6C7qyCy7xYXF42LraInOlDHnwrYVcamXVh0lYucqD7MWCMex4kFd7Gl0KwsaZBhfCDvyyKsKkyzvIvG9khDEiRESM0vqStRRI0ffqF5M1xXKSO6KJU2nhO3Vq0Ltaj6Y8i9J5JoyP1NxAJyZPbUbdDhfJmlStUgwi8C8YdAo9hjK41S9vkxV10mfBYlyT4MBX6tPleOe9I6qkFvtpm1xyfmeyKuIucRx2uQYOzsCu2/ov9UfgiAx3rPyovvpELSfHcLSfQ84lx3UrfMgkMh7NTwCbTcfh3hBuuORfY/9fgRpNbeZb5WCcQofrgmfG2vaeEubahe92p1xYZlXN3Tfcy03VLPozo0BQc+ltpJoAB4uc5NdCzhOtdbft7C/ZtwiLpmiOjT8LNTQ="}
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,365 app:97 detect [INFO]: 	person, 0.10000000149011612, [359, 109, 415, 251]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,366 app:97 detect [INFO]: 	person, 0.07000000029802322, [319, 109, 412, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,367 app:97 detect [INFO]: 	person, 0.05000000074505806, [237, 90, 385, 325]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,367 app:97 detect [INFO]: 	person, 0.03999999910593033, [346, 111, 406, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,368 app:97 detect [INFO]: 	person, 0.03999999910593033, [184, 107, 321, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,369 app:97 detect [INFO]: 	person, 0.029999999329447746, [370, 102, 416, 170]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,369 app:97 detect [INFO]: 	person, 0.029999999329447746, [200, 141, 245, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,370 app:97 detect [INFO]: 	person, 0.029999999329447746, [304, 121, 369, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,371 app:97 detect [INFO]: 	person, 0.029999999329447746, [117, 147, 184, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,371 app:97 detect [INFO]: 	person, 0.029999999329447746, [155, 141, 225, 266]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,372 app:97 detect [INFO]: 	person, 0.019999999552965164, [284, 61, 400, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,372 app:97 detect [INFO]: 	person, 0.019999999552965164, [270, 124, 320, 231]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,373 app:97 detect [INFO]: 	person, 0.019999999552965164, [228, 132, 284, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,374 app:97 detect [INFO]: 	person, 0.019999999552965164, [297, 74, 368, 189]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,374 app:97 detect [INFO]: 	person, 0.019999999552965164, [137, 112, 242, 300]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,375 app:97 detect [INFO]: 	person, 0.019999999552965164, [269, 173, 321, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,376 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 96, 261, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,376 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 178, 268, 348]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,377 app:97 detect [INFO]: 	person, 0.019999999552965164, [189, 154, 256, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,377 app:97 detect [INFO]: 	person, 0.019999999552965164, [129, 144, 176, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,378 app:97 detect [INFO]: 	person, 0.019999999552965164, [305, 42, 354, 145]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,378 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 149, 202, 352]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,379 app:97 detect [INFO]: 	person, 0.019999999552965164, [363, 140, 421, 330]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,380 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 175, 245, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,380 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 156, 366, 283]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,381 app:97 detect [INFO]: 	person, 0.019999999552965164, [344, 133, 393, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,381 app:97 detect [INFO]: 	person, 0.019999999552965164, [308, 114, 355, 187]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,382 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 81, 243, 168]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,382 app:97 detect [INFO]: 	person, 0.019999999552965164, [239, 78, 279, 161]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,383 app:97 detect [INFO]: 	person, 0.019999999552965164, [163, 183, 216, 302]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,383 app:97 detect [INFO]: 	person, 0.019999999552965164, [236, 181, 280, 267]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,384 app:97 detect [INFO]: 	person, 0.019999999552965164, [218, 160, 296, 288]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,384 app:97 detect [INFO]: 	person, 0.019999999552965164, [107, 82, 216, 266]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,385 app:97 detect [INFO]: 	person, 0.019999999552965164, [256, 95, 341, 267]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,386 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 205, 180, 327]
[33mInferencingEngine    |[0m 2022-03-16 01:58:56,386 app:97 detect [INFO]: 	person, 0.019999999552965164, [167, 140, 213, 218]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:56] "POST /inference HTTP/1.1" 200 -
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIn0.QwTQYh1OFgO-yiKHPb2j6GDBOqov1S0lX4yDltufRoLH8ZV92XZo1xlfXuPpOLJeNduojEP7z9Kqx1SWFMjX1B35zP5PG8vP1OU-l2gAlKZN3qJHQ_s-I8Tsf5imDHcoP7pm5EgUtXh5kIm0FXok6AAjkd0BU1hLGqQeH2pbl_Goihk589HENaQXP0mQV9VXwP66s5CLZy8FLIj3uxrA3DkCseag96HHCGfVaVPgzCtu8O47PXp0wh9rnEmK0Eh4TdHZws-qzXxnJnpAxmnEqHJAQynnpK1KgYn1shZ5iNoL5FJoJoSMNfjfyXdK5ui-dqPNhIMsr0jVq3RNV_Pmdf2bDIJXCOK2QcebxGZTivB8PBUwUYQI5R1e4z0POl-EGSI5YbvUYuJqLFBlL-q58sbkJvLlN9koSfAPsPceFcZkEcQxEAh-bPq0VNf6HGVNZhvnOa-OjguZWp7yTHJiwEXkiZ9l2GOuCPp1x68s2np0otZm6E68hNErd9kJoQJG.mEXhD9SDpVUZs3Sm..rQ1ZlYXzYNk-FX-tvs2dhg
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,436 app:71 detect [INFO]: time: 0.07412052154541016
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,436 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,437 app:97 detect [INFO]: 	person, 0.09000000357627869, [357, 110, 416, 253]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,438 app:97 detect [INFO]: 	person, 0.07000000029802322, [314, 104, 411, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,439 app:97 detect [INFO]: 	person, 0.03999999910593033, [237, 92, 385, 324]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,440 app:97 detect [INFO]: 	person, 0.03999999910593033, [345, 111, 407, 191]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,441 app:97 detect [INFO]: 	person, 0.029999999329447746, [185, 106, 321, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,442 app:97 detect [INFO]: 	person, 0.029999999329447746, [378, 143, 416, 273]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,444 app:97 detect [INFO]: 	person, 0.029999999329447746, [200, 142, 245, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,444 app:97 detect [INFO]: 	person, 0.029999999329447746, [372, 102, 416, 174]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,446 app:97 detect [INFO]: 	person, 0.029999999329447746, [305, 121, 369, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,447 app:97 detect [INFO]: 	person, 0.029999999329447746, [120, 147, 183, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,448 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 158, 315, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,449 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 140, 224, 269]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,450 app:97 detect [INFO]: 	person, 0.019999999552965164, [344, 135, 392, 245]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,450 app:97 detect [INFO]: 	person, 0.019999999552965164, [230, 130, 284, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,451 app:97 detect [INFO]: 	person, 0.019999999552965164, [269, 173, 321, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,452 app:97 detect [INFO]: 	person, 0.019999999552965164, [292, 69, 386, 213]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,453 app:97 detect [INFO]: 	person, 0.019999999552965164, [135, 144, 175, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,454 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 144, 159, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,455 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 176, 267, 348]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,456 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 95, 260, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,457 app:97 detect [INFO]: 	person, 0.019999999552965164, [106, 102, 208, 288]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,458 app:97 detect [INFO]: 	person, 0.019999999552965164, [189, 153, 255, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,459 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 156, 365, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,460 app:97 detect [INFO]: 	person, 0.019999999552965164, [138, 150, 240, 356]
[33mInferencingEngine    |[0m 2022-03-16 01:58:57,461 app:97 detect [INFO]: 	person, 0.019999999552965164, [340, 162, 401, 306]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:57] "POST /inference HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,543 app:71 detect [INFO]: time: 0.06871843338012695
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,543 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,544 app:97 detect [INFO]: 	person, 0.17000000178813934, [318, 110, 412, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,545 app:97 detect [INFO]: 	person, 0.10000000149011612, [355, 109, 415, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,546 app:97 detect [INFO]: 	person, 0.05000000074505806, [243, 91, 390, 323]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,547 app:97 detect [INFO]: 	person, 0.029999999329447746, [338, 101, 401, 178]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,548 app:97 detect [INFO]: 	person, 0.029999999329447746, [185, 108, 319, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,549 app:97 detect [INFO]: 	person, 0.029999999329447746, [375, 140, 416, 275]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,550 app:97 detect [INFO]: 	person, 0.029999999329447746, [205, 146, 242, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,551 app:97 detect [INFO]: 	person, 0.029999999329447746, [305, 119, 375, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,552 app:97 detect [INFO]: 	person, 0.029999999329447746, [343, 128, 393, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,553 app:97 detect [INFO]: 	person, 0.029999999329447746, [126, 141, 179, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,553 app:97 detect [INFO]: 	person, 0.029999999329447746, [190, 145, 250, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,554 app:97 detect [INFO]: 	person, 0.019999999552965164, [182, 172, 267, 346]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,555 app:97 detect [INFO]: 	person, 0.019999999552965164, [156, 142, 228, 271]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,556 app:97 detect [INFO]: 	person, 0.019999999552965164, [114, 138, 195, 277]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,557 app:97 detect [INFO]: 	person, 0.019999999552965164, [371, 98, 416, 172]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,558 app:97 detect [INFO]: 	person, 0.019999999552965164, [309, 146, 354, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,559 app:97 detect [INFO]: 	person, 0.019999999552965164, [228, 133, 285, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,560 app:97 detect [INFO]: 	person, 0.019999999552965164, [138, 146, 241, 352]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,561 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 156, 315, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,562 app:97 detect [INFO]: 	person, 0.019999999552965164, [269, 170, 321, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,562 app:97 detect [INFO]: 	person, 0.019999999552965164, [292, 156, 375, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,563 app:97 detect [INFO]: 	person, 0.019999999552965164, [298, 84, 371, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,564 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 169, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,565 app:97 detect [INFO]: 	person, 0.019999999552965164, [124, 189, 186, 335]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,566 app:97 detect [INFO]: 	person, 0.019999999552965164, [171, 85, 276, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,567 app:97 detect [INFO]: 	person, 0.019999999552965164, [94, 145, 159, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,568 app:97 detect [INFO]: 	person, 0.019999999552965164, [7, 175, 82, 304]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,569 app:97 detect [INFO]: 	person, 0.019999999552965164, [298, 37, 361, 158]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,569 app:97 detect [INFO]: 	person, 0.019999999552965164, [263, 113, 328, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,571 app:97 detect [INFO]: 	person, 0.019999999552965164, [216, 179, 303, 341]
[33mInferencingEngine    |[0m 2022-03-16 01:58:58,572 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 170, 174, 260]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:58] "POST /inference HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,638 app:71 detect [INFO]: time: 0.07160735130310059
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,639 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,640 app:97 detect [INFO]: 	person, 0.2199999988079071, [325, 106, 414, 275]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,642 app:97 detect [INFO]: 	person, 0.05000000074505806, [338, 110, 404, 188]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,642 app:97 detect [INFO]: 	person, 0.05000000074505806, [366, 115, 416, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,643 app:97 detect [INFO]: 	person, 0.03999999910593033, [240, 92, 389, 319]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,644 app:97 detect [INFO]: 	person, 0.029999999329447746, [186, 106, 321, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,646 app:97 detect [INFO]: 	person, 0.029999999329447746, [294, 135, 384, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,647 app:97 detect [INFO]: 	person, 0.029999999329447746, [376, 145, 416, 275]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,647 app:97 detect [INFO]: 	person, 0.029999999329447746, [200, 142, 245, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,648 app:97 detect [INFO]: 	person, 0.029999999329447746, [305, 117, 379, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,649 app:97 detect [INFO]: 	person, 0.019999999552965164, [339, 159, 402, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,650 app:97 detect [INFO]: 	person, 0.019999999552965164, [182, 174, 266, 346]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,651 app:97 detect [INFO]: 	person, 0.019999999552965164, [122, 145, 184, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,652 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 156, 315, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,653 app:97 detect [INFO]: 	person, 0.019999999552965164, [309, 146, 354, 240]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,653 app:97 detect [INFO]: 	person, 0.019999999552965164, [188, 151, 254, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,654 app:97 detect [INFO]: 	person, 0.019999999552965164, [268, 172, 321, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,655 app:97 detect [INFO]: 	person, 0.019999999552965164, [227, 132, 285, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,656 app:97 detect [INFO]: 	person, 0.019999999552965164, [156, 140, 227, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,657 app:97 detect [INFO]: 	person, 0.019999999552965164, [374, 97, 416, 174]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,658 app:97 detect [INFO]: 	person, 0.019999999552965164, [216, 179, 304, 342]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,659 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 172, 244, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,659 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 157, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,661 app:97 detect [INFO]: 	person, 0.019999999552965164, [263, 116, 330, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:58:59,661 app:97 detect [INFO]: 	person, 0.019999999552965164, [135, 144, 175, 221]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:58:59] "POST /inference HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,675 app:71 detect [INFO]: time: 0.06594371795654297
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,676 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,677 app:97 detect [INFO]: 	person, 0.4300000071525574, [311, 83, 414, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,678 app:97 detect [INFO]: 	person, 0.03999999910593033, [366, 83, 416, 275]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,679 app:97 detect [INFO]: 	person, 0.03999999910593033, [338, 96, 398, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,680 app:97 detect [INFO]: 	person, 0.03999999910593033, [248, 51, 390, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,680 app:97 detect [INFO]: 	person, 0.029999999329447746, [185, 101, 322, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,681 app:97 detect [INFO]: 	person, 0.029999999329447746, [200, 141, 245, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,682 app:97 detect [INFO]: 	person, 0.029999999329447746, [298, 99, 382, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,683 app:97 detect [INFO]: 	person, 0.019999999552965164, [123, 146, 185, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,684 app:97 detect [INFO]: 	person, 0.019999999552965164, [182, 174, 266, 348]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,685 app:97 detect [INFO]: 	person, 0.019999999552965164, [338, 65, 398, 154]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,685 app:97 detect [INFO]: 	person, 0.019999999552965164, [188, 151, 255, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,686 app:97 detect [INFO]: 	person, 0.019999999552965164, [336, 107, 373, 176]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,687 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 154, 315, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,688 app:97 detect [INFO]: 	person, 0.019999999552965164, [135, 144, 175, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,689 app:97 detect [INFO]: 	person, 0.019999999552965164, [298, 49, 364, 170]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,690 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 141, 226, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,691 app:97 detect [INFO]: 	person, 0.019999999552965164, [229, 131, 284, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,691 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 172, 244, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,692 app:97 detect [INFO]: 	person, 0.019999999552965164, [140, 149, 241, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,693 app:97 detect [INFO]: 	person, 0.019999999552965164, [172, 78, 275, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,694 app:97 detect [INFO]: 	person, 0.019999999552965164, [234, 68, 284, 174]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,695 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 145, 155, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,695 app:97 detect [INFO]: 	person, 0.019999999552965164, [269, 169, 321, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,696 app:97 detect [INFO]: 	person, 0.019999999552965164, [288, 159, 381, 329]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,697 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 151, 204, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:00,698 app:97 detect [INFO]: 	person, 0.019999999552965164, [340, 90, 371, 147]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:00] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 01:58:55 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4f50>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:59:00] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:00] "POST /UpdateDetectedObjects/person/0.43/311/414/83/310/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:00] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:00] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:00] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,687 app:71 detect [INFO]: time: 0.06800007820129395
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,687 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,688 app:97 detect [INFO]: 	person, 0.2800000011920929, [277, 92, 394, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,689 app:97 detect [INFO]: 	person, 0.07999999821186066, [295, 104, 366, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,690 app:97 detect [INFO]: 	person, 0.07000000029802322, [322, 109, 393, 219]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,691 app:97 detect [INFO]: 	person, 0.05999999865889549, [204, 87, 354, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,692 app:97 detect [INFO]: 	person, 0.029999999329447746, [272, 110, 338, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,693 app:97 detect [INFO]: 	person, 0.029999999329447746, [167, 107, 289, 301]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,694 app:97 detect [INFO]: 	person, 0.029999999329447746, [324, 90, 424, 329]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,696 app:97 detect [INFO]: 	person, 0.029999999329447746, [302, 97, 357, 166]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,697 app:97 detect [INFO]: 	person, 0.029999999329447746, [263, 126, 341, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,698 app:97 detect [INFO]: 	person, 0.029999999329447746, [187, 141, 253, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,699 app:97 detect [INFO]: 	person, 0.029999999329447746, [335, 97, 390, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,700 app:97 detect [INFO]: 	person, 0.029999999329447746, [332, 136, 389, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,701 app:97 detect [INFO]: 	person, 0.029999999329447746, [275, 143, 319, 239]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,702 app:97 detect [INFO]: 	person, 0.029999999329447746, [117, 146, 186, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,703 app:97 detect [INFO]: 	person, 0.029999999329447746, [307, 137, 352, 242]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,704 app:97 detect [INFO]: 	person, 0.029999999329447746, [226, 131, 287, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,706 app:97 detect [INFO]: 	person, 0.019999999552965164, [201, 141, 244, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,707 app:97 detect [INFO]: 	person, 0.019999999552965164, [154, 137, 229, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,708 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 173, 265, 348]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,709 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 95, 322, 166]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,710 app:97 detect [INFO]: 	person, 0.019999999552965164, [367, 110, 416, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,711 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 161, 357, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,712 app:97 detect [INFO]: 	person, 0.019999999552965164, [229, 162, 287, 277]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,713 app:97 detect [INFO]: 	person, 0.019999999552965164, [138, 146, 239, 351]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,715 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 82, 244, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,715 app:97 detect [INFO]: 	person, 0.019999999552965164, [226, 76, 292, 191]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,717 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 174, 245, 264]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,717 app:97 detect [INFO]: 	person, 0.019999999552965164, [238, 87, 280, 162]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,718 app:97 detect [INFO]: 	person, 0.019999999552965164, [115, 168, 193, 341]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,719 app:97 detect [INFO]: 	person, 0.019999999552965164, [107, 119, 213, 297]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,720 app:97 detect [INFO]: 	person, 0.019999999552965164, [236, 116, 281, 190]
[33mInferencingEngine    |[0m 2022-03-16 01:59:01,721 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 144, 177, 219]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:01] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:01] "GET /GetVideoURL HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,745 app:71 detect [INFO]: time: 0.06787300109863281
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,745 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,746 app:97 detect [INFO]: 	person, 0.6299999952316284, [246, 93, 370, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,747 app:97 detect [INFO]: 	person, 0.05999999865889549, [261, 98, 339, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,748 app:97 detect [INFO]: 	person, 0.05999999865889549, [300, 105, 407, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,749 app:97 detect [INFO]: 	person, 0.03999999910593033, [209, 124, 325, 332]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,749 app:97 detect [INFO]: 	person, 0.03999999910593033, [221, 135, 299, 253]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,750 app:97 detect [INFO]: 	person, 0.03999999910593033, [168, 113, 291, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,750 app:97 detect [INFO]: 	person, 0.029999999329447746, [228, 143, 282, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,751 app:97 detect [INFO]: 	person, 0.029999999329447746, [222, 83, 313, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,752 app:97 detect [INFO]: 	person, 0.029999999329447746, [185, 136, 259, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,752 app:97 detect [INFO]: 	person, 0.029999999329447746, [298, 120, 351, 213]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,753 app:97 detect [INFO]: 	person, 0.029999999329447746, [353, 96, 417, 287]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,753 app:97 detect [INFO]: 	person, 0.029999999329447746, [182, 166, 267, 343]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,755 app:97 detect [INFO]: 	person, 0.019999999552965164, [334, 98, 407, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,755 app:97 detect [INFO]: 	person, 0.019999999552965164, [145, 129, 237, 293]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,756 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 145, 188, 258]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,756 app:97 detect [INFO]: 	person, 0.019999999552965164, [200, 139, 245, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,757 app:97 detect [INFO]: 	person, 0.019999999552965164, [268, 92, 320, 162]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,758 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 148, 204, 354]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,759 app:97 detect [INFO]: 	person, 0.019999999552965164, [232, 178, 290, 300]
[33mInferencingEngine    |[0m 2022-03-16 01:59:02,760 app:97 detect [INFO]: 	person, 0.019999999552965164, [160, 134, 224, 230]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:02] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:02] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:02] "POST /UpdateDetectedObjects/person/0.63/246/370/93/306/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:02] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:02] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:02] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:03] "GET /DoVideoEncryption HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:03] "POST /SendVideoSection/1/1 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,955 app:71 detect [INFO]: time: 0.06783080101013184
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,955 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,956 app:97 detect [INFO]: 	person, 0.46000000834465027, [254, 96, 374, 304]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,956 app:97 detect [INFO]: 	person, 0.10000000149011612, [268, 97, 348, 208]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,958 app:97 detect [INFO]: 	person, 0.05000000074505806, [208, 118, 329, 328]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,959 app:97 detect [INFO]: 	person, 0.05000000074505806, [302, 115, 407, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,960 app:97 detect [INFO]: 	person, 0.05000000074505806, [223, 126, 310, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,962 app:97 detect [INFO]: 	person, 0.029999999329447746, [177, 127, 274, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,963 app:97 detect [INFO]: 	person, 0.029999999329447746, [227, 157, 291, 273]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,964 app:97 detect [INFO]: 	person, 0.029999999329447746, [229, 141, 283, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,965 app:97 detect [INFO]: 	person, 0.029999999329447746, [273, 93, 323, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,966 app:97 detect [INFO]: 	person, 0.029999999329447746, [330, 100, 405, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,968 app:97 detect [INFO]: 	person, 0.029999999329447746, [117, 146, 187, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,969 app:97 detect [INFO]: 	person, 0.029999999329447746, [288, 120, 356, 252]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,970 app:97 detect [INFO]: 	person, 0.029999999329447746, [195, 134, 250, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,971 app:97 detect [INFO]: 	person, 0.029999999329447746, [138, 141, 241, 345]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,972 app:97 detect [INFO]: 	person, 0.019999999552965164, [352, 94, 417, 288]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,974 app:97 detect [INFO]: 	person, 0.019999999552965164, [302, 92, 350, 162]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,975 app:97 detect [INFO]: 	person, 0.019999999552965164, [257, 165, 333, 370]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,977 app:97 detect [INFO]: 	person, 0.019999999552965164, [227, 86, 296, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,977 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 175, 278, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,979 app:97 detect [INFO]: 	person, 0.019999999552965164, [108, 120, 216, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,980 app:97 detect [INFO]: 	person, 0.019999999552965164, [115, 168, 193, 341]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,981 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 33, 323, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,982 app:97 detect [INFO]: 	person, 0.019999999552965164, [158, 143, 225, 254]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,983 app:97 detect [INFO]: 	person, 0.019999999552965164, [190, 188, 259, 335]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,983 app:97 detect [INFO]: 	person, 0.019999999552965164, [343, 110, 391, 190]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,984 app:97 detect [INFO]: 	person, 0.019999999552965164, [338, 135, 397, 250]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,985 app:97 detect [INFO]: 	person, 0.019999999552965164, [268, 134, 328, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,986 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 205, 180, 327]
[33mInferencingEngine    |[0m 2022-03-16 01:59:03,987 app:97 detect [INFO]: 	person, 0.019999999552965164, [297, 161, 355, 310]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:03] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:04] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:04] "POST /UpdateDetectedObjects/person/0.46/254/374/96/304/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:04] "GET /CreateVideoSceneDataID/10/1920/1080 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:04] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:04] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:04] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 
[35mSceneraLibrary       |[0m 01:58:56 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1f50>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:56 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e40d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:56 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7792170>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:57 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166910>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:57 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7792250>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:57 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814bdb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:58 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166cb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:58 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b670>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:58 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c19d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:59 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4410>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:59 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1bb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:58:59 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a52f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:00 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4670>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:00 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5d90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:00 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f9f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:01 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4d90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:01 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f130>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:01 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77894b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:03 : Exception in SendSceneDataToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7789410>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:03 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81919f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:03 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e47d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:03 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4950>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,020 app:71 detect [INFO]: time: 0.06827664375305176
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,020 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,022 app:97 detect [INFO]: 	person, 0.33000001311302185, [225, 140, 291, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,023 app:97 detect [INFO]: 	person, 0.33000001311302185, [267, 98, 369, 287]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,023 app:97 detect [INFO]: 	person, 0.14000000059604645, [218, 118, 327, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,024 app:97 detect [INFO]: 	person, 0.11999999731779099, [268, 100, 344, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,024 app:97 detect [INFO]: 	person, 0.05000000074505806, [302, 114, 406, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,024 app:97 detect [INFO]: 	person, 0.05000000074505806, [269, 127, 330, 250]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,025 app:97 detect [INFO]: 	person, 0.03999999910593033, [186, 130, 281, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,026 app:97 detect [INFO]: 	person, 0.03999999910593033, [332, 101, 406, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,027 app:97 detect [INFO]: 	person, 0.029999999329447746, [153, 140, 226, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,028 app:97 detect [INFO]: 	person, 0.029999999329447746, [199, 134, 258, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,030 app:97 detect [INFO]: 	person, 0.029999999329447746, [352, 93, 417, 287]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,031 app:97 detect [INFO]: 	person, 0.029999999329447746, [270, 97, 321, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,032 app:97 detect [INFO]: 	person, 0.029999999329447746, [115, 147, 185, 256]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,033 app:97 detect [INFO]: 	person, 0.029999999329447746, [299, 139, 351, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,034 app:97 detect [INFO]: 	person, 0.029999999329447746, [233, 104, 287, 184]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,035 app:97 detect [INFO]: 	person, 0.029999999329447746, [226, 159, 291, 319]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,036 app:97 detect [INFO]: 	person, 0.029999999329447746, [191, 187, 259, 333]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,037 app:97 detect [INFO]: 	person, 0.019999999552965164, [139, 146, 241, 347]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,038 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 168, 249, 265]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,039 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 121, 247, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,040 app:97 detect [INFO]: 	person, 0.019999999552965164, [267, 131, 306, 191]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,041 app:97 detect [INFO]: 	person, 0.019999999552965164, [165, 140, 214, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,042 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 149, 203, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:05,043 app:97 detect [INFO]: 	person, 0.019999999552965164, [368, 102, 416, 184]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:05] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 01:59:04 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194650>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:59:05] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:05] "POST /UpdateDetectedObjects/person/0.33/225/291/140/232/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:05] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:05] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:05] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,064 app:71 detect [INFO]: time: 0.06882643699645996
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,064 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,065 app:97 detect [INFO]: 	person, 0.6700000166893005, [257, 93, 380, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,066 app:97 detect [INFO]: 	person, 0.05999999865889549, [282, 96, 364, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,067 app:97 detect [INFO]: 	person, 0.05999999865889549, [170, 99, 320, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,068 app:97 detect [INFO]: 	person, 0.05000000074505806, [303, 103, 402, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,069 app:97 detect [INFO]: 	person, 0.03999999910593033, [352, 101, 415, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,070 app:97 detect [INFO]: 	person, 0.029999999329447746, [338, 118, 397, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,071 app:97 detect [INFO]: 	person, 0.029999999329447746, [299, 102, 353, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,072 app:97 detect [INFO]: 	person, 0.029999999329447746, [180, 124, 270, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,072 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 142, 243, 209]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,073 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 138, 236, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,074 app:97 detect [INFO]: 	person, 0.019999999552965164, [119, 145, 188, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,075 app:97 detect [INFO]: 	person, 0.019999999552965164, [193, 120, 252, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,076 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 88, 333, 201]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,077 app:97 detect [INFO]: 	person, 0.019999999552965164, [257, 162, 333, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,078 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 101, 297, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,079 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 176, 278, 397]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,080 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 205, 358]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,081 app:97 detect [INFO]: 	person, 0.019999999552965164, [372, 117, 415, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,081 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 63, 327, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,082 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 144, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:06,083 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 119, 216]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:06] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:06] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:06] "POST /UpdateDetectedObjects/person/0.67/257/380/93/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:06] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:06] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:06] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,114 app:71 detect [INFO]: time: 0.0694739818572998
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,115 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,116 app:97 detect [INFO]: 	person, 0.75, [260, 94, 380, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,118 app:97 detect [INFO]: 	person, 0.05000000074505806, [280, 99, 362, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,119 app:97 detect [INFO]: 	person, 0.05000000074505806, [303, 104, 403, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,119 app:97 detect [INFO]: 	person, 0.03999999910593033, [170, 102, 309, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,121 app:97 detect [INFO]: 	person, 0.029999999329447746, [353, 113, 416, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,122 app:97 detect [INFO]: 	person, 0.029999999329447746, [339, 120, 398, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,122 app:97 detect [INFO]: 	person, 0.029999999329447746, [296, 103, 352, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,123 app:97 detect [INFO]: 	person, 0.029999999329447746, [196, 140, 246, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,124 app:97 detect [INFO]: 	person, 0.019999999552965164, [119, 146, 186, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,125 app:97 detect [INFO]: 	person, 0.019999999552965164, [179, 161, 267, 340]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,126 app:97 detect [INFO]: 	person, 0.019999999552965164, [153, 138, 234, 267]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,126 app:97 detect [INFO]: 	person, 0.019999999552965164, [264, 92, 333, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,127 app:97 detect [INFO]: 	person, 0.019999999552965164, [362, 102, 415, 206]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,128 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 62, 327, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,129 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 126, 243, 197]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,130 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 205, 357]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,131 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 333, 364]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,132 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 101, 297, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,132 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 146, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:07,133 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 145, 176, 222]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:07] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:07] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:07] "POST /UpdateDetectedObjects/person/0.75/260/380/94/315/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:07] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:07] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:07] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,163 app:71 detect [INFO]: time: 0.06962132453918457
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,164 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,165 app:97 detect [INFO]: 	person, 0.7900000214576721, [260, 95, 377, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,165 app:97 detect [INFO]: 	person, 0.05999999865889549, [168, 106, 312, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,167 app:97 detect [INFO]: 	person, 0.05000000074505806, [2, 143, 60, 191]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,167 app:97 detect [INFO]: 	person, 0.05000000074505806, [267, 98, 346, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,168 app:97 detect [INFO]: 	person, 0.03999999910593033, [304, 103, 403, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,169 app:97 detect [INFO]: 	person, 0.029999999329447746, [-2, 147, 98, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,170 app:97 detect [INFO]: 	person, 0.029999999329447746, [-2, 153, 38, 202]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,171 app:97 detect [INFO]: 	person, 0.029999999329447746, [120, 147, 188, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,172 app:97 detect [INFO]: 	person, 0.029999999329447746, [153, 138, 236, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,173 app:97 detect [INFO]: 	person, 0.029999999329447746, [355, 109, 417, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,173 app:97 detect [INFO]: 	person, 0.029999999329447746, [132, 146, 176, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,174 app:97 detect [INFO]: 	person, 0.029999999329447746, [103, 119, 218, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,175 app:97 detect [INFO]: 	person, 0.029999999329447746, [295, 103, 350, 193]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,176 app:97 detect [INFO]: 	person, 0.019999999552965164, [89, 146, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,177 app:97 detect [INFO]: 	person, 0.019999999552965164, [1, 158, 55, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,178 app:97 detect [INFO]: 	person, 0.019999999552965164, [194, 138, 248, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,179 app:97 detect [INFO]: 	person, 0.019999999552965164, [38, 147, 116, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,179 app:97 detect [INFO]: 	person, 0.019999999552965164, [0, 144, 29, 179]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,180 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 154, 259, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,181 app:97 detect [INFO]: 	person, 0.019999999552965164, [113, 170, 194, 345]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,182 app:97 detect [INFO]: 	person, 0.019999999552965164, [128, 179, 182, 294]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,183 app:97 detect [INFO]: 	person, 0.019999999552965164, [330, 88, 409, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,184 app:97 detect [INFO]: 	person, 0.019999999552965164, [62, 156, 173, 350]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,184 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 66, 327, 249]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,186 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 169, 120, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,186 app:97 detect [INFO]: 	person, 0.019999999552965164, [182, 106, 261, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,187 app:97 detect [INFO]: 	person, 0.019999999552965164, [274, 106, 326, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:08,188 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 142, 145, 216]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:08] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:08] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:08] "POST /UpdateDetectedObjects/person/0.79/260/377/95/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:08] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:08] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:08] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,207 app:71 detect [INFO]: time: 0.06820034980773926
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,208 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,209 app:97 detect [INFO]: 	person, 0.7599999904632568, [264, 97, 373, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,211 app:97 detect [INFO]: 	person, 0.05999999865889549, [269, 100, 347, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,212 app:97 detect [INFO]: 	person, 0.03999999910593033, [205, 118, 331, 328]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,213 app:97 detect [INFO]: 	person, 0.03999999910593033, [312, 103, 405, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,214 app:97 detect [INFO]: 	person, 0.029999999329447746, [339, 120, 396, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,215 app:97 detect [INFO]: 	person, 0.029999999329447746, [357, 116, 417, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,216 app:97 detect [INFO]: 	person, 0.029999999329447746, [178, 127, 272, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,217 app:97 detect [INFO]: 	person, 0.019999999552965164, [296, 116, 353, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,218 app:97 detect [INFO]: 	person, 0.019999999552965164, [359, 99, 415, 207]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,219 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 139, 247, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,220 app:97 detect [INFO]: 	person, 0.019999999552965164, [221, 99, 317, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,221 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 154, 332, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,222 app:97 detect [INFO]: 	person, 0.019999999552965164, [138, 145, 241, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,223 app:97 detect [INFO]: 	person, 0.019999999552965164, [153, 138, 230, 266]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,223 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 179, 277, 398]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,225 app:97 detect [INFO]: 	person, 0.019999999552965164, [127, 150, 178, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,226 app:97 detect [INFO]: 	person, 0.019999999552965164, [114, 143, 197, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,227 app:97 detect [INFO]: 	person, 0.019999999552965164, [227, 76, 291, 191]
[33mInferencingEngine    |[0m 2022-03-16 01:59:09,228 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 124, 243, 195]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:09] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:09] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:09] "POST /UpdateDetectedObjects/person/0.76/264/373/97/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:09] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:09] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:09] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,231 app:71 detect [INFO]: time: 0.06595468521118164
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,232 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,233 app:97 detect [INFO]: 	person, 0.6899999976158142, [262, 97, 366, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,234 app:97 detect [INFO]: 	person, 0.09000000357627869, [316, 111, 404, 293]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,236 app:97 detect [INFO]: 	person, 0.07000000029802322, [282, 106, 354, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,237 app:97 detect [INFO]: 	person, 0.05000000074505806, [208, 112, 331, 330]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,238 app:97 detect [INFO]: 	person, 0.05000000074505806, [338, 122, 397, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,240 app:97 detect [INFO]: 	person, 0.029999999329447746, [362, 111, 415, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,241 app:97 detect [INFO]: 	person, 0.029999999329447746, [273, 103, 331, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,242 app:97 detect [INFO]: 	person, 0.029999999329447746, [181, 122, 269, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,244 app:97 detect [INFO]: 	person, 0.029999999329447746, [194, 137, 246, 229]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,245 app:97 detect [INFO]: 	person, 0.019999999552965164, [369, 88, 416, 166]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,246 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 103, 303, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,247 app:97 detect [INFO]: 	person, 0.019999999552965164, [270, 127, 330, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,248 app:97 detect [INFO]: 	person, 0.019999999552965164, [153, 136, 234, 266]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,250 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 119, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,251 app:97 detect [INFO]: 	person, 0.019999999552965164, [121, 145, 186, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,252 app:97 detect [INFO]: 	person, 0.019999999552965164, [140, 144, 242, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,253 app:97 detect [INFO]: 	person, 0.019999999552965164, [176, 178, 276, 398]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,255 app:97 detect [INFO]: 	person, 0.019999999552965164, [301, 96, 349, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:59:10,256 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 154, 175, 234]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:10] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:10] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:10] "POST /UpdateDetectedObjects/person/0.69/262/366/97/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:10] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:10] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:10] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,254 app:71 detect [INFO]: time: 0.06809091567993164
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,255 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,257 app:97 detect [INFO]: 	person, 0.6899999976158142, [263, 97, 367, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,258 app:97 detect [INFO]: 	person, 0.09000000357627869, [313, 111, 404, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,260 app:97 detect [INFO]: 	person, 0.07000000029802322, [282, 106, 354, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,261 app:97 detect [INFO]: 	person, 0.05999999865889549, [207, 114, 331, 327]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,262 app:97 detect [INFO]: 	person, 0.05000000074505806, [338, 124, 396, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,263 app:97 detect [INFO]: 	person, 0.03999999910593033, [266, 98, 335, 202]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,265 app:97 detect [INFO]: 	person, 0.029999999329447746, [354, 102, 416, 256]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,266 app:97 detect [INFO]: 	person, 0.029999999329447746, [178, 122, 271, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,267 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 135, 249, 230]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,269 app:97 detect [INFO]: 	person, 0.019999999552965164, [270, 127, 330, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,270 app:97 detect [INFO]: 	person, 0.019999999552965164, [371, 105, 416, 188]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,271 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 104, 304, 218]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,272 app:97 detect [INFO]: 	person, 0.019999999552965164, [155, 155, 227, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,274 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 177, 277, 396]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,275 app:97 detect [INFO]: 	person, 0.019999999552965164, [202, 123, 244, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:11,276 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 145, 186, 262]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "POST /UpdateDetectedObjects/person/0.69/263/367/97/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:11] "GET /GetVideoURL HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,267 app:71 detect [INFO]: time: 0.06774497032165527
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,268 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,268 app:97 detect [INFO]: 	person, 0.7200000286102295, [263, 98, 368, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,269 app:97 detect [INFO]: 	person, 0.09000000357627869, [308, 111, 404, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,269 app:97 detect [INFO]: 	person, 0.07000000029802322, [283, 106, 354, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,269 app:97 detect [INFO]: 	person, 0.05999999865889549, [207, 114, 330, 330]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,270 app:97 detect [INFO]: 	person, 0.03999999910593033, [338, 123, 395, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,270 app:97 detect [INFO]: 	person, 0.03999999910593033, [265, 97, 335, 202]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,271 app:97 detect [INFO]: 	person, 0.029999999329447746, [356, 108, 415, 280]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,272 app:97 detect [INFO]: 	person, 0.029999999329447746, [176, 123, 272, 293]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,273 app:97 detect [INFO]: 	person, 0.029999999329447746, [196, 136, 248, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,273 app:97 detect [INFO]: 	person, 0.019999999552965164, [226, 110, 316, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,274 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 146, 186, 258]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,274 app:97 detect [INFO]: 	person, 0.019999999552965164, [374, 117, 416, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,274 app:97 detect [INFO]: 	person, 0.019999999552965164, [146, 142, 234, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,275 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 153, 332, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,276 app:97 detect [INFO]: 	person, 0.019999999552965164, [227, 83, 294, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,276 app:97 detect [INFO]: 	person, 0.019999999552965164, [369, 88, 416, 167]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,277 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 149, 204, 356]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,278 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 179, 276, 398]
[33mInferencingEngine    |[0m 2022-03-16 01:59:12,278 app:97 detect [INFO]: 	person, 0.019999999552965164, [301, 95, 349, 165]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:12] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:12] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:12] "POST /UpdateDetectedObjects/person/0.72/263/368/98/312/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:12] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:12] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:12] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,286 app:71 detect [INFO]: time: 0.06581830978393555
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,287 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,288 app:97 detect [INFO]: 	person, 0.6499999761581421, [262, 97, 369, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,289 app:97 detect [INFO]: 	person, 0.07999999821186066, [306, 109, 403, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,290 app:97 detect [INFO]: 	person, 0.07000000029802322, [283, 104, 355, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,291 app:97 detect [INFO]: 	person, 0.05999999865889549, [208, 113, 330, 333]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,292 app:97 detect [INFO]: 	person, 0.03999999910593033, [352, 108, 417, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,293 app:97 detect [INFO]: 	person, 0.03999999910593033, [336, 124, 394, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,294 app:97 detect [INFO]: 	person, 0.029999999329447746, [273, 104, 330, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,295 app:97 detect [INFO]: 	person, 0.029999999329447746, [174, 98, 292, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,296 app:97 detect [INFO]: 	person, 0.029999999329447746, [358, 99, 415, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,297 app:97 detect [INFO]: 	person, 0.029999999329447746, [194, 136, 247, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,298 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 104, 303, 217]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,298 app:97 detect [INFO]: 	person, 0.019999999552965164, [339, 149, 399, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,300 app:97 detect [INFO]: 	person, 0.019999999552965164, [259, 152, 332, 370]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,301 app:97 detect [INFO]: 	person, 0.019999999552965164, [116, 145, 186, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,302 app:97 detect [INFO]: 	person, 0.019999999552965164, [153, 136, 231, 267]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,303 app:97 detect [INFO]: 	person, 0.019999999552965164, [302, 95, 350, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,304 app:97 detect [INFO]: 	person, 0.019999999552965164, [182, 165, 266, 346]
[33mInferencingEngine    |[0m 2022-03-16 01:59:13,305 app:97 detect [INFO]: 	person, 0.019999999552965164, [234, 111, 282, 188]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:13] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:13] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:13] "POST /UpdateDetectedObjects/person/0.65/262/369/97/312/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:13] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:13] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:13] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "GET /DoVideoEncryption HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "POST /SendVideoSection/1/1 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,667 app:71 detect [INFO]: time: 0.06588053703308105
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,667 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,671 app:97 detect [INFO]: 	person, 0.7300000190734863, [264, 96, 367, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,672 app:97 detect [INFO]: 	person, 0.07999999821186066, [304, 107, 402, 298]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,673 app:97 detect [INFO]: 	person, 0.07000000029802322, [284, 104, 355, 237]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,673 app:97 detect [INFO]: 	person, 0.05000000074505806, [206, 114, 331, 328]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,674 app:97 detect [INFO]: 	person, 0.03999999910593033, [354, 108, 416, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,675 app:97 detect [INFO]: 	person, 0.029999999329447746, [339, 122, 395, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,675 app:97 detect [INFO]: 	person, 0.029999999329447746, [266, 96, 335, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,676 app:97 detect [INFO]: 	person, 0.029999999329447746, [178, 123, 270, 283]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,676 app:97 detect [INFO]: 	person, 0.029999999329447746, [118, 146, 185, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,677 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 168, 120, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,678 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 136, 248, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,678 app:97 detect [INFO]: 	person, 0.019999999552965164, [361, 102, 415, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,679 app:97 detect [INFO]: 	person, 0.019999999552965164, [154, 158, 226, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,679 app:97 detect [INFO]: 	person, 0.019999999552965164, [259, 153, 333, 367]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,680 app:97 detect [INFO]: 	person, 0.019999999552965164, [131, 146, 176, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,680 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 102, 301, 219]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,681 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 205, 354]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,681 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 123, 243, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:14,682 app:97 detect [INFO]: 	person, 0.019999999552965164, [302, 95, 350, 165]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "POST /UpdateDetectedObjects/person/0.73/264/367/96/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "GET /CreateVideoSceneDataID/10/1920/1080 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:14] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,803 app:71 detect [INFO]: time: 0.0682837963104248
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,804 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,805 app:97 detect [INFO]: 	person, 0.7099999785423279, [263, 97, 368, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,806 app:97 detect [INFO]: 	person, 0.09000000357627869, [305, 109, 403, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,806 app:97 detect [INFO]: 	person, 0.05999999865889549, [285, 106, 356, 240]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,808 app:97 detect [INFO]: 	person, 0.05000000074505806, [206, 113, 331, 329]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,809 app:97 detect [INFO]: 	person, 0.03999999910593033, [353, 102, 415, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,809 app:97 detect [INFO]: 	person, 0.03999999910593033, [339, 119, 399, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,810 app:97 detect [INFO]: 	person, 0.029999999329447746, [265, 96, 334, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,811 app:97 detect [INFO]: 	person, 0.029999999329447746, [174, 125, 270, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,812 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 146, 186, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,813 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 152, 333, 368]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,814 app:97 detect [INFO]: 	person, 0.019999999552965164, [371, 106, 415, 190]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,815 app:97 detect [INFO]: 	person, 0.019999999552965164, [221, 76, 307, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,816 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 137, 247, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,817 app:97 detect [INFO]: 	person, 0.019999999552965164, [154, 157, 227, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,818 app:97 detect [INFO]: 	person, 0.019999999552965164, [204, 125, 243, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:15,819 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 205, 356]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:15] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:15] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:15] "POST /UpdateDetectedObjects/person/0.71/263/368/97/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:15] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:15] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:15] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,871 app:71 detect [INFO]: time: 0.06754398345947266
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,871 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,872 app:97 detect [INFO]: 	person, 0.6600000262260437, [259, 95, 383, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,872 app:97 detect [INFO]: 	person, 0.07999999821186066, [280, 97, 363, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,872 app:97 detect [INFO]: 	person, 0.05000000074505806, [168, 105, 320, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,873 app:97 detect [INFO]: 	person, 0.03999999910593033, [324, 122, 402, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,873 app:97 detect [INFO]: 	person, 0.029999999329447746, [296, 102, 352, 193]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,873 app:97 detect [INFO]: 	person, 0.029999999329447746, [352, 100, 417, 291]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,874 app:97 detect [INFO]: 	person, 0.029999999329447746, [181, 167, 271, 339]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,874 app:97 detect [INFO]: 	person, 0.029999999329447746, [275, 104, 327, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,874 app:97 detect [INFO]: 	person, 0.019999999552965164, [342, 127, 390, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,874 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 66, 329, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,875 app:97 detect [INFO]: 	person, 0.019999999552965164, [146, 142, 234, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,875 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 145, 186, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,875 app:97 detect [INFO]: 	person, 0.019999999552965164, [208, 168, 313, 372]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,876 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 102, 299, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,876 app:97 detect [INFO]: 	person, 0.019999999552965164, [257, 164, 333, 363]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,876 app:97 detect [INFO]: 	person, 0.019999999552965164, [366, 87, 415, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,877 app:97 detect [INFO]: 	person, 0.019999999552965164, [198, 120, 247, 207]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,877 app:97 detect [INFO]: 	person, 0.019999999552965164, [374, 119, 416, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,877 app:97 detect [INFO]: 	person, 0.019999999552965164, [187, 138, 255, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,877 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 148, 203, 358]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,878 app:97 detect [INFO]: 	person, 0.019999999552965164, [131, 154, 176, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,878 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 167, 119, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,878 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 180, 252, 303]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,879 app:97 detect [INFO]: 	person, 0.019999999552965164, [232, 183, 292, 302]
[33mInferencingEngine    |[0m 2022-03-16 01:59:16,879 app:97 detect [INFO]: 	person, 0.019999999552965164, [336, 183, 400, 305]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:16] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:16] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.S6pKiSnVlXryUBVJAIqYfEoYKILsrFfJD54z4vCahs9qs3T4wwKMkJHInpSbOjG0T8JMHYglf2K5J1oP_jse9t7l2qFmu0jV94pfqU9h-cikRTlITzsD93zVHqA400u_pQ62L73Pgq-4iB72UCRwRepX1B102PT4PS1cWYCr_6sYlgUELqfJHjuipvv4bTt8tFxyk4ecIYNLv2g0ZGrx7tKjesb8IVSwEglAf9l7tosBGkBDCA_BuTB897mwa0N1nGzyCvKa_FmTexQ4l5ZGJXCsWA0MT2sUDocKSG_78q4ON8xECM5PdAXdcK7ow5xECsSq8_c-y-wfq1egWPwlhKTp-fLXx-T16ghjyqxXgyM-DJVFSEGEaWa9GDQk_BEAoHROj4dwvvXJL-L7mcGITyCvuYyI8PCb72b8mp-vZbdT5xEHUgeUM5vuNgIZ1XtjMTdPAEuptt2N2zkP5OjAAWgkfRSuFdXRnuL-Cx8TNo0K8JlrN4vah1VGh6J88alp.u-5K2IKW2IVn6ncl.vZxwEPhFwkbVq-gaEvBoNlrBE9bzavqNfCt1mXfdfmAmAIple6j-l0DWlmTt4F-CcJCDXs_yu6_I26CkFZvrzreAALzLqoike8gDtijGwcA4s_Sn8VcR_OWuEaRH-Jjrmg3MdMnKHy40-eeuFb36yJmrTP57TyOfaR5G8uTveX4n0edhiGu7un6ZvZQaVWsV-tpKczva_RZst1qNj3xKrfgrXg2tBMtZTTzAxY6jV9sn3LqoTpf15s_JH-7-yBMMdP6iCDB_fVp4eU1kZP6vjjQLzaoi5UBOHPzNSqTqNIvr_zvFztoBnGraV-HXblw2h43q21euocqznQs6urhtMivVTP8bKP9Lh5pc8RfW8fvd8uZ-hQARKBkbD9WhV2Njwlg7hQ67Q9ntcGvBkB25Dtd3vZYIr3iJgd_N8o365xjqgcGnPU-Xvn1sUE4RiHtbCDz3TGHv7LxmjpkDZjvlNPZrDnFyfIDR9G0f5O0bdjyq43rAS7UQkaDo5W3dXLxF8goizwX9Vi6qVRsqk-Tlkmm2BMwbg-QGDw8jTN9Bsja8ZzTG-Dp_X0HvGK5sPEOwIDopSOo-ip9s14BS2a7JfZUfavXefkGKSrxIqlCPFv9kCfnkT5-dVAE-7TbeyjYyo9heXwseWhD6gj4jAVKnNUHOttbecnfD3yPZm2i0LoOQZnw7p7Hnw6duFir5ALP1t0zn2mMR8bozzRHvY5GC2T-WusOG9g8ulHNeYohBHJVIYBt2UbWmveMVXfRmjbWN5pLg8gSC0ywpEt54mknKY3NfSUbDBmyhh47dzl4TR0zNGC__MvEI8N7KlII4ExvAFppnd8zgtJwx79YeNgoIz6CTE66M5PsmoDt2-YEW_kzFTmTbs2ts-hh60SVdMEQhRJ03whkZ221pu29GthynXCbpuwdun7IK0k305eMedw0yMUikfintJ30fvo33l2C6jJFG7vFQz3HX1eKABkYHl_W2G3nPJ4i6eQaFFFvj49ZBUzPUkdmV-NMXvyPbpEDYPMxrmdp67zbUuLDBLBjuEFMWViJD_4uIb5CeHoIpbUq7JqF4ISXzU0w2Z4JPp4MoFB2mx7usnKWOQXczNydzj53qKFcxuv5MQdeiAxSHnCmTdviCASX_8Rv_14v1nJXkc69M0qKJbBWUEZYM8KuUP1AR6JP6yJBT70Z7ULXTRxVYrmpQwUxvBMm7V6TByQKZocnXilyfY1vWLdfV7obuj-bKhkdw9hacS5MpgcJS3I_NTSn_-RqusvTd5al4jvjwQ4ePSojJIm75heu4lYe0ZWaR-MsNVj-Ow7Se1kqxDOSCmOAPE1VmUkGLzKYWWMN_aPBDyRN6npRejEtrr1MkBQFy4_RjSdPkfV1tAhv-es88rstzf-r1aei9zoT6RFB30tTbQ6z8aKEAFoOEzzBzUgK-unV9PfhsMYT3copM9KUSy_t8Th-LMP9FqU1aBuKmEshgimJ9s-6VtkosBpOpKvBOSRx8rK3zr1xm2x2LvHso7poSDRq74hnf7PNH3m3S9-RYzYRseY9PnJgrCl5R4sz3bcntYgC1yQQpzRHWm1Yur4nfIFw5vk4NPZpBfa7wFzDi1dovViJAipxG01hZVaTmkJwrfmNdI3s0St9cczTS3vDW2HhEHfWnN0LbU8uL5iVFw378nhyG0AIhan_kP97vMzXEqz0wFcu7VXIDSYuCYVTBUFQF8iJQT5GLb2l1sT8R9ckZOWE1Bj7y6nK29jrtwmgTihIiIvCdYZRE4-knuy7WRWf5uWP_C6wN60jVo0h-XoU7NS5ovYBIg2GmP1BnANnVFVbuq2jlUj3QSnR_G6AZtRz-zu6VmzzaIOgff7Jm-2GFROEaP7ioyidaQTjSlqIL7GLYDYP1chnPj1ipTQ8XUngQ6r0hZHpnrSnCrDBqZdqyZsWQedZmP3_Xx33Xk1BHfgvnenhopNwTloknjzhUWxBE0bnYeukzC3-nOvqCRGkTzQ79wvTIRxRfMYDxWOn_JMxZO-wDG8WIxbWECrULIhxXUamT1xArTk29nkYizoZaqEJGYIIJHvf8cwLpPrWG0G5zQvewp0kbI9CoHhze24UAxitorX_DGOwjixtnHTDZUkPAZn0VBMAwW6o1Bfx2Y5aPB5adn1UnK38KbnlWJFEkBjHjeEX0Y84GVwA5urYkZVqU-TnnwZaRWvXLzYjXFxiFdQGnJJWAQ9DQqogeBE-EiHirO7Rg-S1BDVRbTWmndPsjXRmZ3-STnBPy_R2hDWOlSV9LKnQ51eVdcK9R3aExa5oy8WVt5sOgLqefxwe_U4A9B3msDdGnrjuIgECQxdMPxl9AeNglLrJNQ3qDpjsOqyCbg0uIMfFxYZrV0I8ZLy7UGknyh42-3l1nroWcYmJjdKiy4CoPvTt2QC7jYg_viqJd1cHRJjmQ60j3rTflQiidBMjWVP-J4wbaQCSBXontKVO1aQf44TBcKPwxlHOYFAKHi6Nu0zqKIhLQyeE0R4Yu0JCs88M8VxpB666Y9HsO6BNIHlKuTRJ8lnRg8VnWzojn7CV0vfD1_Py24rEfPkTLib2LYh1-ErgtwGESTpm02rVJhYsYinMfMQQedv8yUghR_b-M0G2WycaJLD6eb0FIiHpYhlKw7OIGzOfsazxeKVl4Wz1OapylYSvm554NXBAZVXjwadQs9pjSZYgbMV9dw7GGx6g9hWpjKwsqs60R-GHDfCc2XIopFu34fU4mCQEe-2pxnMb8H6cZwrqjg5bzC6qG7hVS1q6e76CNKgkUR8_uoQIz_JfJtyQXsuX5i2toLIJT2qtfUFbLtcxzOtrNCpCcDn2293K5nh68ssJVXYEyf3wHu0i-Tu7u-YSZgL5rXxL5s-wI8OfnQSkNuiFYsi1VylqNNzQVym6wyYI2Zg5gmZfNn6jgBhYgmeMPSyZFnhi6zkhyxUlQ974zc0A8Z922-cy9Rw_CN4yoD1XVUBG7o1ss_OjuRoPXv4ozSiJFyiMzFCnas3Q-86qPhsNlutoyJGhXltAOLP9sFeMnuql82EFqM4YpHk1isVdyhBFaxYYjp1Reb_SNMK6_16k5PaVdmXSt_QI6FmkVutyka8aa6Q0lwLv7kPBrMElgIRuNycFtGHPCxWd2KJ5CYfuvVJQXlX1ojaGa5S8oNYGlW7MDgPZilz14_fEquywZDFvBMQQTQ9iVTASVSaRqqzp9rbe2LBR_pxTSV8liGQyIkO2dtzce4NMjUAwlMOMSluBI47ZpbUKkaT49r-eUGzEZKHu992gJFdEOzgjzTt-yc6wglbNzRun9N4uBN1q8sbESivfvQuLUU2z377aGkaeuEJZm3I1vDf-CbjzD6x0Vs7L4hsPL9txECezyRWUzsOVVFkSOV_8XckCgsYesiuM97SFFfJTA-TB6ynhCkGVr5kFQGHwYD3C53N31W7OZRBK8ChcO8lEnT127feMlRWMyKkbinw--VbE5EnuDKF1dIazzYVzmgFJHxNkFHDsjrGCaGF6rAsx4VxJPE0IY2jU_Ble1mhIJIpq6aDF9GT-rAp7lJBBP6fImnvhvGX5gDKIXEka5vShQDzby0_TO-Schmm1DTDHvXLSPKIAMztb8h31aUuDlR-q6lQqQgsI9wNbt--On63no71NZpYpHF_xNdjDXFVSE5FdsUllV3VeUYUtEqvzEByZkjaGWT352AGH3K5FL-f5Jsj1LgEPZg884Anpl-UGiA-rosUkll6rw38flKF0cmOAbuQh_2H6dwwcZbcUIWpAGBu1zejnE3H9bd5uKmXzVW42u3b30unKJncjfP6OeKMs1axKMfgEGLf-ztm9m7BpFiCvOX0i1qX__jP-2Bs-j_vK0pqnLh0QeyMkiADcnIlNdoOu_Sz6l32m6ZcxLjweuYgENuxuZVwEsre1KeHGc0c6SBsX1dwj7BQ5a8S9kHQFjsODTpPn_hUUNA5yzWy8CSNPBv-sMHGFDdqZeiMzZqdxSAgDghrkp57JniM637SNq13G0xZdmAvdzo_zu8Apt1KjOWB5k-3NQ6WrCbWmZyshnQhOdlL1jFYe3Jr8bLuLSAo5bIaddD0WY1BEkhKkxK94UVY9VB72lDFySmtnxsy4La112Ktqh5x6dhvu1LHIyaN4ZLYH3WpphjPylVZqRyAHFgH06Q3khMQnXTeJy3t41QgFzKBAY0D675gQ3vpX7acMqas5jjZGaO51UKcsHelKSP2tn4IfruxcxZzEJGlekWWHJZP8p634D1J7YMXMnG5OaaEji4lQUV8JmKoc1hzVKtBiXkFhMDnCv0dRBpybUYzGfeAyI_Ypf3bsuOX_316R_a5QzxEatMxDB_tDfYLY31gIIbzQ9WK-ylT4NgeISdJpN3Xg7pXKezV27FZD3oVdaja6XM6nfPQq52ab_jWVmwtg-TyttBDDAS2WcrOWuWb4ZAK7duy0svTQArIe66Ae8k8diFbUwDO8l1rWDD_DtJOBlJXru6cSY8WDMeGWCQZ8h4gcT9Jx0Q-N4VP54rqZJjvLSk6oTe3gmkSm5HzqJTATJuHcVZQPqVJ0eiqd-P1_WbPqXrMCoQh9sSrbicwjPQJW20LFqhHRuon5ICtFlzqOysLanJfTfkI00VO0DzB8UNbN7UatmIJvJSibRJ6iDFRBU5uLzK8PESc8QrrNYTYJKGEhsSnObvWTPt5qcmnXSkQLz-AFUIP9wEa4nzmbu4avoiCSvHM9kPNXcca3A6gxyxbP-tfzFdgLwvOwdhYdnhcXtLiyL25XIRTuKiCOBi35rIigfk8NA5cKJnb2-DJDjlmONxNtojS1Ob-z0q_fZDvvqFNS6cGraH9mWNolOgbEtydY9yJk868BqlcWHAqgYGwHoOvHGZ5g0BWzdCfu66Z0ZhOMeWM5GwRYalzF3gQ8AjiXTwzzaW7hAvIad_eVcqxTWYxUB6aEbz4n4M-L9peMFBD6bR9ZulFFFFf7s44pkd8OyMDMJUBlPb0K5pgSisX-hEnZlUq2ni29zCrT_jaaqkHTeEuCEZbg70RcRFx7mVVZX2gzvG0AxczbAD8fnbH28zd9qC7oy8gH9golevje0BaVBX2_Xw_CdOm0w8B2en3hj0Et-M8pnzViid6p3VoGdVnIv6cZBmk7DlRoN8Q_dBmhYBYYW2N2iYrl_gJxcDZhNaN8RQ1Dhd486EsWWIHwYkF7dtjurGBSP8ZjeYqpUqiwRXOfxycloYEsArsKYXoW6NBJr5vgxdvYZ7pDgpD-pJP1TVB2Yd70Q3E98PGvktS3b-VWtvcmyDuCucOZ6q_zAreAqodTFjCNsLi-TpbMqiu4INDmpZDeRxdMSCh3_KR-QIFuURKNXCBFWrr2P8zzXOX7Egm5SZo4LhRg4rJiY6NX2yHck4U74_o8vmy_SGfmqEWJlIpLFR-2lsgwsNbHgmrMDPu_Ayj0eBTmzvF7x4WxsntolS18vl_P_Pm7goVGIMkTk_aRHbN0g1fQNlYC3T1agbfp5GX431o-QvxKvlYQOwPoNemvs7zMZ2dXyWMvcjopbj136_chgUZ1iYBx0gpGvhn6EdIX-fIWRWrHyQ3YVsDQOIKt7sVhmDg71pzxZvI9C8zXv38Zv-4Zs9bzVwWmcyzlRyeITP3eSG_gYaICDuRiUkW4BrrcgzcsrIjMWlUS-7NGmiNmFTHkkGJRwrSrLTZ1C3sq8CclXz8QE7Zm_RtO9qFH2NMgt-txDjlh-rjPXj4UMD5CwnCk6HU7UfiEtPu4TnNUBKvseYCrdIXtiR-qY5sb-_R_oECid-StkGLXD4-4zuWvv5pdpg0mjueY3WqyblCElnykJqI0DyaUBe4Wlacb9QWUK_8udcXBMdgk_PD2--UnaLiJ8QBCqYnl27NqFipzPIe99YzcKZyBdbTgeC_M4DW_NlPxYMmmF564vMhl_jL2b0H0yQt92n_CF7LDp9g4-JC-AMGNP9emvLG2YQnOWIGhPHaLDL223dCHA7ddpQxZRifrODGs8FhRQErB1aBU-INttgDPo7TAq47CJ8tGUbG-8RYNHaF52a_trcY9h7pfWCS0CPxhGQJ20U_BUOMtlkfZA6hGPzImzCJSVmeRFohXR198ln7rqo__yxVJJkKzlCZKKuQCLmUoPGbwYMHElQ-22ojXOXFaDtQWOpSC2rFw7lxvL7V6YWf-AX4UDHXQMzXNl8JTA2OwUJmF9LJmaZET0X78ZCZPkPbl2lfO1u6RDp3b6vhmnI1_BfWVAu8vakkrc7pI4ONaUxRFiUe0NK3rXDPWqotmE0WbtyIbBWfkidF7VSUGlZjAeLmw6HVjXF9TPlJAb9FeGKFDZYf7fAyuIpmIgCbZTlet5oVeeoSVeB4eBnDPVkKGoxj2GgA.GOoX2zTsgPZ79qj-Osi0lg
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:16] "POST /UpdateDetectedObjects/person/0.66/259/383/95/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:16] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:16] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:16] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 
[35mSceneraLibrary       |[0m 01:59:04 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4590>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:04 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b8b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:05 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933ce10>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:05 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7789170>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:05 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81817d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:10 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81912f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:10 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813fb70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:10 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b470>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:12 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f170>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:12 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b250>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:12 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814bd70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:13 : Exception in SendSceneDataToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b970>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:14 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e43f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:14 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933cc50>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:14 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7789030>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:15 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4910>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:15 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7789130>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:15 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4e90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:16 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1b90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:16 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77891b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:16 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933ca70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m Exception in SceneMode.py -> GetSceneMode : Expecting value: line 1 column 1 (char 0)
[35mSceneraLibrary       |[0m 01:59:16 : Exception in Scenera_DeviceSecurityObject -> GetNICELAEndPoint :'NoneType' object has no attribute 'NetEndPoint'
[35mSceneraLibrary       |[0m 01:59:16 : Exception in SceneraBridgeLib -> GetSceneModeThread -> Issue with NICE LA:local variable 'EndPointID' referenced before assignment
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,875 app:71 detect [INFO]: time: 0.06572580337524414
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,876 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,876 app:97 detect [INFO]: 	person, 0.6899999976158142, [264, 95, 373, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,877 app:97 detect [INFO]: 	person, 0.05999999865889549, [268, 96, 348, 231]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,878 app:97 detect [INFO]: 	person, 0.05000000074505806, [305, 103, 404, 284]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,879 app:97 detect [INFO]: 	person, 0.03999999910593033, [205, 117, 330, 329]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,880 app:97 detect [INFO]: 	person, 0.03999999910593033, [353, 102, 415, 292]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,880 app:97 detect [INFO]: 	person, 0.029999999329447746, [337, 120, 396, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,881 app:97 detect [INFO]: 	person, 0.029999999329447746, [175, 124, 270, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,882 app:97 detect [INFO]: 	person, 0.019999999552965164, [297, 116, 354, 212]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,883 app:97 detect [INFO]: 	person, 0.019999999552965164, [221, 75, 307, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,884 app:97 detect [INFO]: 	person, 0.019999999552965164, [374, 117, 415, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,884 app:97 detect [INFO]: 	person, 0.019999999552965164, [119, 145, 188, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,885 app:97 detect [INFO]: 	person, 0.019999999552965164, [338, 152, 399, 281]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,886 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 135, 249, 227]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,887 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 179, 277, 399]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,887 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 140, 235, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,888 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 94, 350, 166]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,889 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 122, 244, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,890 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 156, 333, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:17,890 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 155, 176, 237]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:17] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 01:59:17 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4090>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:59:17] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:17] "POST /UpdateDetectedObjects/person/0.69/264/373/95/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:17] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:17] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:17] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,887 app:71 detect [INFO]: time: 0.06586337089538574
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,887 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,888 app:97 detect [INFO]: 	person, 0.7099999785423279, [260, 94, 375, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,889 app:97 detect [INFO]: 	person, 0.05000000074505806, [268, 97, 346, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,890 app:97 detect [INFO]: 	person, 0.05000000074505806, [171, 101, 314, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,891 app:97 detect [INFO]: 	person, 0.05000000074505806, [308, 102, 404, 283]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,892 app:97 detect [INFO]: 	person, 0.029999999329447746, [354, 107, 417, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,894 app:97 detect [INFO]: 	person, 0.029999999329447746, [338, 119, 394, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,895 app:97 detect [INFO]: 	person, 0.029999999329447746, [294, 103, 350, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,896 app:97 detect [INFO]: 	person, 0.019999999552965164, [202, 142, 243, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,897 app:97 detect [INFO]: 	person, 0.019999999552965164, [187, 138, 253, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,898 app:97 detect [INFO]: 	person, 0.019999999552965164, [360, 101, 415, 209]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,899 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 139, 236, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,900 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 145, 187, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,901 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 105, 327, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,902 app:97 detect [INFO]: 	person, 0.019999999552965164, [180, 161, 268, 339]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,903 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 156, 332, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,904 app:97 detect [INFO]: 	person, 0.019999999552965164, [212, 67, 327, 251]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,906 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 147, 204, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,907 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 102, 298, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:59:18,907 app:97 detect [INFO]: 	person, 0.019999999552965164, [93, 144, 158, 259]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:18] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:18] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:18] "POST /UpdateDetectedObjects/person/0.71/260/375/94/315/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:18] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:18] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:18] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,918 app:71 detect [INFO]: time: 0.06586647033691406
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,918 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,919 app:97 detect [INFO]: 	person, 0.7099999785423279, [263, 92, 380, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,920 app:97 detect [INFO]: 	person, 0.05000000074505806, [287, 104, 359, 234]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,921 app:97 detect [INFO]: 	person, 0.05000000074505806, [218, 106, 342, 301]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,922 app:97 detect [INFO]: 	person, 0.03999999910593033, [323, 122, 398, 269]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,923 app:97 detect [INFO]: 	person, 0.03999999910593033, [341, 87, 418, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,923 app:97 detect [INFO]: 	person, 0.029999999329447746, [168, 116, 295, 318]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,924 app:97 detect [INFO]: 	person, 0.029999999329447746, [206, 145, 244, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,924 app:97 detect [INFO]: 	person, 0.029999999329447746, [193, 137, 252, 244]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,924 app:97 detect [INFO]: 	person, 0.029999999329447746, [343, 127, 389, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,924 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 105, 324, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,924 app:97 detect [INFO]: 	person, 0.019999999552965164, [120, 145, 186, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,925 app:97 detect [INFO]: 	person, 0.019999999552965164, [154, 138, 233, 269]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,926 app:97 detect [INFO]: 	person, 0.019999999552965164, [366, 119, 415, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,927 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 104, 295, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,928 app:97 detect [INFO]: 	person, 0.019999999552965164, [186, 155, 258, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,929 app:97 detect [INFO]: 	person, 0.019999999552965164, [303, 94, 350, 166]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,931 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 333, 364]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,932 app:97 detect [INFO]: 	person, 0.019999999552965164, [107, 117, 214, 299]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,933 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 168, 120, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,933 app:97 detect [INFO]: 	person, 0.019999999552965164, [133, 145, 176, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,934 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 177, 276, 394]
[33mInferencingEngine    |[0m 2022-03-16 01:59:19,935 app:97 detect [INFO]: 	person, 0.019999999552965164, [335, 178, 398, 305]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:19] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:19] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:19] "POST /UpdateDetectedObjects/person/0.71/263/380/92/313/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:19] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:20] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:20] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,931 app:71 detect [INFO]: time: 0.06572461128234863
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,931 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,931 app:97 detect [INFO]: 	person, 0.75, [260, 94, 384, 319]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,935 app:97 detect [INFO]: 	person, 0.05000000074505806, [281, 97, 363, 240]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,936 app:97 detect [INFO]: 	person, 0.03999999910593033, [202, 119, 330, 329]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,937 app:97 detect [INFO]: 	person, 0.03999999910593033, [325, 123, 398, 269]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,937 app:97 detect [INFO]: 	person, 0.03999999910593033, [342, 89, 418, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,938 app:97 detect [INFO]: 	person, 0.029999999329447746, [299, 102, 353, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,938 app:97 detect [INFO]: 	person, 0.029999999329447746, [343, 127, 391, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,939 app:97 detect [INFO]: 	person, 0.029999999329447746, [176, 127, 271, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,939 app:97 detect [INFO]: 	person, 0.019999999552965164, [366, 120, 415, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,940 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 57, 325, 245]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,940 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 91, 333, 203]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,940 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 138, 247, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,941 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 333, 364]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,941 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 143, 186, 262]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,942 app:97 detect [INFO]: 	person, 0.019999999552965164, [371, 108, 415, 189]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,942 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 179, 277, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,943 app:97 detect [INFO]: 	person, 0.019999999552965164, [153, 138, 231, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,943 app:97 detect [INFO]: 	person, 0.019999999552965164, [138, 144, 242, 351]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,943 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,943 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 123, 243, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:20,944 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 101, 296, 222]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:20] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:20] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:20] "POST /UpdateDetectedObjects/person/0.75/260/384/94/319/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:20] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:21] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:21] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:21] "GET /GetVideoURL HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,048 app:71 detect [INFO]: time: 0.0659172534942627
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,049 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,049 app:97 detect [INFO]: 	person, 0.7300000190734863, [261, 92, 381, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,050 app:97 detect [INFO]: 	person, 0.05000000074505806, [282, 96, 363, 241]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,050 app:97 detect [INFO]: 	person, 0.05000000074505806, [168, 104, 310, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,051 app:97 detect [INFO]: 	person, 0.03999999910593033, [325, 123, 398, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,051 app:97 detect [INFO]: 	person, 0.03999999910593033, [343, 87, 417, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,051 app:97 detect [INFO]: 	person, 0.029999999329447746, [299, 102, 353, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,052 app:97 detect [INFO]: 	person, 0.029999999329447746, [341, 127, 390, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,052 app:97 detect [INFO]: 	person, 0.019999999552965164, [366, 119, 415, 264]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,053 app:97 detect [INFO]: 	person, 0.019999999552965164, [183, 139, 253, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,054 app:97 detect [INFO]: 	person, 0.019999999552965164, [148, 139, 237, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,054 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 105, 324, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,055 app:97 detect [INFO]: 	person, 0.019999999552965164, [179, 160, 267, 337]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,056 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 158, 332, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,056 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,057 app:97 detect [INFO]: 	person, 0.019999999552965164, [120, 146, 187, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,058 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 56, 324, 245]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,059 app:97 detect [INFO]: 	person, 0.019999999552965164, [132, 154, 176, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,059 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 149, 206, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,060 app:97 detect [INFO]: 	person, 0.019999999552965164, [200, 149, 244, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:59:22,061 app:97 detect [INFO]: 	person, 0.019999999552965164, [372, 106, 415, 186]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:22] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:22] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:22] "POST /UpdateDetectedObjects/person/0.73/261/381/92/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:22] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:22] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:22] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,156 app:71 detect [INFO]: time: 0.06570219993591309
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,157 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,157 app:97 detect [INFO]: 	person, 0.699999988079071, [260, 95, 380, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,158 app:97 detect [INFO]: 	person, 0.07999999821186066, [280, 97, 363, 236]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,159 app:97 detect [INFO]: 	person, 0.05000000074505806, [168, 100, 315, 309]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,160 app:97 detect [INFO]: 	person, 0.03999999910593033, [325, 123, 399, 270]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,160 app:97 detect [INFO]: 	person, 0.03999999910593033, [344, 89, 418, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,161 app:97 detect [INFO]: 	person, 0.029999999329447746, [297, 102, 352, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,162 app:97 detect [INFO]: 	person, 0.029999999329447746, [363, 110, 414, 233]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,163 app:97 detect [INFO]: 	person, 0.029999999329447746, [342, 127, 390, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,163 app:97 detect [INFO]: 	person, 0.019999999552965164, [275, 105, 326, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,164 app:97 detect [INFO]: 	person, 0.019999999552965164, [185, 138, 254, 266]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,164 app:97 detect [INFO]: 	person, 0.019999999552965164, [119, 145, 187, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,165 app:97 detect [INFO]: 	person, 0.019999999552965164, [179, 164, 269, 338]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,165 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 158, 333, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,166 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 140, 236, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,166 app:97 detect [INFO]: 	person, 0.019999999552965164, [202, 141, 244, 212]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,167 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 148, 204, 359]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,167 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 101, 298, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,168 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 64, 326, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:59:23,168 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 120, 215]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:23] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:23] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:23] "POST /UpdateDetectedObjects/person/0.7/260/380/95/315/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:23] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:23] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:23] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,267 app:71 detect [INFO]: time: 0.06582760810852051
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,268 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,268 app:97 detect [INFO]: 	person, 0.7099999785423279, [258, 93, 383, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,269 app:97 detect [INFO]: 	person, 0.05000000074505806, [281, 97, 364, 240]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,270 app:97 detect [INFO]: 	person, 0.05000000074505806, [168, 97, 319, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,270 app:97 detect [INFO]: 	person, 0.029999999329447746, [341, 87, 418, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,271 app:97 detect [INFO]: 	person, 0.029999999329447746, [323, 123, 399, 271]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,272 app:97 detect [INFO]: 	person, 0.029999999329447746, [300, 103, 353, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,272 app:97 detect [INFO]: 	person, 0.029999999329447746, [270, 99, 334, 208]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,273 app:97 detect [INFO]: 	person, 0.019999999552965164, [116, 147, 185, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,274 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 160, 333, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,274 app:97 detect [INFO]: 	person, 0.019999999552965164, [365, 122, 416, 264]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,275 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 149, 204, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,276 app:97 detect [INFO]: 	person, 0.019999999552965164, [145, 145, 233, 312]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,277 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 180, 279, 391]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,277 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,278 app:97 detect [INFO]: 	person, 0.019999999552965164, [341, 126, 390, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,279 app:97 detect [INFO]: 	person, 0.019999999552965164, [210, 58, 325, 244]
[33mInferencingEngine    |[0m 2022-03-16 01:59:24,279 app:97 detect [INFO]: 	person, 0.019999999552965164, [187, 135, 257, 264]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:24] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:24] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:24] "POST /UpdateDetectedObjects/person/0.71/258/383/93/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:24] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:24] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:24] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 
[35mSceneraLibrary       |[0m 01:59:17 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8191550>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:17 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e44d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:18 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81943f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:18 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa9337a10>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:18 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5750>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:19 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194530>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:19 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a57d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:19 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181390>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:20 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166fd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:20 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181730>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:20 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166270>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:21 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181090>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:21 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166150>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:21 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77d2cb0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:22 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77d25d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:22 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81668d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:22 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f730>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:23 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f610>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:23 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa89d6dd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:23 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7792650>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:24 : Exception in SendSceneDataToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4030>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:24 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81916b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:24 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7792850>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:59:25] "GET /DoVideoEncryption HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "POST /SendVideoSection/1/1 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,429 app:71 detect [INFO]: time: 0.06588101387023926
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,430 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,430 app:97 detect [INFO]: 	person, 0.7300000190734863, [261, 95, 375, 315]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,430 app:97 detect [INFO]: 	person, 0.05000000074505806, [287, 106, 356, 236]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,431 app:97 detect [INFO]: 	person, 0.05000000074505806, [167, 108, 310, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,431 app:97 detect [INFO]: 	person, 0.03999999910593033, [302, 104, 404, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,432 app:97 detect [INFO]: 	person, 0.029999999329447746, [353, 110, 417, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,432 app:97 detect [INFO]: 	person, 0.019999999552965164, [335, 119, 394, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,432 app:97 detect [INFO]: 	person, 0.019999999552965164, [146, 140, 236, 311]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,432 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 94, 334, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,433 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 146, 188, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,433 app:97 detect [INFO]: 	person, 0.019999999552965164, [185, 140, 254, 265]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,433 app:97 detect [INFO]: 	person, 0.019999999552965164, [179, 162, 269, 337]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,433 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 147, 205, 353]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,433 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 158, 333, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,434 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 60, 327, 245]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,434 app:97 detect [INFO]: 	person, 0.019999999552965164, [202, 142, 244, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,434 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 103, 296, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:25,434 app:97 detect [INFO]: 	person, 0.019999999552965164, [362, 101, 415, 205]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "POST /UpdateDetectedObjects/person/0.73/261/375/95/315/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "GET /CreateVideoSceneDataID/10/1920/1080 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:25] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,458 app:71 detect [INFO]: time: 0.07172489166259766
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,458 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,460 app:97 detect [INFO]: 	person, 0.6800000071525574, [264, 94, 375, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,462 app:97 detect [INFO]: 	person, 0.05999999865889549, [269, 97, 347, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,463 app:97 detect [INFO]: 	person, 0.05000000074505806, [308, 103, 404, 283]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,465 app:97 detect [INFO]: 	person, 0.05000000074505806, [202, 117, 330, 325]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,466 app:97 detect [INFO]: 	person, 0.03999999910593033, [352, 113, 416, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,468 app:97 detect [INFO]: 	person, 0.03999999910593033, [339, 118, 397, 225]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,469 app:97 detect [INFO]: 	person, 0.029999999329447746, [294, 102, 351, 194]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,470 app:97 detect [INFO]: 	person, 0.029999999329447746, [177, 126, 269, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,472 app:97 detect [INFO]: 	person, 0.029999999329447746, [361, 102, 415, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,473 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 138, 247, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,475 app:97 detect [INFO]: 	person, 0.019999999552965164, [148, 139, 238, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,477 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 145, 187, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,479 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 175, 278, 390]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,480 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 155, 332, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,482 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 125, 243, 196]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,483 app:97 detect [INFO]: 	person, 0.019999999552965164, [220, 98, 317, 247]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,485 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 148, 205, 359]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,486 app:97 detect [INFO]: 	person, 0.019999999552965164, [376, 133, 416, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,487 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 144, 158, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:26,488 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 175, 252, 303]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:26] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:26] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:26] "POST /UpdateDetectedObjects/person/0.68/264/375/94/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:26] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:26] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:26] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.loZ1yNJd3bO_5ZTia0rAGD2ZzBXzOGFwU6tzcJ6mBr1UkZlVYh4Q_jW0q-PuW_SCUWTTA7vu4fR9TVlL-JVCBXi7wjVG8ELShXqaz3oEuUZwVzFmcffPejsEd_0TohmQaaem-8kcX8AjKI7Ezno8VU6iRSGgzN7qGL7bWOnuNWEL3syvCi58E-UyMAs8rlsKK6eD66iHEXOPVcEO9k8kbSYT1K8UAi9XhlyHz7EwB8jhVBAQAmu3R4gT-VM6Ik_CZFfcesPvTcAvWhhrq3F5CIwu4MFk8jyOkT0T3R0sqah31u7KDYv-YD6BYz_dXJlKTDAYVvH5bSHjhv_uU45MwCdQjCTMA7orRgohHrZmK6Fs9521B7Pt2jBkLE9jcIz8oRukgcyVYABQ_3YcqZH0sQjUsF-KJNV-k-gCAzsWOKqwAajlZCWZGa1dl5GqzLvYfGQ0TMJZ3qKe-sTRvsPhvG8RmlnVD7XY90SrJgB1D-VppQkroF-ckQoTKnkfZF8e.q4CwA0vKsGwe4oB9.n4mHWhBgXNJNqeQdFJ8zn1-iKwZjaTQf_XtEQiu_nDmMHhkkdHdh9g3kiYHKA71tViYMR5SxVkSohh_hpTR5zRzCDtQFXOv8RnIMulomVpoynm-YOiYQa9I.TJ6ZL87DeDZGFkTIwP5adg
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,507 app:71 detect [INFO]: time: 0.0658426284790039
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,507 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,507 app:97 detect [INFO]: 	person, 0.7099999785423279, [262, 94, 378, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,509 app:97 detect [INFO]: 	person, 0.05000000074505806, [306, 101, 405, 286]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,509 app:97 detect [INFO]: 	person, 0.05000000074505806, [169, 104, 311, 308]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,510 app:97 detect [INFO]: 	person, 0.05000000074505806, [287, 106, 357, 236]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,511 app:97 detect [INFO]: 	person, 0.03999999910593033, [353, 109, 416, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,512 app:97 detect [INFO]: 	person, 0.029999999329447746, [338, 120, 395, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,512 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 138, 253, 267]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,513 app:97 detect [INFO]: 	person, 0.019999999552965164, [148, 137, 237, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,514 app:97 detect [INFO]: 	person, 0.019999999552965164, [179, 159, 268, 335]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,514 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 94, 333, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,515 app:97 detect [INFO]: 	person, 0.019999999552965164, [119, 145, 186, 257]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,515 app:97 detect [INFO]: 	person, 0.019999999552965164, [361, 101, 415, 205]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,516 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 156, 332, 367]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,516 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 148, 205, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,516 app:97 detect [INFO]: 	person, 0.019999999552965164, [338, 150, 399, 282]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,516 app:97 detect [INFO]: 	person, 0.019999999552965164, [201, 141, 244, 211]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,517 app:97 detect [INFO]: 	person, 0.019999999552965164, [212, 63, 326, 248]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,517 app:97 detect [INFO]: 	person, 0.019999999552965164, [208, 165, 312, 377]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,517 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 102, 297, 222]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,517 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:27,518 app:97 detect [INFO]: 	person, 0.019999999552965164, [377, 132, 416, 246]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:27] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:27] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:27] "POST /UpdateDetectedObjects/person/0.71/262/378/94/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:27] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:27] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:27] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,541 app:71 detect [INFO]: time: 0.06926584243774414
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,541 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,542 app:97 detect [INFO]: 	person, 0.75, [263, 95, 376, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,542 app:97 detect [INFO]: 	person, 0.05000000074505806, [288, 105, 356, 237]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,543 app:97 detect [INFO]: 	person, 0.05000000074505806, [305, 103, 403, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,543 app:97 detect [INFO]: 	person, 0.03999999910593033, [203, 119, 329, 329]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,543 app:97 detect [INFO]: 	person, 0.029999999329447746, [353, 102, 415, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,543 app:97 detect [INFO]: 	person, 0.029999999329447746, [339, 119, 396, 224]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,544 app:97 detect [INFO]: 	person, 0.019999999552965164, [176, 128, 273, 296]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,544 app:97 detect [INFO]: 	person, 0.019999999552965164, [266, 94, 332, 204]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,544 app:97 detect [INFO]: 	person, 0.019999999552965164, [374, 119, 415, 210]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,544 app:97 detect [INFO]: 	person, 0.019999999552965164, [118, 145, 185, 260]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,545 app:97 detect [INFO]: 	person, 0.019999999552965164, [95, 167, 119, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,545 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 332, 365]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,545 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 57, 324, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,546 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 179, 277, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,546 app:97 detect [INFO]: 	person, 0.019999999552965164, [153, 138, 230, 268]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,546 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 149, 204, 359]
[33mInferencingEngine    |[0m 2022-03-16 01:59:28,547 app:97 detect [INFO]: 	person, 0.019999999552965164, [196, 137, 248, 227]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:28] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:28] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:28] "POST /UpdateDetectedObjects/person/0.75/263/376/95/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:28] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:28] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:28] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,552 app:71 detect [INFO]: time: 0.0693058967590332
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,552 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,552 app:97 detect [INFO]: 	person, 0.7200000286102295, [262, 95, 377, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,553 app:97 detect [INFO]: 	person, 0.05000000074505806, [288, 105, 357, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,553 app:97 detect [INFO]: 	person, 0.05000000074505806, [169, 104, 309, 306]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,554 app:97 detect [INFO]: 	person, 0.029999999329447746, [325, 123, 400, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,554 app:97 detect [INFO]: 	person, 0.029999999329447746, [353, 102, 416, 290]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,554 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 144, 189, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,554 app:97 detect [INFO]: 	person, 0.019999999552965164, [342, 126, 389, 215]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,555 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 137, 248, 228]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,555 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 93, 334, 203]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,555 app:97 detect [INFO]: 	person, 0.019999999552965164, [152, 138, 232, 271]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,556 app:97 detect [INFO]: 	person, 0.019999999552965164, [184, 141, 258, 285]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,556 app:97 detect [INFO]: 	person, 0.019999999552965164, [104, 147, 206, 352]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,557 app:97 detect [INFO]: 	person, 0.019999999552965164, [203, 124, 244, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,557 app:97 detect [INFO]: 	person, 0.019999999552965164, [224, 102, 296, 221]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,558 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 62, 325, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,558 app:97 detect [INFO]: 	person, 0.019999999552965164, [94, 144, 159, 259]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,559 app:97 detect [INFO]: 	person, 0.019999999552965164, [373, 119, 416, 212]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,559 app:97 detect [INFO]: 	person, 0.019999999552965164, [130, 154, 175, 235]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,560 app:97 detect [INFO]: 	person, 0.019999999552965164, [96, 168, 120, 216]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,560 app:97 detect [INFO]: 	person, 0.019999999552965164, [175, 176, 277, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,561 app:97 detect [INFO]: 	person, 0.019999999552965164, [304, 94, 350, 165]
[33mInferencingEngine    |[0m 2022-03-16 01:59:29,561 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 157, 333, 366]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:29] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:29] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:29] "POST /UpdateDetectedObjects/person/0.72/262/377/95/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:29] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:29] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:29] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 
[35mSceneraLibrary       |[0m 01:59:24 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77ad270>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:25 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5fd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:25 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77ad390>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:25 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a56f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:26 : Exception in Scenera_MaangementEndPoint -> SendRequestToNiceAS :HTTPSConnectionPool(host='niceas-prod.scenera.live', port=443): Max retries exceeded with url: /1.0/00000001-5eab-2e10-8003-000000000000/management/GetControlObject (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa7789e10>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:26 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81913d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:26 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e49d0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:26 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa933c610>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m Exception in SceneMode.py -> GetSceneMode : Expecting value: line 1 column 1 (char 0)
[35mSceneraLibrary       |[0m 01:59:27 : Exception in Scenera_ManagementObject -> GetManagementObjectInfo :'NoneType' object has no attribute 'ControlEndPoints'
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneraBridgeLib -> GetSceneModeThread -> GetDeviceControlObject:local variable 'AppEndPointID' referenced before assignment
[35mSceneraLibrary       |[0m 01:59:27 : Exception in Scenera_MaangementEndPoint -> SendRequestToNiceAS :Invalid URL 'https:///1.0//management/GetSceneMode': No host supplied
[35mSceneraLibrary       |[0m Exception in SceneMode.py -> GetSceneMode : Expecting value: line 1 column 1 (char 0)
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneMode -> GetSceneMarkEndPointAndToken :'NoneType' object has no attribute 'Mode'
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneMode -> GetSceneDataInfo :'NoneType' object has no attribute 'Outputs'
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneMode -> GetSceneDataInfo :'NoneType' object has no attribute 'Outputs'
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneMode -> GeEncryptionInfo :'NoneType' object has no attribute 'Outputs'
[35mSceneraLibrary       |[0m 01:59:27 : Exception in GetSceneMode :'NoneType' object has no attribute 'Mode'
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :Invalid URL 'https:///scenemark/1.0/setscenemark': No host supplied
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4d90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1330>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:27 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b4f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:28 : Exception in GetSceneMode :'NoneType' object has no attribute 'Mode'
[35mSceneraLibrary       |[0m 01:59:28 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :Invalid URL 'https:///scenemark/1.0/setscenemark': No host supplied
[35mSceneraLibrary       |[0m 01:59:28 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:28 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:28 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4210>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:28 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814bff0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:29 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181150>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:29 : Exception in GetSceneMode :'NoneType' object has no attribute 'Mode'
[35mSceneraLibrary       |[0m 01:59:29 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :Invalid URL 'https:///scenemark/1.0/setscenemark': No host supplied
[35mSceneraLibrary       |[0m 01:59:29 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:29 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:29 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5a10>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,558 app:71 detect [INFO]: time: 0.06814432144165039
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,558 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,559 app:97 detect [INFO]: 	person, 0.6700000166893005, [259, 94, 381, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,560 app:97 detect [INFO]: 	person, 0.07999999821186066, [281, 97, 363, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,561 app:97 detect [INFO]: 	person, 0.03999999910593033, [169, 99, 310, 305]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,561 app:97 detect [INFO]: 	person, 0.03999999910593033, [323, 122, 399, 269]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,562 app:97 detect [INFO]: 	person, 0.03999999910593033, [296, 102, 352, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,562 app:97 detect [INFO]: 	person, 0.03999999910593033, [344, 89, 418, 307]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,563 app:97 detect [INFO]: 	person, 0.029999999329447746, [362, 108, 414, 231]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,563 app:97 detect [INFO]: 	person, 0.029999999329447746, [341, 126, 390, 214]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,564 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 92, 335, 203]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,564 app:97 detect [INFO]: 	person, 0.019999999552965164, [220, 99, 318, 246]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,565 app:97 detect [INFO]: 	person, 0.019999999552965164, [117, 144, 188, 263]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,566 app:97 detect [INFO]: 	person, 0.019999999552965164, [146, 140, 234, 313]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,566 app:97 detect [INFO]: 	person, 0.019999999552965164, [198, 119, 248, 207]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,567 app:97 detect [INFO]: 	person, 0.019999999552965164, [227, 76, 292, 192]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,568 app:97 detect [INFO]: 	person, 0.019999999552965164, [369, 89, 416, 168]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,568 app:97 detect [INFO]: 	person, 0.019999999552965164, [181, 164, 268, 342]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,569 app:97 detect [INFO]: 	person, 0.019999999552965164, [186, 135, 255, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,570 app:97 detect [INFO]: 	person, 0.019999999552965164, [102, 149, 205, 358]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,570 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 159, 333, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:59:30,571 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 144, 158, 260]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:30] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 01:59:30 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8191790>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:59:30] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:30] "POST /UpdateDetectedObjects/person/0.67/259/381/94/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:30] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:30] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:30] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,581 app:71 detect [INFO]: time: 0.06591486930847168
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,581 app:77 detect [INFO]: detections:
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,583 app:97 detect [INFO]: 	person, 0.7200000286102295, [260, 94, 378, 314]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,584 app:97 detect [INFO]: 	person, 0.07000000029802322, [280, 98, 361, 238]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,585 app:97 detect [INFO]: 	person, 0.03999999910593033, [203, 119, 331, 328]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,586 app:97 detect [INFO]: 	person, 0.03999999910593033, [325, 124, 400, 272]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,586 app:97 detect [INFO]: 	person, 0.029999999329447746, [296, 103, 352, 195]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,587 app:97 detect [INFO]: 	person, 0.029999999329447746, [343, 89, 417, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,588 app:97 detect [INFO]: 	person, 0.029999999329447746, [176, 127, 273, 295]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,588 app:97 detect [INFO]: 	person, 0.019999999552965164, [363, 110, 415, 232]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,589 app:97 detect [INFO]: 	person, 0.019999999552965164, [120, 146, 187, 261]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,589 app:97 detect [INFO]: 	person, 0.019999999552965164, [258, 159, 333, 366]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,590 app:97 detect [INFO]: 	person, 0.019999999552965164, [147, 141, 235, 310]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,591 app:97 detect [INFO]: 	person, 0.019999999552965164, [341, 127, 391, 213]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,591 app:97 detect [INFO]: 	person, 0.019999999552965164, [265, 93, 335, 203]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,592 app:97 detect [INFO]: 	person, 0.019999999552965164, [211, 59, 326, 243]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,593 app:97 detect [INFO]: 	person, 0.019999999552965164, [195, 138, 247, 226]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,593 app:97 detect [INFO]: 	person, 0.019999999552965164, [225, 103, 297, 220]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,594 app:97 detect [INFO]: 	person, 0.019999999552965164, [174, 179, 278, 395]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,595 app:97 detect [INFO]: 	person, 0.019999999552965164, [103, 148, 204, 355]
[33mInferencingEngine    |[0m 2022-03-16 01:59:31,595 app:97 detect [INFO]: 	person, 0.019999999552965164, [92, 145, 158, 263]
[33mInferencingEngine    |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "POST /inference HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "GET /ClearDetectedObjects HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "POST /UpdateDetectedObjects/person/0.72/260/378/94/314/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "GET /SendSceneMark HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "GET /SendDetectedObjectsSceneData HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "POST /SendFullImageSceneData/416/320 HTTP/1.1" 200 -
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:31] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:59:31 : Waiting for Video URL - 0
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionDroppedError: ConnectionDroppedError('Unexpected disconnection',) caused by ConnectionDroppedError('The connection was lost.',)\n"]
[35mSceneraLibrary       |[0m 
[35mSceneraLibrary       |[0m 01:59:30 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77e4670>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:30 : Exception in GetSceneMode :'NoneType' object has no attribute 'Mode'
[35mSceneraLibrary       |[0m 01:59:30 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :Invalid URL 'https:///scenemark/1.0/setscenemark': No host supplied
[35mSceneraLibrary       |[0m 01:59:30 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:30 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:31 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa89d6a30>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:31 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77891b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:31 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81944f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:31 : Exception in GetSceneMode :'NoneType' object has no attribute 'Mode'
[35mSceneraLibrary       |[0m 01:59:31 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :Invalid URL 'https:///scenemark/1.0/setscenemark': No host supplied
[35mSceneraLibrary       |[0m 01:59:31 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:31 : Exception in SendSceneDataToMSPipeLineThread :Invalid URL 'https:///scenedata/1.0/setscenedata': No host supplied
[35mSceneraLibrary       |[0m 01:59:32 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa814b1f0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:32 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4a30>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:32 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166670>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:33 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8166e50>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:33 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77d2b90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:33 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77f4750>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:34 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8191cd0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:34 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa77c1d30>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:34 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181790>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:35 : Exception in SendSceneDataToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194b70>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:35 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8181230>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:35 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f0b0>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:35 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813f950>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:36 : Exception in SceneraBridgeLib -> SendSceneMarkToMSPipeLine :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenemark/1.0/setscenemark (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa8194090>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:36 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa813fa90>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))
[35mSceneraLibrary       |[0m 01:59:36 : Exception in SendSceneDataToMSPipeLineThread :HTTPSConnectionPool(host='ingress-prod.scenera.live', port=443): Max retries exceeded with url: /scenedata/1.0/setscenedata (Caused by NewConnectionError('<urllib3.connection.HTTPSConnection object at 0xa81a5630>: Failed to establish a new connection: [Errno -3] Temporary failure in name resolution',))172.18.0.5 - - [16/Mar/2022 01:59:41] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:59:41 : Waiting for Video URL - 10
[32mSceneraBridge        |[0m 01:59:42 : Wait for Video URL from SceneMode
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 01:59:51] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 01:59:51 : Waiting for Video URL - 20
[32mSceneraBridge        |[0m 01:59:52 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:00:01] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:00:01 : Waiting for Video URL - 30
[32mSceneraBridge        |[0m 02:00:02 : Wait for Video URL from SceneMode
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:00:11] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:00:12 : Waiting for Video URL - 40
[32mSceneraBridge        |[0m 02:00:12 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:00:22] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:00:22 : Waiting for Video URL - 50
[32mSceneraBridge        |[0m 02:00:22 : Wait for Video URL from SceneMode
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[36mEncryptionLibrary    |[0m ================
[36mEncryptionLibrary    |[0m {"PrivateKey": "{\"crv\": \"P-256\", \"d\": \"wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY\", \"kty\": \"EC\", \"x\": \"tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM\", \"y\": \"-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60\"}", "DeviceCertificate": "MIICmDCCAQCgAwIBAgIGAXrrg7qgMA0GCSqGSIb3DQEBDQUAMBUxEzARBgNVBAMMCktleVNlcnZpY2UwIBcNMjEwNzI4MDUwODM2WhgPMjEyMTA3MDQwNTA4MzZaMC8xLTArBgNVBAMMJDAwMDAwMDE0LTYwZjYtODBhNy04MDAyLTAwMDAwMDAwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLSHIOXNx2I6SiM4PDFvHMfo+BzXREevONRfOauwOOXT+RP+slNoPURPyGY6u8KkG5xjBXP5q56Tm+x3NFu3i62jHTAbMA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBDQUAA4IBgQApNGEw61+I5rgmlab0XO1Eq6agiJjpK3Oiob7jqWevrIrob5RdsRJAr6hr/0Kv8NlgL6vBwpgNpskDq0xc4Jk/9yRxYU5btkDCG9SpXcPUHlXui/dAoYG6C7qyCy7xYXF42LraInOlDHnwrYVcamXVh0lYucqD7MWCMex4kFd7Gl0KwsaZBhfCDvyyKsKkyzvIvG9khDEiRESM0vqStRRI0ffqF5M1xXKSO6KJU2nhO3Vq0Ltaj6Y8i9J5JoyP1NxAJyZPbUbdDhfJmlStUgwi8C8YdAo9hjK41S9vkxV10mfBYlyT4MBX6tPleOe9I6qkFvtpm1xyfmeyKuIucRx2uQYOzsCu2/ov9UfgiAx3rPyovvpELSfHcLSfQ84lx3UrfMgkMh7NTwCbTcfh3hBuuORfY/9fgRpNbeZb5WCcQofrgmfG2vaeEubahe92p1xYZlXN3Tfcy03VLPozo0BQc+ltpJoAB4uc5NdCzhOtdbft7C/ZtwiLpmiOjT8LNTQ="}
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIn0.NtEGzvdLJVar1C5ECV-TEIyndVm-hwYI8FmZGLaLJPDCdf5ZWssC766bNJM3WOHUgw9tPu1ngRcSutUefzb995NBa9yMB17V6HWkkavI8KlEgx2n6QKmBSEKkDjZV2oR2tTRpgadnlow4VofnNJwdV6DHUfNk0P0uBIMLxKlpdWO9i5bpqFMlJoB49QzsTZ8GTFvhuNyJO1U7mvG8WDyRukMzH5eX57PcY67zaqNVFtw3It0j0kuxVBN2r3fnJ9mhKH3eHRyrsBclnrP9BhXCc4Nxn9GEYVxvwoyzQYwvbdtNls7Xkga6h-xglXrJkQrCliA7RtjDiQwwaqs2SC1wWTjS3pZLCKFl4N067O7JCvWM4xziaZ5Qk7Mmq_vQyRrekMZAi0Ah87KfZXSdBSywikrhuWhCfHKc01AwSLn7fJ9Sf_C1YcpPKT5g3FAtL7Fm0dmhLMjECzFy8O2xcCOpo2jUZ2fbTedePa399y_7UsWSUjRkNzDpg44ZlxbcC_h.Epcd6qaXQN36bA6T..SYZG-JHyexBPMT5XICDGcg
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:00:32] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:00:32 : Waiting for Video URL - 60
[32mSceneraBridge        |[0m 02:00:32 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:00:42] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:00:42 : Waiting for Video URL - 70
[32mSceneraBridge        |[0m 02:00:42 : Wait for Video URL from SceneMode
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.lMFcLBOF0lvexPX7tspfpoLGJI1OFTFsYFEAdzCRGLEpCfWCheE-pi095XkBeUo_WxTYfNtyvCa6Ra2-DSW-oxcV6l6zMW6KEMYPw2wdkcrpVVBgIMb9WUhvohBUbXbdnbs8R5Hn4xSEUc3TlX5Qja3BBRiRpuhqI9oAjKHqVEXapYGlhR63-6vDOdjaSFm8pLN6K8zZ-2izUEnhl3XH_NCKvl1SzE5CyfpBCyPBAvt1_hohkwTHq-czun6xiUIywQGWnKJKtgxwbvVEnJKwvz-vgYehrmqKD9cLYUCBVF4GQlJezwVopjsFpJJLVuQHEq7Wpzr5rBbpBnzFYJexsTfO9dllpjE1LWO2Ptrq5KIrjg4PpJuqXAuBrouuEoAK1_fcX0r5OD72mK68cYB03sk8l2tnnNKcgDi8bSsEZnAFunVfUt96-RbyViGOU44GifH4S4DskbpWV24upEf7UTuhEM9a9yH2_msr49VtdAf9FnkLmDZj_E0877bJaGdr.Ij1Lo1x81Bk_7AGD.w7pnYQDdlMgIWPqBlU8kIy5BxCsCAyqp4hlD_dxDuqbtYXG1dpP4wzPFrMVjFcOk3cb9rBB8FpE_-_6TJItdJpnHq94vhjv8y3-s9laCJGo0Oi4_HbtN4-AvbK3YLPFl9oOoKs6XLlk94izXXJ9TRHdrjYhI5ExiaPsDc5OZ1TjMpWkcBPSw9zSFelTJhNo_QNNmOy__rXaVOk7pg25GmO0oOVmDAsIc15UIBzhHi_-dsnunCrP1_MWm6dULWXvu5hMQo2oDw_KQIl_eegB1cvWxG0IcI3nh_BeuKUMJVvfD1awT9BsEs4jfjYakbbpgiVIdGGMaDzEgAWEa3tx0RhJlExBObtGGQJpWuqxWilrOUEBghJsoZf1Kle9z6OFD85Wl1Vuokc15EDgl0RX9dTncs9So7qo993zy1CcTo7fwb3HPjOSfUjP5t9HnuUAUk-puo981oYTkdi7P9cJDwZLov4-V_9VjcrMvevfmXZR9oKdwjRwbnWkEI8IQtaIhqfzK-XDgg5iOuRlw74MoIQONkClo-VAoaEk912BCHJCGt25kGXqf-QIqJnxIPef3HipmAmtuCRf1NDhx0F_1PUhB1O1IudNdgEZxY7qC_Er4oGcJboHPraFBe4snzv17ejAIxqrJT3kwaJL-LGdam7yW7bsqDKdB_ZTyZ76Yq4FNKYO3zDqJZgvekfRKKsOd2BDTq1nOYq-YdyOf_ck5wvmEPUd_wuuEdXJDgc-D_WULfQlbxicfoCRBcu5b9_gK3XK5dISgODnTezb0QhrUlUkD9ybnIUdVjUb3goLnuUJMX_W1yYn5S28q2VokbN006VasTCIbznOVhkmz8EHRLcmS_hxIwvHv_pAnC19bYsCfssj6MwuztiJUZ4uk8K24v6Uld3pgxlUzrZXT6OObA8Ce8tEMIvTltyFRO5bQckBxlu7e-deSv5_5AhrWQASbPWQxRq6bfJQQDwfeih0vDOYO-VoGzjnK7DYta6-tS2vbA_gZVAX1BnQ2mUUz43EmsixCTwK4kFJtOYt68UQMwhwlN1IH9G7TzOu2Plvi-9YGrQctnO1oEKYnEJpYaneLA-WitrP9vEqJHcx4kReK0AxFM3d78nE2Jt0LhIGawLxCtju-A3GnuF04AcUtB8C0WcLjh2mVpvYf4evXNZtjAvqgi7wkkqdgED3DXtc8A-48Lm-mAwK2oaQkiS2Ap01wwHUHlWs9CsRZkpcBr5QjwdZ_PpW35OpKG7WSOHdg4c8wL2elUpXDrlCLPyTjqiprS32OwVrEMA6AsAgi09dazqvSLolcNKvlER4MRqP-x5aC9XgKcQbDigfIc3AHYlt4-ozggyCdreJJJHwJWNNOMSWqPpk0r8sVZJVPSTywqPa1c1eHnUTTQZDiw5WLNGcX4lLB3Zl3mpRxYfwPqYYMpmH4vjR-zzofA8ALOPq7NwgLfE1aJ4WMzgQiBziBP-FHP_N7GAq3Wuhj4IeQPmlpJX9N8Xnj-bAI6G0FwQ2O_7v58wHsJmyYax8BTUX3aKGsiG4oQV_bhNlENGEh8I8Je8BjPB12vqL8dzhKZyBj6CaYEgfFmkt_lTKpTYlztf1m-XAVPCNXQAwlfoPPjYulLGn8rNJDdzZByJByn3v3MVMWQ11yLfkAG00ne7aR5bVqNSkbmUZMQWFnUtGYKIkWj8aolurOEeUHERP5fE_shAIBItAqabERu127kJSbQhwFa2N67DIcicGGX-H0uotcER5QNr_aH43dA6cA5AJfOGlJi3VL__NzqVxSFa5eff7o0fyY7HKw4m7leorF4QdduQomXjxe8ylTDVwrLfjoA4b3zg574i8LGVUabXh3E-Heodh9yK0iarSe5ib5ObLhwcBGAumGMARzePuogyE37RrU3JjG0j7ax5mIcah3k4RIgZ_2KCG4YXd9qM3KdrHsEBRaifrXvzwlAd75tT7gh3FDg1CaleDbKC6HzCyBQj7BCjtDZrJsth6ynuS2Eh_YM_hrGClDpUAnKSrzGRvy5xZvL-_QNxJ75Ppa1xyD5Wzb_dDEdpXFnJv6KKHFmjabvxI9FvM9hqTswTzmo3QozKzd03MUsa5PyDftM01kxj9LlPsxTfhLlEJWzjbzHC1tzey1YbimqhuOMQIFZYEkECiVo1Cy0uC3NnHcFbKcKJ5IU4Hkwb2VAcNsS2VKMLxCCJpw3rcElfe-tPr0FyEkYUe7aD1NV-_rdxfrxgnAcEn4Oxz5zZs76hygdH221IcSUNRb3HrfIjaaiBw3zuJHbhisRUlgmzboB5YTTvPusnsWgaZLaKqrYXEZ797kiZ7RLjBdo3wM2-9TVwSClK-3Uc0eNWZzDFVSxYLVFB5F0RWlzxRNQ4uIY0pHWhrlThDdi2XQAzyZpcm3qIzJOhXblH_inJ3SCdyN5tXfrXraO4gxYORunG818wUW2kcpsKOLCNZHMokUk9C__WlJr2dnXi0_nJM8f-fZXYswDkyC1x9QiQwzQHPCdAbIsk1dr0K69O1dLtuw4Hh1a-a992RnIyhuWykMK2mANRkY0zHsN7_1mi5fcv2XJLzk3Etg1v109L0_wXzB0so08-6QNGywhzwxxp4FPqkH5ScWwjQ9QFaMUDgSWptC_QsuY9dPpgCQHqzHdJOu-TVUGISjRqcxwv1ercGOmx_3BsQP9KahA_73bvXqkwCt6tRub-OxE-FJVXxGeyFmp92ObS5p_F0zqhm-NOKdxscrz-x7fUcQfDsJp-KlhreRl2Pm6fKo5etEc0Iof65LL3fzdGVQhJNOKFwpeHsusa5bQUXit1OpquBI5x9f26XxWWxf7wnRaYN22-MgP6OW8aGPdnSpZM_H3sEsuwsB21n4tuOn78Tn3G0hUlW-gX81C9toIUuV4Q_M7tuSNJykG5Vq2THB8T_farxrmzNNVO191upSdV7whFkYdryCfgKGrlezS1YSrs5Xny6gDdut9MMWR-q0hM9gM3c0oJ9EPpk95luNr9JOo7OiU-KOvn13_dxjwL4Jxyc4auosv744r7v1f6hsSgDlioQhGI19TpTYc9gMCYaVxg590N_IMDgnQegHFrv3E2NF7PO-j2fN5H6WNyIsmgzNptn--1XeJZMpQVaGO_0BtncqZBvMcxivrqJXMtUIsDI1BCsFVt6o3tJaRf41Jdg273wSF1iQQ_aVrV2Hpb7kCH1BiUF8WwMYmp5Ub7xfRSF6zLI3l3esrDb6tVnPd6Zf8LrYR9iFAZ-GyAXHjnS6s43PpoL3B6lA276OYkmNcSg9C7_Uxm7Rf1djKedV6UvEEXJIksFfvXWSvit-xVop04cZAvAMcb_GGIzHBMmVlccSrbafq4xNV-ML87pCmF3kby83_vfJ-SJDAAmXUUjIrHrWyprH1Qsv-xWVpd-4Xif6ZKizjILVfLCMPMoCtTFYhbsQQ2KPLu95v-nD5DVuBMqh-trECv3jKLYgriCl5qIKqLbQ8pLDMLDBnKQ0jDbcCs194Q6XmySReajWSHqM33RQ7v6Epupe39IxxkSNkKq0S14GBx-OQAnsI4yZXtoLaAusuLlUK-CTEaKUEZYsf-_EFvHMa79yMKieulPeahmNc6jiddzFv2ZRzWEHhNCxtN_tbP3JGAlB9aqhns1SuylQ-DcLmCiXVNojlAHTuGWNTGySatLeAC3j2D0P9hcak_vpokHaaon3oDdPTezJipsptg0H_O3_AW5a7VHlLpMSwQiEP2-cSwWpzFAQwtrxGNt5mCgGALX3uAw7OH1MxXGHZ26oiU9YSatwbI3k6IrZCe88NfXWrE3ruIVGIAx027Zf7RcKbzPFIfW-b5xLjxPS6kIciMGTAlJ2KttBrGKsS4oQNRTABydWhJR-jDGt9EzFI4guDzg8MuoQ98HB2RpCdhN6CjqaZdrvfc0-IyPgyFtYos-7R-PvtMVUDXkPzXD6rmiBrgXITKNYIjVnWeCy9U7eukWbbLNgAgI0suT7jSZzQehedNOgssfd0HYaw1VI1b8P2ugKb20iy5B-pRapzNAmq6Kaz-0KRBxxGOtx2EbgLMXlwFEfM2_JuIIWKBNtBUGedp6dhrlJTFgtob2k6J-xWbSRl47klqwY0kW0mv7UvXNwQXB4ZOdWmLdjN4ZTvx2BK8kLUkDhAf3Fd-6CVTcGkp0R8PvAjae37ri5a-8G7h-UcwYtmA-NzWLbHcS0r4XXzQtHLny7gurhSBg86bzLqrUJLSUiu8PXtc091zmJ5O1zcLG64RBxDo1m_1CsVDAa0FA_BCIddupT9GCLorvM97V5mix7_7MrlaqG6xL87u70p7HXG-Sftstjd_OrRrS1M_-JBv8avY_491YP24GsO7hjOfQGAeR_Lwlln4wkniOa92hB6ekmbtyHYaYdE_FVDyoXkF1DC5_WQKjK4oxPR6B0gDMsa3ZGKVxpYx77_cQvFXmTpRTwDSicHRTg44x6Wo8EYm1r5SZSN-xKyT2Zt-e3HJTGjB6nneLi4REIrEVe86EQy-qyjlgWCPqfZGvbnEZB1zqrnnwQfeqv5GluEhsrbAGfECFWmAUsPxkdHqxmXrFfWNyIoilsaCDWhK5aTeo1K1mwJT6Byp92YS0rhvOrVj3fey1ZmgZvMId27jhcL6Oq-VU_HqBhStVNA3o33DZ15juUMdVbPFTek1O_CN0pBOw8P3UwK1yQsjHHkHLVfV0kS04TWeD5vLsG_Er-M0fk8rt5uCpIR0CmkHku1RyyGVzQB13npRsbrcomYURN78K2lncsmrcwgJpOWhGGWHpvvx3HRiTTX3VrGRnY9mdRbdkccbtcCSBTgKo1kH3SzH7tkV-bNmkqdO0sEwtM8SSobg0XowvNii0M7KwawBhEUJ5DWP_IRlsfiHbuBn_qI67OuGAJZztJxzBcwBLIbpo5dZ4VpI-ZyAtkq4n5hkfS3p3ShuORMxp9Ov6YuXGAp46py-yg_WAl5z5odOgAvRUJhsWAobXs8_lPIXyABUacfJVNec4XzZoWp0c1ucnV39r3GhVB_nF9IeoTQoHYRwbHaevJkrDQwOE-ltPHq8DedMtk62bv95t7QccE1G3Gksnl3C_ZG729sWUXWuYzV6dpIYpvJvDKjSpJ64PScnXstwmQJnV2ybsGZtHWp6qP7M2vbz3gxCnscxAkg6t_s5GDjSnQCKqT9k5dMCzYzRnzBWwQRBm4SvgSDgjygzKr7k7foSPqm4lrYCEwa8qMO003SJlIMPCp-LAOwFs2W7a9xnncFA_xF6MJ74y4P8GNxKW4Q6ngfys-4TXVCVxxs7oH7sV2O7ISNFCLkMrYw1oBoACBgwB8ortJ-f1TiPIQKe1dN9wXOl_ExYUU7IX1nQkCWfupJYJEhHdB8SlZyfPFYKkXS4sPq6kmabs8m_xH0HBd3mvDE6ZKQZbr5Lrqo0O6pIsUDd_TlpmxIzV4l43ExUkIkpPeqCYDPGcmj2s95GnvkG5MRNmSawr2r0E63YNEaFBqid8yV6wE9hS6kDfchMYVzqe2KDQTzMCze8CaDFi_YcmMwaWqqmGHiI7ETlRjtUVUDoi0M5udN_mklQqBjfNZneVmgGmeoz3_SdYGL3ld5QCiqJ35FKfXHgrnhCoxFOnI36vge9kHrA2-3o_jzWmfv3h_1Gb7AwarBuEv4UKNAD06AnuVzeSbP_BWcX2nrcT0iNHtuCeukPi22rt0rfi2TEybnnqpnYR7EKGjAlm5ON-8PRawghbL-1OhOr7XQoVp9NlJ2a5b3ajyZq3eyWK7C44RrPIQ9HPkf5xQNqleVzdno7X9zv8xZhL_YceiWZSi9nSQF2ukQm0Vh9HkxvQ8OyLqAZb_ansKery6eQSVn99AgVRe_KWoj6pqblavA4SGGcSSxNXobGSn5BGkagLnjrGyaYCsVGXB9MezeBj5yzBmws-vwLjFt3FeAE6pfeTAyUXmmWNh4iPEoC48h6SG1TsidducYfw9q0DOz3isiHRzXSltgjpTvYyv3tjfFGQfdsIxJlbukuCZ5H04W8LCrDZidu95fiJ6koYU4J8m3fgQrQb_EeABkSe6Q74B_QJWrCyV09YdUNpPg0oDjndpoDUlAjfCEZBA1g8dxV4yMa7eY5MNGARcXODJaoV73u-J_zhMhRd1DuRrhlm0FwOYRWe3UkfwoxvpIq5lHtAVOoOXv1X8s7FDIHVZtUrledXhcVYlo0YeW2GUgcxLRcRW48FjK5ehrnXYL1RW9uLTLNmOkv26MmbzBwybHYy3WxDj-lEaYwm9YIWbVE_CKszUn5Q0buk_LPRd4ZSWSw00f6Y3YO0SLQKVjJ3YAlteB5TA0c9btydkmbFfjBZjdyF42LKh6MUzDu7n0mvHAkiwffYCPuRQLkYxFg.AHAJpAqCLZOEuQCrQBC3WA
[32mSceneraBridge        |[0m 02:00:52 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:00:52] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:00:52 : Waiting for Video URL - 80
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.d6ggtlJQuzkaKtS4to_smd7dVpiQOvJW5kwx7QEGOcP-7v_FyPK7I4d7w5ayncszsJk2a8Ntuo8fJ_U91QSUc4FPhraETSzzrIDtX7m0yt05E6b4VHu3qAKR2srtH5n1klTIACQfKntaDJD71qwpsM-2H3Wi3m1NwgHR90i2Dv1AKO43nLdC9zdqGuRuJ_b9s0xRJtJZ5yt9Skx2eagxX0_imJ5PM2JRZozc6mG7lj3Ja15tVYIip_m33eloDnpn9SGTsvKZKby6fLbIbbk9_Hh8YUtNMhc8HLP23Q6ph-F4HuZQLI0Y_5K-GkdQQfT_ObJcWwfIo76rwGnPmKIKVX3sdyOoqTA9S88MK-7W6Dni6fQsHaBDZgF9LmEyoN_A11DtGH7XxpKugX1blz2982Y0UpQ4vJ0W1v3cK9aZP_nRRWxK29oWluYDjnQ-w5E6_qpxXgppwomEIp3JV9icRl0v8rqjWwTg7Yx1qSleSf2ELRaGNWPeU86k9NLwVTgx.jaFvGvkIUfvYI8Bt.gOu-bqiZEAOfb4FMFVLiPpPzXr83VXyqWNawcFkFnYS6IflvSw4OHWgezfGuk7AV0v-Nn5agkkPTRTnG999DkaT4DNZS3wZpPuDZcyHOWSMqijdql5Bq3NE.YBHkU9yKP1JevDOtNYf3NQ
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[32mSceneraBridge        |[0m 02:01:02 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:01:02] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:01:02 : Waiting for Video URL - 90
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[32mSceneraBridge        |[0m 02:01:12 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:01:12] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:01:12 : Waiting for Video URL - 100
[32mSceneraBridge        |[0m 02:01:22 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:01:22] "GET /IsFirstSceneModeReceived HTTP/1.1" 200 -
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[32mSceneraBridge        |[0m 02:01:32 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:01:32] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:01:32 : Waiting for Video URL - 0
[32mSceneraBridge        |[0m 02:01:42 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:01:42] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:01:42 : Waiting for Video URL - 10
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[32mSceneraBridge        |[0m 02:01:52 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:01:52] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:01:52 : Waiting for Video URL - 20
[36mEncryptionLibrary    |[0m ================
[36mEncryptionLibrary    |[0m {"PrivateKey": "{\"crv\": \"P-256\", \"d\": \"wfwg44lpFlzsR9QBWEC6DFisRbdl9NZypMbJA6QuDvY\", \"kty\": \"EC\", \"x\": \"tIcg5c3HYjpKIzg8MW8cx-j4HNdER6841F85q7A45dM\", \"y\": \"-RP-slNoPURPyGY6u8KkG5xjBXP5q56Tm-x3NFu3i60\"}", "DeviceCertificate": "MIICmDCCAQCgAwIBAgIGAXrrg7qgMA0GCSqGSIb3DQEBDQUAMBUxEzARBgNVBAMMCktleVNlcnZpY2UwIBcNMjEwNzI4MDUwODM2WhgPMjEyMTA3MDQwNTA4MzZaMC8xLTArBgNVBAMMJDAwMDAwMDE0LTYwZjYtODBhNy04MDAyLTAwMDAwMDAwMDAwMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLSHIOXNx2I6SiM4PDFvHMfo+BzXREevONRfOauwOOXT+RP+slNoPURPyGY6u8KkG5xjBXP5q56Tm+x3NFu3i62jHTAbMA4GA1UdDwEB/wQEAwIFoDAJBgNVHRMEAjAAMA0GCSqGSIb3DQEBDQUAA4IBgQApNGEw61+I5rgmlab0XO1Eq6agiJjpK3Oiob7jqWevrIrob5RdsRJAr6hr/0Kv8NlgL6vBwpgNpskDq0xc4Jk/9yRxYU5btkDCG9SpXcPUHlXui/dAoYG6C7qyCy7xYXF42LraInOlDHnwrYVcamXVh0lYucqD7MWCMex4kFd7Gl0KwsaZBhfCDvyyKsKkyzvIvG9khDEiRESM0vqStRRI0ffqF5M1xXKSO6KJU2nhO3Vq0Ltaj6Y8i9J5JoyP1NxAJyZPbUbdDhfJmlStUgwi8C8YdAo9hjK41S9vkxV10mfBYlyT4MBX6tPleOe9I6qkFvtpm1xyfmeyKuIucRx2uQYOzsCu2/ov9UfgiAx3rPyovvpELSfHcLSfQ84lx3UrfMgkMh7NTwCbTcfh3hBuuORfY/9fgRpNbeZb5WCcQofrgmfG2vaeEubahe92p1xYZlXN3Tfcy03VLPozo0BQc+ltpJoAB4uc5NdCzhOtdbft7C/ZtwiLpmiOjT8LNTQ="}
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWNkZC0yODBiLTgwMDItMDAwMDAwMDAwMDAwIn0.QYKOgjPRMclYCUZF2y5pJ79C0v1H83OzknmU9saJDBmWaQ9GalHtt-8ddT8o3QwxOxGJRkhQu_JVHNcska92dmaQFNeuk8ql9loMqGnhwYsjslnIYxTLjd5RBUHSnAxWu4UILBnMM7ZX_4owgArbpAkaEbFj3EVrL319BKwrbeenNSGmlfZaFmx6ZScpB7UpGUWz8jtyPpx9kiBTsj5MShjXssURvD9zod-kySdZSSnnhchoaESWZKuBoJinw0ET0Ieqvz4m_YXkfLOF-ysVG0ywjz-bA05IC20P3d6NLadYHJPbX3QwtaWVP2uD8truizpUApwGMFCvNoAy34vuz7y9yGvOckKuVWsl3c8tCTnoiMMMqYZPq4OVvTLqjnikgIdv7uFid0_29dHD3wbT-Z-SSsRXeJL9wTrmAsrtlWQ96Y_mzRxESVJps2lyNs1caVL3Ug83c7I-7AjLb-RR5odsXETW7hcu3t1J2bmyrmoXzpx24fICOAW6SpAlca75.bQuyeIL0noASPMaS.._W-Ey8rlguY1WRJesry7uw
[32mSceneraBridge        |[0m 02:02:02 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:02:02] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:02:02 : Waiting for Video URL - 30
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[32mSceneraBridge        |[0m 02:02:12 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:02:12] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:02:12 : Waiting for Video URL - 40
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.ZPv2OAH3ARGv3lpOH1T5ooYCE5-XpMnCL4lXi3luzhbaIAAGLnkx4xhya4wxfF5OZecaAks1iODeHDnQyAA3zaliS1UGTD8BCFsRitjhJTN2cNWX2J9yxbWajfxDJcvt4Uo158s2PToOMO0TPJ753vQSTu7DFpmiywF_gUOZXvIciJklR54tBX4CBdWpL6LQLGnfBj0qBhL-7rMDIXm8ffuCSZKGqwQgt4DCHrfdipWEBJmbOSnHIfYBQr20QoZWcbGB7ZF7kjwXvlo-hqeP2J7K9-qhfA0zxxCyd9Aj3D7y-uD9rd9-nfA_qf6DyyDJjkNloTiWGX3cLQmdbn0YxmUMub8agFCf_G5ijj2s93-C9zDACtw0tsvTiazHYzV85chHAqYlbiVoY2o3-QpG4aocB8aehqFAIwObfuMxPmnQyqeYsB-6UFv3hu8Xzz8I483zH7A2mgas16_us-G9hZ_TnT67kOv_88nYwylHb0PaNQjY05GbGEZARCoqrzAB.V_zLD4Ng0KXlFb-o.qrEP-Wc1jeHU1g5F551ElgYnA8lgaJlF9vZuQTZbp8DxZyoiI_RLCLPos7Ha749Ieu33ectaxuoVi0dIA8T6mCFlxsDie6wFOSEAWIyjr7C-FxPjSO-U61uvSNE3iIuwacPOcLw5oekCzuZsYxDUXWlgVZnPwprDyB9H1vcwQC8JPn42vDNzRxIfSRtJtby7IG-s9nqmuD1O3EqrIaVcB6oD2xwnr_tPNwsmgzQNMy9YYMElVeKZFwK_9KAxJKi2UETY0rv1yZd7vsrtyKTGiveM3xC_r-EX6Z5SGP_Kn4ZTsN7I4eCSW_5ZuAE5zqZ3T3xZpOqLASwFIroyYavKY-A451EedqmqKk5GBLL9p0GVaP-dLzQ7Cs6rrhFtqSrLHTRsCDyt180VNxUr42-cqucyrYuKTtTzFhXqDDjxnJ8hNdOqPZGUF2qePYeXvOF8T4MwxNrqD2n9ShOjzyOQWV-HJOALHJ2_BQ_VeZqNS1Tn9I8JjNrzh-Y_nKBfSrLIEEDYYP_MmMHTWTLl1sY6lo_Qmb3fqru7uRA-HKczwk0mrBR7W6Cmt130SBjl_tsrDIq1MbS5KzQOsEz4q_EifFWR7imYLeCmLqGmxcClAgW_zs1kQr1U9VGHG2bO9Edx7VJLUt5kphl_yNOGWZ6q-_vc4NbtYdOEVH57sr15wkSI5n0nG_KfAKG-zxvL8G6c4C36-HQfaUP9kUsqjJq_xvsiwzMTVvROmRQrwN0sOe3nM6loEzNjW15ZtwMjqt3IN_3y4ap2mVYqyuCBLkmmGOG5HwEKB8e1upuSMFSt9JJ7u5B2meAnFAwx-TcTwnIT_5U8j8xr0oL9qO5SvPgkXNdsd2WY5ls0Wxk1nDRLditi_FABvllLl6Zw21bv-LxRc__aOKDbawUHfHxKi0MlwnjYYoein3LUjzFzo-yQEk7gYXwB3-QgXvEgJpDzl7bGtwN9Eci29zWSwtdUYCvdOuPO8le_CHXvKGZl1vtgEJoU10ASTPpmig5oUVpHgen4S0iOPhna5FBWOexvSzFbYbsMMZTR4p_NMABLq2MJvKQXPJ5vIq_tsPSSkQMzzYN15pjUVuWyorqF8jkKzFCAi0mR51928JniiFe6s-LxxBfHkCX_wl_VT6Z0Ev7fQqnP_BaAndDUF3Q4lLu1-foYEcXIL7Ldk5wioaRhmEsw_O5YvBh1F1hzRy8qHrJp6sZJEN71_F2kb3ni-Qj5auXH4FIkEG-PDVCChEGCOwKjSkyjWDc71aBBXk6zrJiUI7vv476t4hwojHsOhixwud_ZrcZtNCexgMylk7tx74JcNev9bYL5RNTT0VrIopsqaZg6lc4dfws6Uh_nXeoo0jMtzgzBArldTYSfLVxo5zf1QrWfDNrLbaSgYqloXN7dPpyvVO_kpejVXAfWPKCDhco5V52eF_F7L9RlHI-AA5n4LL4_TKL_fu0vgzoD2yHjYPsC7CcriEY2Eb-cNq8NQZ9m7Qmb2L7efhu7d1rMwELjNx-tkSqbq63SsuRLCFThKp_1Yq2ltICCAstpnBgRea7STKY8ywAqQ_mJbhxndvuqpxumGbzqpLPy0B--9e8S4PSn8S6iyui1O4Sc3xk1-UPQ-KJEOU5f6tn-4c8W40TXVydAhQn3h8gf43poIWdBIbK6bYwcrA-rV-Nw3Bh7wZgrf5Y_1CGfFi9T07sno7yY97OJgp2rHwVAGLSzzp4HDUJFoPIXhs4HnaJYn62oqB4wj77z5s7xYsehoosb_x7uXJcoKyoPNqMSBXmwhnUloFB57YTVkCYxFW2dXKZMUEGH923Js9hbwc0wDIJRp1cCWNm_p6lft5R6f1hQYN_qP11qXo81JSetC0ONG9Y3qRbzpJqoySI8-AsGczO1AVsSz8aQ4JfLv2JZG3QRyH--IScQF8Jk63v5sziNzb2i55P26kLLKqnk381N-1v4Fs-I3f5UictHkPDq3S7le7SJUlI-w3E3MwzLRGf-p896DOGjOy5kwerejIjylurzGcrE7KxuluO-nuIJccSj4sH23lR-s8L44dzEyOjHGFeXxn69V7yRUzXxSHR28YfgWYBGrri7y-G3RjWwUJlgHqPIdMtZwUF3AvsgFCUg-4n1XdEZsd5OvSb6vQgKfNURXZj3GZZ9z_LpkA1AhbXglEYmPi4yhp_z6RndoIFqh47TS3LHaKVeHUfbbbLdzaiVKOBpbY7AKrD6RP5pr9DeRD7d0LGlSiD9Xbx8CfIukXULkFAkE95tap4Vr_Y2m4jDUwVzGcPBilNMLYZGHlnCwXE5q-ZDGRD2bsUUKtvvfyiP44NWQPvUS7pK0S-lG48RMTunWID2SNBnfNfvvYZ4kj9AFIYFASEj4uFM89dBq27PJEaWtQ6XcsaaMzWkzrZJNr7Y19LRlkp8gF1x8k19c4q9IyO5KE_z_OpZrgTPRa_NxQyPQ7VEon39dO27HA4iLzU21qTLTzgoZx2N8ptEU7AbSW6ZnTFmrsyC6c-4Ep64NsP81uomLVl4diJEtQnFvK5HSjJNSjfwv8q1OMexyrw7yD6mC1xaNYtRbIjn4lDJ7VrpmMcQ3xBf-K_RS_BBHXDFHaMgQ40xCVX0_CZ3DdhXXK9UdrCMF7Q_R1s-kjfU2mglGvhx0G60cH-GZDnrKRmXrFxsjXLUKHNSBYBmHp8ltOq9cgUZBs-lweXucOp5fLRJlzO75Ex6ydgOzsYjNfRkysfPOKeZjivbEIB7giK3y8kkWq2ABDb7bnkELnyG0o0eAzHd386OGFDbUjayx8doBSFWb77Je3JXIvMfxNyDrmldj4BIdGZVhrJCYQNQpjtr83rCF0OQG_e9R7lQTYcf9V_NmzoMkqyWLci5W7viJ9pLVMQnKJXudDMn32rpFK1EAxjkHR5mWCy2LyxgZcAs6XWD50OA7p7XBKJT-dnriit34ln5XD3oi3MwjxkwtQ8_xgwo6alg92dRKZ_WnDuPtrjWD33Ob87Ol5ykMSwVzIXKsXEWNkn8FvZQtqpY6n7BUhCN489o8ohdlfr4U4EUI7pjEcI5vmAwri_zshIY8lQSz3AnM7sYg7fGbm71v_uju89kxNtk0c6x8YJf68ytLLT4aJXiiY_2i_ePW35Y0YeeV-qgKWG3jukxi9Ad7hdbaZxGtOmasvQpvSpbSaa4AjznQyQBAFPUHcbeG3SwlQhs1f7L8A5uYzUGTL5Wa62zSxzWbBk6P1sH6UQhCr80dYU5PY13gBgPBu1rXYcVfcF9phC84hud84XYzdvbbkpqCC4A6qcHDBR7RDa6ULHmHl0BbYE7_a-FvgnmtaBeYaNjKDtfbei4KZLDRDL0JLJABC3YNicET4AxwHK_57lbwWISuoNLDch4grrIRtCugyUehQkaPajKdb_9Q-f10DG0yyMyqQjzZezU468cVovQSqHKsqilCbWstbu_C7LHToClNadwLS4Ac2rP_2bshitmXDKMMiBW7Xt5pAFF2vdqT3X4XD9QT0J-NbQb_A2pQgYZcDWE39mvC1ZV_WLHz2A0J44URbLd8gG3KxtocUpyuheb40ohYM-QiRKy5dnODgUSltR1w2QUaB3RiStvsiyD04qAM_2gsGVQqFCLGVkIbkD0Kt0lV4_O7Paa01Y3KfRgqcrJqqAsFiQ4o9be90GYIlDjvVn0Myrbzy3xwnA7Tl9e-p0y8ePMT70Iwhv0syg6oY5WEVv6qnu2tQAjbvQacqaBIGXaspfxk68CmUtSrr9ic5eXMhzGhVJ-0p6UovQaXpixQwzjkjMJF3U9sGcVt_3r-Kp4e9RpsuVeBIJu2v-hm5XEjb15qNekx5ssXyunixbwFAeUrmrz8Fce_LGN12ZfQRsrDpKcFfe7MadG4pkh4YrvEXysxRKsH-daaSBenzUBcS7wUxSeOAFOrUQ-MSMQVGYPCacteAoDkwpEEnhIr8zCDakBaeGQ_-DBkX6nI8_70C__rTVz28Ut2k3a6zo8XRJvnKanB9V2rO2-w-9n3ue_-5s0NGCxLzqAIacVin7PSY3EoMVE4PlglHC1PSC1A_bJkdRiyhKWIm9ffjrvhSIH2oRaBQ4EmKwJ35OEnEpBr-QM3TaLtnQXdGTrYGefrEDVjwfT6ls0SvjGWwczIxv5M_F7Df9eVwbIr_OunqqXt2oaMNI5U893C-Y18uV2c6X1jFIvGHrcLe_qAUVlSnwedqhUfT8t-STN1Fa6Tua3d4tyrqD6m03AOsnxb_vPXyn9Z2zDowyHLg9g6LqsguFDNh_gPHxcnYI3xvKx-uopP8wFb8VgcAlReRR3hhlViW67TVNQLuqDGv_BQ_OC265YPYHSO063heTnWG12GJOL5_qXlzZ8IqEZzUDY38WLeQlOU9-KNKl39ZwNgPACp04PCCXJa7vnnQszEeWqw_Twa2TzjPZ_oswzQD-2Pg12KpZC3RClOBC4e_fy2Kppb_QvVZrc1MXKIWOLjodYSww-9qGoPrJfozNfgvG40wdaX6xFjTipA0oDxz82S1Lip8RW26rRxTf5dmleEWmGWtudQBvAWbfcALXUSp_xupoliiiJQbQp3VHE5HgmAHP5AYwjWJR9WDpBZHnGeqgLPy2-psVnS3hBnSts8qUYL64ImVersQeX2Sp2mau_H1TOKdyCDq1-yNddbzjXfc4tLWyEauz4W6Wyd3S7AYoUQIS_BZrk-vE2VVcvyljuSLvQOxeaiUH79kqfdNxug1Pkv2wwdazgE12nooqctOWVJFcQYQPPoprDsjcoWv99a_neaDRqplvZvjQeGCE8a_4VB6O2RQDJzM1EgESNvFOf2qvN5cdR03UeNrgjZsLKMia_Dhc0BTHF6F5xY1hPyk8VdphF2DhGEQrzo2I8eVkpwZeU8h3imy4_IZPYkvo9J67p1lYghHa6qOEGzp81Wh7ZsbkkCEHmgpVdx7b9UMu1ScPOt5H_wIIgPw3befene9nnnmLbl3uTnEVpOSZ7IAI-TByQXZjNPl23gSy8ewr2uWLNXR3cLcKMV1dhRTJKQtu95KQwkojj-Y3ONRLalAc5lz3Vbfp0U5evef8caYuBY4n0GHqaxhhrzfyxT6wB3lgwTO5qZWAAbRkPYN0_GmKx_xnJQfQdYewmQIr_huqW9JXiYu_Afj-XBE0cHt5T1QpdEq86ia3PQhsh5LvHY92kGoOyjxjguZw-VPxuVWZtKQEwv6-gn3b6qPk5LyrpV5w5NBelel9TLeOPvBxd1H5X0xO9yab19zFE5P16v_yRgzNz0JRDLNVHImPd4kKnWubd1lI20FezFrebhb1L9UYrCy0MBp6u9RMt1vc0ehUbI5_Gc6eF_qbhP8PiBY_57mttkZ-cqSPbBFmJwNNDvS0GwRWA-Of20YqZULGAeG9_cFEfNDlckEs2dhU2oP6Eh1NONSuuoPdHwPHic-PMhEJ3TdbFVdu_QC3XrSS5QS4Vr3jUg4Zf0cwk5w1_HQVVLh54VsSY_alMp9DEBYBZoqd_JV4oXhEl6d0_LYHwegUhd-axxEm2Mqrjdt0h95N0f5X8eSA-2esai_8O2d1qd5iF8NgkZ3Z2sT2U8nRpuf1J9UTb1UHwhLnh2R7ccqrgr-iIn72Sy0fBtPBWZDVUSIh7tKmRSLGL2wHz_08fqyLoiY4XbxthA_9NEsl2vdCZ0xui7TNOLTyIM0UBYD4t45JlCkAXVu52beTB4-v0SoVT8QQs3rT7QoWpZjbCiN8sgzhmVH8jsRWJ-uhePB6eVCt00cYXGvIB0UfMulnKy9D53bjQ4HWgFYN1GSO0rGf5HqYD--VON5HLnhs7CL_buszx2yQcQgdIHYSduZ4ie6eVeFHJ0ODXFMZyw3rQ4PFS0-jCJK-vPF2jVkywR-jG6ZqrDdaht6hLtEXZCn2VVLO4s944GF2nYYmzJ8tRw9lYpSS6SWcn5gpc4umaJLA8fLa4IN8v7zd2w4H-0ghWJfitFSk8w8lTi7USsb25MwainRZfIfEUr73y0FjAa9Z3QSXqWZIBGBoKgX-bKlUMAq-Ke60sd7CwzPzmTJeM7r-TaVx-YWgFZP9Y6VziE_JpIh1jTN3loI14Hyiu0wg_A-6OaEl1vevljXa4uPjyZs8SMzygVDNk0EtEpxZwHieV6uKCeTQy-bDkI9lEcu03NYeL2Lbwzu2PvUF4m--eadmXY5oh7tSEemZ_cz-WkjcVUiuARcVMQHQGoj8-Yz05wghEaOYCJxttJE82GUhHDkjTLWkf5LNCQRjkdmz6nE0V0vdlJCey8aXZZc7y0fqlMNIp6ouLPjvt28RBL6qT9EK3b_WDBJJeFPxb-iAOJcwnERzNf7a_1MP6vabh_axaatBhqQ9G17MgFTtFr1CXts_lj1pqiQ.t_1hk7yFyt32p6wrgJRXXw
[32mSceneraBridge        |[0m 02:02:22 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:02:22] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:02:22 : Waiting for Video URL - 50
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m Serialized Encrypted JWE: eyJhbGciOiJSU0ExXzUiLCJlbmMiOiJBMjU2R0NNIiwieDVjIjpbIk1JSUNtRENDQVFDZ0F3SUJBZ0lHQVhycmc3cWdNQTBHQ1NxR1NJYjNEUUVCRFFVQU1CVXhFekFSQmdOVkJBTU1Da3RsZVZObGNuWnBZMlV3SUJjTk1qRXdOekk0TURVd09ETTJXaGdQTWpFeU1UQTNNRFF3TlRBNE16WmFNQzh4TFRBckJnTlZCQU1NSkRBd01EQXdNREUwTFRZd1pqWXRPREJoTnkwNE1EQXlMVEF3TURBd01EQXdNREF3TURCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkxTSElPWE54Mkk2U2lNNFBERnZITWZvK0J6WFJFZXZPTlJmT2F1d09PWFQrUlArc2xOb1BVUlB5R1k2dThLa0c1eGpCWFA1cTU2VG0reDNORnUzaTYyakhUQWJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQUpCZ05WSFJNRUFqQUFNQTBHQ1NxR1NJYjNEUUVCRFFVQUE0SUJnUUFwTkdFdzYxK0k1cmdtbGFiMFhPMUVxNmFnaUpqcEszT2lvYjdqcVdldnJJcm9iNVJkc1JKQXI2aHIvMEt2OE5sZ0w2dkJ3cGdOcHNrRHEweGM0SmsvOXlSeFlVNWJ0a0RDRzlTcFhjUFVIbFh1aS9kQW9ZRzZDN3F5Q3k3eFlYRjQyTHJhSW5PbERIbndyWVZjYW1YVmgwbFl1Y3FEN01XQ01leDRrRmQ3R2wwS3dzYVpCaGZDRHZ5eUtzS2t5enZJdkc5a2hERWlSRVNNMHZxU3RSUkkwZmZxRjVNMXhYS1NPNktKVTJuaE8zVnEwTHRhajZZOGk5SjVKb3lQMU54QUp5WlBiVWJkRGhmSm1sU3RVZ3dpOEM4WWRBbzloaks0MVM5dmt4VjEwbWZCWWx5VDRNQlg2dFBsZU9lOUk2cWtGdnRwbTF4eWZtZXlLdUl1Y1J4MnVRWU96c0N1Mi9vdjlVZmdpQXgzclB5b3Z2cEVMU2ZIY0xTZlE4NGx4M1VyZk1na01oN05Ud0NiVGNmaDNoQnV1T1JmWS85ZmdScE5iZVpiNVdDY1FvZnJnbWZHMnZhZUV1YmFoZTkycDF4WVpsWE4zVGZjeTAzVkxQb3pvMEJRYytsdHBKb0FCNHVjNU5kQ3poT3RkYmZ0N0MvWnR3aUxwbWlPalQ4TE5UUT0iXSwia2lkIjoiMDAwMDAwMDEtNWVhYi0yZTEwLTgwMDMtMDAwMDAwMDAwMDAwIn0.XN-Y69N6Zq324N32vYMI9qupxwSU1NqhTq0xWoHWFwFyk0UGUzTDHPNr4rJwEZTh193EDXUr2XEf9Te2ANmsBkebg5uxeB0DoZ2vfhpXnVtWf8T73ldac32eAMa3Djcbi75hkhvR2_oJM1sIoiEJZTFosp-JiuXSpUDhq5FnPursbqV2yZOUFHB169kHuoh-Pbn4MgenB2fcvgTnn2iEwtXmozBQpg3TCZQs_UfrhCWW-qIAE8WEiVtzfobdnNPYTpikJWrQKi5pi_pKmXPB0b2e8im7-JycdpNjGnRQd6sGLPEEkn1s4FlA-SlSvVXfPV4_aP-AFTpF1MlraPK0Zzc0gxQYV1IXzbTcjhYUzh_lZt7vzvAQO79oW4dBcaq-9RjVhAR_L_2vd1yALW7WzFBOMRspQoW972mbNuu30-AuoZwQStNcar76jZkSiEGkfxV0LqjC6JPrklGU87R-iZujA1T3Y9r3UJtAKkF1ts5pzCR-JOV5srxTFS9uTZfV.sYO_CtsoJWTjIolD.zfXmDiKlk5SQ8bSi2dqG_-wmrhyzIbyVNkhbRo-trrpOJuMj8vVHcnmQxq08Twym9x2eAGgEFGIxGNi2sAg6qMWsR3V08iqYLCISuaqNbvKpM25RsDm3Shk.30VktGw8HWK7n9JpCmJVVg
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[36mEncryptionLibrary    |[0m ~~~~~~~~~ JWT Header ~~~~~~~
[36mEncryptionLibrary    |[0m JWTHeader : 
[36mEncryptionLibrary    |[0m java.lang.NullPointerException
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.decryptAndValidateCMFEC(decryptAndVerify.java:136)
[36mEncryptionLibrary    |[0m 	at com.scenera.crypto.decryptAndVerify.getItJSON(decryptAndVerify.java:66)
[36mEncryptionLibrary    |[0m 	at jdk.internal.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
[36mEncryptionLibrary    |[0m 	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
[36mEncryptionLibrary    |[0m 	at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
[36mEncryptionLibrary    |[0m 	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:298)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:857)
[36mEncryptionLibrary    |[0m 	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:588)
[36mEncryptionLibrary    |[0m 	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)
[36mEncryptionLibrary    |[0m 	at java.base/java.lang.Thread.run(Thread.java:834)
[32mSceneraBridge        |[0m 02:02:32 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:02:32] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:02:32 : Waiting for Video URL - 60
[32mSceneraBridge        |[0m 02:02:42 : Wait for Video URL from SceneMode
[35mSceneraLibrary       |[0m 172.18.0.5 - - [16/Mar/2022 02:02:42] "GET /GetVideoURL HTTP/1.1" 200 -
[32mSceneraBridge        |[0m 02:02:42 : Waiting for Video URL - 70
[32mSceneraBridge        |[0m Exception caught in background thread.  Unable to handle.
[32mSceneraBridge        |[0m ["azure.iot.device.common.transport_exceptions.ConnectionFailedError: ConnectionFailedError(None,) caused by gaierror(-3, 'Temporary failure in name resolution')\n"]
